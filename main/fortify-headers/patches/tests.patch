From ca2ede3b63b0b3c12a4059f282c86fd66024dbb7 Mon Sep 17 00:00:00 2001
From: q66 <q66@chimera-linux.org>
Date: Sat, 16 Dec 2023 02:00:10 +0100
Subject: [PATCH] Also handle SIGTRAP in tests

SIGILL is not the only possible trap handler. On non-x86 archs
this is not the case for instance.
---
 tests/common.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/tests/common.h b/tests/common.h
index 3c116a2..4c34862 100644
--- a/tests/common.h
+++ b/tests/common.h
@@ -47,6 +47,7 @@ set_fortify_handler (void)
   sigemptyset (&sa.sa_mask);
 
   sigaction (SIGILL, &sa, NULL);
+  sigaction (SIGTRAP, &sa, NULL);
 }
 
 #define FAIL() \
From 9d7f00791381217ccaa4d2da58a5c135ef4773b9 Mon Sep 17 00:00:00 2001
From: q66 <q66@chimera-linux.org>
Date: Sat, 16 Dec 2023 02:03:16 +0100
Subject: [PATCH] Disable strchr tests since strchr hardening is disabled

---
 tests/test_strchr_dynamic_read.c | 4 ++++
 tests/test_strchr_static_read.c  | 4 ++++
 2 files changed, 8 insertions(+)

diff --git a/tests/test_strchr_dynamic_read.c b/tests/test_strchr_dynamic_read.c
index fdd69df..b155f36 100644
--- a/tests/test_strchr_dynamic_read.c
+++ b/tests/test_strchr_dynamic_read.c
@@ -3,6 +3,7 @@
 #include <string.h>
 
 int main(int argc, char** argv) {
+#if 0
   char buffer[] = {'1', '2', '3', '4', '5'};
   const char* padding = "ABCDEFGHIJKLMN";
   strchr(buffer, (int)'4');
@@ -14,4 +15,7 @@ int main(int argc, char** argv) {
 
   puts(buffer);
   return ret;
+#else
+  return 0;
+#endif
 }
diff --git a/tests/test_strchr_static_read.c b/tests/test_strchr_static_read.c
index fdd69df..b155f36 100644
--- a/tests/test_strchr_static_read.c
+++ b/tests/test_strchr_static_read.c
@@ -3,6 +3,7 @@
 #include <string.h>
 
 int main(int argc, char** argv) {
+#if 0
   char buffer[] = {'1', '2', '3', '4', '5'};
   const char* padding = "ABCDEFGHIJKLMN";
   strchr(buffer, (int)'4');
@@ -14,4 +15,7 @@ int main(int argc, char** argv) {
 
   puts(buffer);
   return ret;
+#else
+  return 0;
+#endif
 }
From c59aa9ac0efa20e7194f6bb93635d0482f5c60f4 Mon Sep 17 00:00:00 2001
From: q66 <q66@chimera-linux.org>
Date: Sat, 16 Dec 2023 02:07:23 +0100
Subject: [PATCH] Ditto for strrchr

---
 tests/test_strrchr_dynamic_read.c | 4 ++++
 tests/test_strrchr_static_read.c  | 4 ++++
 2 files changed, 8 insertions(+)

diff --git a/tests/test_strrchr_dynamic_read.c b/tests/test_strrchr_dynamic_read.c
index 3b192c8..c8067cd 100644
--- a/tests/test_strrchr_dynamic_read.c
+++ b/tests/test_strrchr_dynamic_read.c
@@ -3,6 +3,7 @@
 #include <string.h>
 
 int main(int argc, char** argv) {
+#if 0
   char buffer[] = {'1', '2', '3', '4', '5'};
   const char* padding = "ABCDEFGHIJKLMN";
   strrchr(buffer, (int)'4');
@@ -14,4 +15,7 @@ int main(int argc, char** argv) {
 
   puts(buffer);
   return ret;
+#else
+  return 0;
+#endif
 }
diff --git a/tests/test_strrchr_static_read.c b/tests/test_strrchr_static_read.c
index 3b192c8..c8067cd 100644
--- a/tests/test_strrchr_static_read.c
+++ b/tests/test_strrchr_static_read.c
@@ -3,6 +3,7 @@
 #include <string.h>
 
 int main(int argc, char** argv) {
+#if 0
   char buffer[] = {'1', '2', '3', '4', '5'};
   const char* padding = "ABCDEFGHIJKLMN";
   strrchr(buffer, (int)'4');
@@ -14,4 +15,7 @@ int main(int argc, char** argv) {
 
   puts(buffer);
   return ret;
+#else
+  return 0;
+#endif
 }
