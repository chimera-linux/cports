--- a/third_party/rust/allocator-api2/src/stable/vec/mod.rs
+++ b/third_party/rust/allocator-api2/src/stable/vec/mod.rs
@@ -1899,7 +1899,7 @@ impl<T, A: Allocator> Vec<T, A> {
     #[cfg(not(no_global_oom_handling))]
     #[inline(always)]
     unsafe fn append_elements(&mut self, other: *const [T]) {
-        let count = unsafe { (*other).len() };
+        let count = other.len();
         self.reserve(count);
         let len = self.len();
         unsafe { ptr::copy_nonoverlapping(other as *const T, self.as_mut_ptr().add(len), count) };
