From 612d28cfe14d45db852aaa0128d9d0bd7b0d8e1e Mon Sep 17 00:00:00 2001
From: q66 <q66@chimera-linux.org>
Date: Sun, 30 Jun 2024 02:24:11 +0200
Subject: [PATCH 13/22] Define glibc compatible basename() for non-glibc
 systems

---
 src/analyze/analyze-verify-util.c         | 5 +++++
 src/basic/unit-file.c                     | 5 +++++
 src/core/execute.c                        | 5 +++++
 src/core/load-dropin.c                    | 5 +++++
 src/delta/delta.c                         | 5 +++++
 src/machine/machine-dbus.c                | 5 +++++
 src/shared/install.c                      | 5 +++++
 src/systemctl/systemctl-enable.c          | 5 +++++
 src/systemctl/systemctl-list-unit-files.c | 5 +++++
 src/systemctl/systemctl-show.c            | 5 +++++
 src/udev/net/link-config.c                | 5 +++++
 11 files changed, 55 insertions(+)

diff --git a/src/analyze/analyze-verify-util.c b/src/analyze/analyze-verify-util.c
index 8e83c9a..c0304c3 100644
--- a/src/analyze/analyze-verify-util.c
+++ b/src/analyze/analyze-verify-util.c
@@ -16,6 +16,11 @@
 #include "unit-name.h"
 #include "unit-serialize.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static void log_syntax_callback(const char *unit, int level, void *userdata) {
         Set **s = ASSERT_PTR(userdata);
         int r;
diff --git a/src/basic/unit-file.c b/src/basic/unit-file.c
index 54f2137..33a593e 100644
--- a/src/basic/unit-file.c
+++ b/src/basic/unit-file.c
@@ -16,6 +16,11 @@
 #include "strv.h"
 #include "unit-file.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 bool unit_type_may_alias(UnitType type) {
         return IN_SET(type,
                       UNIT_SERVICE,
diff --git a/src/core/execute.c b/src/core/execute.c
index 3e7ead4..52a5588 100644
--- a/src/core/execute.c
+++ b/src/core/execute.c
@@ -74,6 +74,11 @@
 #include "utmp-wtmp.h"
 #include "missing_stdlib.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static bool is_terminal_input(ExecInput i) {
         return IN_SET(i,
                       EXEC_INPUT_TTY,
diff --git a/src/core/load-dropin.c b/src/core/load-dropin.c
index fd45744..c8e6a51 100644
--- a/src/core/load-dropin.c
+++ b/src/core/load-dropin.c
@@ -11,6 +11,11 @@
 #include "unit-name.h"
 #include "unit.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static int process_deps(Unit *u, UnitDependency dependency, const char *dir_suffix) {
         _cleanup_strv_free_ char **paths = NULL;
         int r;
diff --git a/src/delta/delta.c b/src/delta/delta.c
index 3433250..b1eaa9a 100644
--- a/src/delta/delta.c
+++ b/src/delta/delta.c
@@ -28,6 +28,11 @@
 #include "strv.h"
 #include "terminal-util.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static const char prefixes[] =
         "/etc\0"
         "/run\0"
diff --git a/src/machine/machine-dbus.c b/src/machine/machine-dbus.c
index a4f04c0..791838e 100644
--- a/src/machine/machine-dbus.c
+++ b/src/machine/machine-dbus.c
@@ -4,6 +4,11 @@
 #include <sys/mount.h>
 #include <sys/wait.h>
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 #include "alloc-util.h"
 #include "bus-common-errors.h"
 #include "bus-get-properties.h"
diff --git a/src/shared/install.c b/src/shared/install.c
index c94b456..f899bd8 100644
--- a/src/shared/install.c
+++ b/src/shared/install.c
@@ -39,6 +39,11 @@
 #include "strv.h"
 #include "unit-file.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 #define UNIT_FILE_FOLLOW_SYMLINK_MAX 64
 
 typedef enum SearchFlags {
diff --git a/src/systemctl/systemctl-enable.c b/src/systemctl/systemctl-enable.c
index 496a817..7e8dd96 100644
--- a/src/systemctl/systemctl-enable.c
+++ b/src/systemctl/systemctl-enable.c
@@ -11,6 +11,11 @@
 #include "systemctl-util.h"
 #include "systemctl.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static int normalize_filenames(char **names) {
         int r;
 
diff --git a/src/systemctl/systemctl-list-unit-files.c b/src/systemctl/systemctl-list-unit-files.c
index b8b1531..4010ba8 100644
--- a/src/systemctl/systemctl-list-unit-files.c
+++ b/src/systemctl/systemctl-list-unit-files.c
@@ -8,6 +8,11 @@
 #include "systemctl.h"
 #include "terminal-util.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static int compare_unit_file_list(const UnitFileList *a, const UnitFileList *b) {
         const char *d1, *d2;
 
diff --git a/src/systemctl/systemctl-show.c b/src/systemctl/systemctl-show.c
index 2fdf321..3ea24de 100644
--- a/src/systemctl/systemctl-show.c
+++ b/src/systemctl/systemctl-show.c
@@ -42,6 +42,11 @@
 #include "terminal-util.h"
 #include "utf8.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static OutputFlags get_output_flags(void) {
         return
                 FLAGS_SET(arg_print_flags, BUS_PRINT_PROPERTY_SHOW_EMPTY) * OUTPUT_SHOW_ALL |
diff --git a/src/udev/net/link-config.c b/src/udev/net/link-config.c
index 647cdee..dbc28e9 100644
--- a/src/udev/net/link-config.c
+++ b/src/udev/net/link-config.c
@@ -46,6 +46,11 @@ static const Specifier link_specifier_table[] = {
         {}
 };
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 struct LinkConfigContext {
         LIST_HEAD(LinkConfig, configs);
         int ethtool_fd;
-- 
2.45.2

