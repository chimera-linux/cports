Added in more places by q66.

From d0bdce977b7acc5e45e82cf84256c4bedc0e74c4 Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Sun, 27 May 2018 08:36:44 -0700
Subject: [PATCH] Define glibc compatible basename() for non-glibc systems

Fixes builds with musl, even though systemd is adamant about
using non-posix basename implementation, we have a way out

Upstream-Status: Inappropriate [musl specific]

Signed-off-by: Khem Raj <raj.khem@gmail.com>

---
 src/machine/machine-dbus.c | 5 +++++
 1 file changed, 5 insertions(+)

--- a/src/machine/machine-dbus.c
+++ b/src/machine/machine-dbus.c
@@ -4,6 +4,11 @@
 #include <sys/mount.h>
 #include <sys/wait.h>
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 #include "alloc-util.h"
 #include "bus-common-errors.h"
 #include "bus-get-properties.h"
diff --git a/src/analyze/analyze-verify-util.c b/src/analyze/analyze-verify-util.c
index 132a846..5683e5c 100644
--- a/src/analyze/analyze-verify-util.c
+++ b/src/analyze/analyze-verify-util.c
@@ -16,6 +16,11 @@
 #include "unit-name.h"
 #include "unit-serialize.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static void log_syntax_callback(const char *unit, int level, void *userdata) {
         Set **s = ASSERT_PTR(userdata);
         int r;
diff --git a/src/basic/unit-file.c b/src/basic/unit-file.c
index 54f2137..33a593e 100644
--- a/src/basic/unit-file.c
+++ b/src/basic/unit-file.c
@@ -16,6 +16,11 @@
 #include "strv.h"
 #include "unit-file.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 bool unit_type_may_alias(UnitType type) {
         return IN_SET(type,
                       UNIT_SERVICE,
diff --git a/src/core/execute.c b/src/core/execute.c
index c4788a4..0e0d167 100644
--- a/src/core/execute.c
+++ b/src/core/execute.c
@@ -121,6 +121,11 @@
 
 #define SNDBUF_SIZE (8*1024*1024)
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static int shift_fds(int fds[], size_t n_fds) {
         if (n_fds <= 0)
                 return 0;
diff --git a/src/core/load-dropin.c b/src/core/load-dropin.c
index fd45744..c8e6a51 100644
--- a/src/core/load-dropin.c
+++ b/src/core/load-dropin.c
@@ -11,6 +11,11 @@
 #include "unit-name.h"
 #include "unit.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static int process_deps(Unit *u, UnitDependency dependency, const char *dir_suffix) {
         _cleanup_strv_free_ char **paths = NULL;
         int r;
diff --git a/src/delta/delta.c b/src/delta/delta.c
index eee2111..2462bbd 100644
--- a/src/delta/delta.c
+++ b/src/delta/delta.c
@@ -28,6 +28,11 @@
 #include "strv.h"
 #include "terminal-util.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static const char prefixes[] =
         "/etc\0"
         "/run\0"
diff --git a/src/shared/install.c b/src/shared/install.c
index a34e7bf..c3a38fa 100644
--- a/src/shared/install.c
+++ b/src/shared/install.c
@@ -38,6 +38,11 @@
 #include "strv.h"
 #include "unit-file.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 #define UNIT_FILE_FOLLOW_SYMLINK_MAX 64
 
 typedef enum SearchFlags {
diff --git a/src/systemctl/systemctl-enable.c b/src/systemctl/systemctl-enable.c
index 940f546..a388ac6 100644
--- a/src/systemctl/systemctl-enable.c
+++ b/src/systemctl/systemctl-enable.c
@@ -11,6 +11,11 @@
 #include "systemctl-util.h"
 #include "systemctl.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static int normalize_filenames(char **names) {
         int r;
 
diff --git a/src/systemctl/systemctl-list-unit-files.c b/src/systemctl/systemctl-list-unit-files.c
index fc1ad98..29ca24a 100644
--- a/src/systemctl/systemctl-list-unit-files.c
+++ b/src/systemctl/systemctl-list-unit-files.c
@@ -8,6 +8,11 @@
 #include "systemctl.h"
 #include "terminal-util.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static int compare_unit_file_list(const UnitFileList *a, const UnitFileList *b) {
         const char *d1, *d2;
 
diff --git a/src/systemctl/systemctl-show.c b/src/systemctl/systemctl-show.c
index 6422550..ed860dc 100644
--- a/src/systemctl/systemctl-show.c
+++ b/src/systemctl/systemctl-show.c
@@ -42,6 +42,11 @@
 #include "terminal-util.h"
 #include "utf8.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 static OutputFlags get_output_flags(void) {
         return
                 FLAGS_SET(arg_print_flags, BUS_PRINT_PROPERTY_SHOW_EMPTY) * OUTPUT_SHOW_ALL |
diff --git a/src/udev/net/link-config.c b/src/udev/net/link-config.c
index b554a68..ef90e34 100644
--- a/src/udev/net/link-config.c
+++ b/src/udev/net/link-config.c
@@ -36,6 +36,11 @@
 #include "strv.h"
 #include "utf8.h"
 
+#if !defined(__GLIBC__)
+#include <string.h>
+#define basename(src) (strrchr(src,'/') ? strrchr(src,'/')+1 : src)
+#endif
+
 struct LinkConfigContext {
         LIST_HEAD(LinkConfig, configs);
         int ethtool_fd;
