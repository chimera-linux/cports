commit 0c9d3de70dcfd26459accda53d322022804ef3fc
Author: q66 <q66@chimera-linux.org>
Date:   Mon Oct 16 01:24:04 2023 +0200

     portability/install hacks + update manpages for our environment

diff --git a/factory/templates/meson.build b/factory/templates/meson.build
index a3ba7b1..cedb35e 100644
--- a/factory/templates/meson.build
+++ b/factory/templates/meson.build
@@ -7,7 +7,7 @@ custom_target(
         input : 'locale.conf.in',
         output : 'locale.conf',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
-        install : true,
+        install : false,
         install_dir : factory_etc_dir)
 
 custom_target(
diff --git a/hwdb.d/60-autosuspend.hwdb b/hwdb.d/60-autosuspend.hwdb
index cfb6084..4d4e353 100644
--- a/hwdb.d/60-autosuspend.hwdb
+++ b/hwdb.d/60-autosuspend.hwdb
@@ -11,7 +11,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/61-autosuspend-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger /dev/â€¦
 #
 # If your changes are generally applicable, preferably send them as a pull
diff --git a/hwdb.d/60-evdev.hwdb b/hwdb.d/60-evdev.hwdb
index a9ce4e2..c94d5b6 100644
--- a/hwdb.d/60-evdev.hwdb
+++ b/hwdb.d/60-evdev.hwdb
@@ -33,7 +33,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/61-evdev-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger /dev/input/eventXX
 # where /dev/input/eventXX is the device in question. If in doubt, simply use
 # /dev/input/event* to reload all input rules.
diff --git a/hwdb.d/60-input-id.hwdb b/hwdb.d/60-input-id.hwdb
index 802ed9a..4f0783f 100644
--- a/hwdb.d/60-input-id.hwdb
+++ b/hwdb.d/60-input-id.hwdb
@@ -9,7 +9,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/61-input-id-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger /dev/input/eventXX
 # where /dev/input/eventXX is the device in question. If in
 # doubt, simply use /dev/input/event* to reload all input rules.
diff --git a/hwdb.d/60-keyboard.hwdb b/hwdb.d/60-keyboard.hwdb
index f3f40ef..435efd7 100644
--- a/hwdb.d/60-keyboard.hwdb
+++ b/hwdb.d/60-keyboard.hwdb
@@ -46,7 +46,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/61-keyboard-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger /dev/input/eventXX
 # where /dev/input/eventXX is the keyboard in question. If in doubt, simply use
 # /dev/input/event* to reload all input rules.
diff --git a/hwdb.d/60-sensor.hwdb b/hwdb.d/60-sensor.hwdb
index 4fb7387..0c596a8 100644
--- a/hwdb.d/60-sensor.hwdb
+++ b/hwdb.d/60-sensor.hwdb
@@ -23,7 +23,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/61-sensor-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger -v -p DEVNAME=/dev/iio:deviceXXX
 # where /dev/iio:deviceXXX is the device in question.
 #
diff --git a/hwdb.d/70-av-production.hwdb b/hwdb.d/70-av-production.hwdb
index 9890d72..d4755e7 100644
--- a/hwdb.d/70-av-production.hwdb
+++ b/hwdb.d/70-av-production.hwdb
@@ -8,7 +8,7 @@
 # To add local entries, copy this file to
 #   /etc/udev/hwdb.d/
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger
 
 ################
diff --git a/hwdb.d/70-joystick.hwdb b/hwdb.d/70-joystick.hwdb
index 8e942c8..3161fb9 100644
--- a/hwdb.d/70-joystick.hwdb
+++ b/hwdb.d/70-joystick.hwdb
@@ -13,7 +13,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/71-joystick-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger /dev/input/eventXX
 # where /dev/input/eventXX is the joystick in question. If in
 # doubt, simply use /dev/input/event* to reload all input rules.
diff --git a/hwdb.d/70-mouse.hwdb b/hwdb.d/70-mouse.hwdb
index 46d723a..7cbc473 100644
--- a/hwdb.d/70-mouse.hwdb
+++ b/hwdb.d/70-mouse.hwdb
@@ -28,7 +28,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/71-mouse-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger /dev/input/eventXX
 # where /dev/input/eventXX is the mouse in question. If in doubt, simply use
 # /dev/input/event* to reload all input rules.
diff --git a/hwdb.d/70-pointingstick.hwdb b/hwdb.d/70-pointingstick.hwdb
index a78d088..a3431ec 100644
--- a/hwdb.d/70-pointingstick.hwdb
+++ b/hwdb.d/70-pointingstick.hwdb
@@ -37,7 +37,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/71-pointingstick-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger /dev/input/eventXX
 # where /dev/input/eventXX is the pointingstick in question. If in doubt, simply
 # use /dev/input/event* to reload all input rules.
diff --git a/hwdb.d/70-touchpad.hwdb b/hwdb.d/70-touchpad.hwdb
index 262bca3..4355c12 100644
--- a/hwdb.d/70-touchpad.hwdb
+++ b/hwdb.d/70-touchpad.hwdb
@@ -13,7 +13,7 @@
 # To add local entries, create a new file
 #   /etc/udev/hwdb.d/71-touchpad-local.hwdb
 # and add your rules there. To load the new rules execute (as root):
-#   systemd-hwdb update
+#   udev-hwdb update
 #   udevadm trigger /dev/input/eventXX
 # where /dev/input/eventXX is the touchpad in question. If in
 # doubt, simply use /dev/input/event* to reload all input rules.
diff --git a/hwdb.d/80-ieee1394-unit-function.hwdb b/hwdb.d/80-ieee1394-unit-function.hwdb
index cf55f55..6078b8b 100644
--- a/hwdb.d/80-ieee1394-unit-function.hwdb
+++ b/hwdb.d/80-ieee1394-unit-function.hwdb
@@ -21,7 +21,7 @@
 #  - ven0x000000units*0x000000:0x000000*
 #
 # The hexadecimal digits part of the customized key should be lower-case. Linux FireWire subsystem
-# uses lower-case value for attributes of sysfs node, and systemd-hwdb parses the custom key by
+# uses lower-case value for attributes of sysfs node, and udev-hwdb parses the custom key by
 # case-sensitive way. On the other hand, it parses kernel alias by case-insensitive way.
 #
 # The entry should have some of IEEE1394_UNIT_FUNCTION_XXX environment variables to express function
diff --git a/hwdb.d/README b/hwdb.d/README
index 594f5bf..58e9052 100644
--- a/hwdb.d/README
+++ b/hwdb.d/README
@@ -3,9 +3,6 @@ of mappings from modalias-like keys (which identify specific hardware devices)
 to udev properties.
 
 Files in this directory are not read by udev directly. Instead,
-man:systemd-hwdb(8) compiles them into a binary database.
+man:udev-hwdb(8) compiles them into a binary database.
 
-See man:hwdb(7) for an overview of the configuration file format, and
-man:systemd-udevd.service(8) for a description of the udev daemon.
-
-Use 'systemd-analyze cat-config udev/hwdb.d' to display the effective config.
+See man:hwdb(7) for an overview of the configuration file format.
diff --git a/man/hwdb.xml b/man/hwdb.xml
index 2c1e502..7625699 100644
--- a/man/hwdb.xml
+++ b/man/hwdb.xml
@@ -73,7 +73,7 @@
       higher priority.</para>
 
       <para>The content of all hwdb files is read by
-      <citerefentry><refentrytitle>systemd-hwdb</refentrytitle><manvolnum>8</manvolnum></citerefentry>
+      <citerefentry><refentrytitle>udev-hwdb</refentrytitle><manvolnum>8</manvolnum></citerefentry>
       and compiled to a binary database located at <filename>/etc/udev/hwdb.bin</filename>,
       or alternatively <filename>/usr/lib/udev/hwdb.bin</filename> if you want ship the
       compiled database in an immutable image.  During runtime, only the binary database
@@ -147,7 +147,7 @@ PROPERTY_WITH_SPACES=some string</programlisting>
     <title>See Also</title>
     <para>
       <citerefentry>
-        <refentrytitle>systemd-hwdb</refentrytitle><manvolnum>8</manvolnum>
+        <refentrytitle>udev-hwdb</refentrytitle><manvolnum>8</manvolnum>
       </citerefentry>
     </para>
   </refsect1>
diff --git a/man/meson.build b/man/meson.build
index 4dc5fab..35a7211 100644
--- a/man/meson.build
+++ b/man/meson.build
@@ -59,7 +59,20 @@ foreach tuple : manpages
 
         mandirn = get_option('mandir') / ('man' + section)
 
-        if condition == '' or conf.get(condition) == 1
+        do_skip = false
+        if stem.contains('systemd') and not stem.contains('tmpfile') and not stem.contains('sysuser')
+            do_skip = true
+        endif
+        if not stem.contains('udev') and not stem.contains('tmpfile') and not stem.contains('sysuser')
+            do_skip = true
+        endif
+        if stem == 'hwdb' or stem == 'bootctl' or stem == 'loader.conf'
+            do_skip = false
+        elif stem == 'sd-boot' or stem == 'systemd-boot' or stem == 'systemd-stub'
+            do_skip = false
+        endif
+
+        if (condition == '' or conf.get(condition) == 1) and not do_skip
                 file = files(tuple[0] + '.xml')
                 source_xml_files += file
                 if tuple[0].startswith('org.freedesktop.')
@@ -221,20 +234,6 @@ configure_file(
 
 ############################################################
 
-update_dbus_docs = custom_target(
-        'update-dbus-docs-impl',
-        output : 'update-dbus-docs',
-        command : [update_dbus_docs_py, '--build-dir', project_build_root, '@INPUT@'],
-        input : dbus_docs)
-
-if conf.get('BUILD_MODE_DEVELOPER') == 1
-        test('dbus-docs-fresh',
-             update_dbus_docs_py,
-             suite : 'dist',
-             args : ['--build-dir', project_build_root, '--test', dbus_docs],
-             depends : dbus_programs)
-endif
-
 update_man_rules = custom_target(
         'update-man-rules-impl',
         output : 'update-man-rules',
diff --git a/man/rules/meson.build b/man/rules/meson.build
index a450fed..4be5cf3 100644
--- a/man/rules/meson.build
+++ b/man/rules/meson.build
@@ -940,7 +940,7 @@ manpages = [
   'ENABLE_HIBERNATE'],
  ['systemd-homed.service', '8', ['systemd-homed'], 'ENABLE_HOMED'],
  ['systemd-hostnamed.service', '8', ['systemd-hostnamed'], 'ENABLE_HOSTNAMED'],
- ['systemd-hwdb', '8', [], 'ENABLE_HWDB'],
+ ['udev-hwdb', '8', [], 'ENABLE_HWDB'],
  ['systemd-id128', '1', [], ''],
  ['systemd-importd.service', '8', ['systemd-importd'], 'ENABLE_IMPORTD'],
  ['systemd-inhibit', '1', [], ''],
@@ -1080,10 +1080,7 @@ manpages = [
  ['systemd-timesyncd.service', '8', ['systemd-timesyncd'], 'ENABLE_TIMESYNCD'],
  ['systemd-tmpfiles',
   '8',
-  ['systemd-tmpfiles-clean.service',
-   'systemd-tmpfiles-clean.timer',
-   'systemd-tmpfiles-setup-dev.service',
-   'systemd-tmpfiles-setup.service'],
+  [],
   ''],
  ['systemd-tty-ask-password-agent', '1', [], ''],
  ['systemd-udev-settle.service', '8', [], ''],
diff --git a/man/systemd-hwdb.xml b/man/systemd-hwdb.xml
index 70c052e..c7876fc 100644
--- a/man/systemd-hwdb.xml
+++ b/man/systemd-hwdb.xml
@@ -3,34 +3,34 @@
   "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
 <!-- SPDX-License-Identifier: LGPL-2.1-or-later -->
 
-<refentry id="systemd-hwdb" conditional="ENABLE_HWDB"
+<refentry id="udev-hwdb" conditional="ENABLE_HWDB"
           xmlns:xi="http://www.w3.org/2001/XInclude">
 
   <refentryinfo>
-    <title>systemd-hwdb</title>
+    <title>udev-hwdb</title>
     <productname>systemd</productname>
   </refentryinfo>
 
   <refmeta>
-    <refentrytitle>systemd-hwdb</refentrytitle>
+    <refentrytitle>udev-hwdb</refentrytitle>
     <manvolnum>8</manvolnum>
   </refmeta>
 
   <refnamediv>
-    <refname>systemd-hwdb</refname><refpurpose>hardware database management tool</refpurpose>
+    <refname>udev-hwdb</refname><refpurpose>hardware database management tool</refpurpose>
   </refnamediv>
 
   <refsynopsisdiv>
     <cmdsynopsis>
-      <command>systemd-hwdb <optional>options</optional> update</command>
+      <command>udev-hwdb <optional>options</optional> update</command>
     </cmdsynopsis>
     <cmdsynopsis>
-      <command>systemd-hwdb <optional>options</optional> query <replaceable>modalias</replaceable></command>
+      <command>udev-hwdb <optional>options</optional> query <replaceable>modalias</replaceable></command>
     </cmdsynopsis>
   </refsynopsisdiv>
 
   <refsect1><title>Description</title>
-    <para><command>systemd-hwdb</command> expects a command and command
+    <para><command>udev-hwdb</command> expects a command and command
     specific arguments.  It manages the binary hardware database.</para>
   </refsect1>
 
@@ -60,13 +60,13 @@
       <xi:include href="standard-options.xml" xpointer="help" />
     </variablelist>
 
-    <refsect2><title>systemd-hwdb
+    <refsect2><title>udev-hwdb
       <arg choice="opt"><replaceable>options</replaceable></arg>
       update</title>
       <para>Update the binary database.</para>
     </refsect2>
 
-    <refsect2><title>systemd-hwdb
+    <refsect2><title>udev-hwdb
       <arg choice="opt"><replaceable>options</replaceable></arg>
       query
       <arg><replaceable>MODALIAS</replaceable></arg>
diff --git a/man/systemd-tmpfiles.xml b/man/systemd-tmpfiles.xml
index decd66d..6adb806 100644
--- a/man/systemd-tmpfiles.xml
+++ b/man/systemd-tmpfiles.xml
@@ -18,10 +18,6 @@
 
   <refnamediv>
     <refname>systemd-tmpfiles</refname>
-    <refname>systemd-tmpfiles-setup.service</refname>
-    <refname>systemd-tmpfiles-setup-dev.service</refname>
-    <refname>systemd-tmpfiles-clean.service</refname>
-    <refname>systemd-tmpfiles-clean.timer</refname>
     <refpurpose>Creates, deletes and cleans up volatile
     and temporary files and directories</refpurpose>
   </refnamediv>
@@ -32,17 +28,6 @@
       <arg choice="opt" rep="repeat">OPTIONS</arg>
       <arg choice="opt" rep="repeat"><replaceable>CONFIGFILE</replaceable></arg>
     </cmdsynopsis>
-
-    <para>System units:
-<literallayout><filename>systemd-tmpfiles-setup.service</filename>
-<filename>systemd-tmpfiles-setup-dev.service</filename>
-<filename>systemd-tmpfiles-clean.service</filename>
-<filename>systemd-tmpfiles-clean.timer</filename></literallayout></para>
-
-    <para>User units:
-<literallayout><filename>systemd-tmpfiles-setup.service</filename>
-<filename>systemd-tmpfiles-clean.service</filename>
-<filename>systemd-tmpfiles-clean.timer</filename></literallayout></para>
   </refsynopsisdiv>
 
   <refsect1>
@@ -63,13 +48,10 @@
     <citerefentry><refentrytitle>tmpfiles.d</refentrytitle><manvolnum>5</manvolnum></citerefentry> are
     searched for a matching file and the file found that has the highest priority is executed.</para>
 
-    <para>System services (<filename>systemd-tmpfiles-setup.service</filename>,
-    <filename>systemd-tmpfiles-setup-dev.service</filename>,
-    <filename>systemd-tmpfiles-clean.service</filename>) invoke <command>systemd-tmpfiles</command> to create
+    <para>System services invoke <command>systemd-tmpfiles</command> to create
     system files and to perform system wide cleanup. Those services read administrator-controlled
     configuration files in <filename>tmpfiles.d/</filename> directories. User services
-    (<filename>systemd-tmpfiles-setup.service</filename>,
-    <filename>systemd-tmpfiles-clean.service</filename>) also invoke <command>systemd-tmpfiles</command>, but
+    also invoke <command>systemd-tmpfiles</command>, but
     it reads a separate set of files, which includes user-controlled files under
     <filename>~/.config/user-tmpfiles.d/</filename> and <filename>~/.local/share/user-tmpfiles.d/</filename>,
     and administrator-controlled files under <filename>/usr/share/user-tmpfiles.d/</filename>. Users may use
@@ -79,11 +61,10 @@
     affect files created by the user instance if they are placed in <filename>/tmp/</filename>, even if the
     user instance's time-based cleanup is turned off.</para>
 
-    <para>To re-apply settings after configuration has been modified, simply restart
-    <filename>systemd-tmpfiles-clean.service</filename>, which will apply any settings which can be safely
-    executed at runtime. To debug <command>systemd-tmpfiles</command>, it may be useful to invoke it
-    directly from the command line with increased log level (see <varname>$SYSTEMD_LOG_LEVEL</varname>
-    below).</para>
+    <para>To re-apply settings after configuration has been modified, simply run <command>systemd-tmpfiles</command> with the
+    desired parameters, which will apply any settings which can be safely executed at runtime. To debug <command>systemd-tmpfiles</command>,
+    it may be useful to invoke it directly from the command line with increased log level
+    (see <varname>$SYSTEMD_LOG_LEVEL</varname> below).</para>
   </refsect1>
 
   <refsect1>
@@ -203,9 +184,7 @@
         but operates on file systems stored in disk images or block devices. The disk image should either
         contain just a file system or a set of file systems within a GPT partition table, following the
         <ulink url="https://uapi-group.org/specifications/specs/discoverable_partitions_specification">Discoverable Partitions
-        Specification</ulink>. For further information on supported disk images, see
-        <citerefentry><refentrytitle>systemd-nspawn</refentrytitle><manvolnum>1</manvolnum></citerefentry>'s
-        switch of the same name.</para>
+        Specification</ulink>.</para>
 
         <para>Implies <option>-E</option>.</para></listitem>
       </varlistentry>
@@ -242,31 +221,6 @@
     <programlisting>systemd-tmpfiles --remove --create</programlisting>
   </refsect1>
 
-  <refsect1>
-    <title>Credentials</title>
-
-    <para><command>systemd-tmpfiles</command> supports the service credentials logic as implemented by
-    <varname>ImportCredential=</varname>/<varname>LoadCredential=</varname>/<varname>SetCredential=</varname>
-    (see <citerefentry><refentrytitle>systemd.exec</refentrytitle><manvolnum>1</manvolnum></citerefentry> for
-    details). The following credentials are used when passed in:</para>
-
-    <variablelist class='system-credentials'>
-      <varlistentry>
-        <term><varname>tmpfiles.extra</varname></term>
-
-        <listitem><para> The contents of this credential may contain additional lines to operate on. The
-        credential contents should follow the same format as any other <filename>tmpfiles.d/</filename>
-        drop-in configuration file. If this credential is passed it is processed after all of the drop-in
-        files read from the file system. The lines in the credential can hence augment existing lines of the
-        OS, but not override them.</para></listitem>
-      </varlistentry>
-    </variablelist>
-
-    <para>Note that by default the <filename>systemd-tmpfiles-setup.service</filename> unit file (and related
-    unit files) is set up to inherit the <literal>tmpfiles.extra</literal> credential from the service
-    manager.</para>
-  </refsect1>
-
   <refsect1>
     <title>Environment</title>
 
@@ -317,7 +271,6 @@
   <refsect1>
     <title>See Also</title>
     <para>
-      <citerefentry><refentrytitle>systemd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
       <citerefentry><refentrytitle>tmpfiles.d</refentrytitle><manvolnum>5</manvolnum></citerefentry>
     </para>
   </refsect1>
diff --git a/man/tmpfiles.d.xml b/man/tmpfiles.d.xml
index 4c972aa..16a1236 100644
--- a/man/tmpfiles.d.xml
+++ b/man/tmpfiles.d.xml
@@ -91,23 +91,7 @@ A+    /path-or-glob/to/append/acls/recursively -    -    -     -           POSIX
 
     <para><citerefentry><refentrytitle>systemd-tmpfiles</refentrytitle><manvolnum>8</manvolnum></citerefentry>
     uses this configuration to create volatile files and directories during boot and to do periodic cleanup
-    afterwards. See
-    <citerefentry><refentrytitle>systemd-tmpfiles</refentrytitle><manvolnum>8</manvolnum></citerefentry> for
-    the description of <filename>systemd-tmpfiles-setup.service</filename>,
-    <filename>systemd-tmpfiles-clean.service</filename>, and associated units.</para>
-
-    <para>System daemons frequently require private runtime directories below <filename>/run/</filename> to
-    store communication sockets and similar. For these, it is better to use
-    <varname>RuntimeDirectory=</varname> in their unit files (see
-    <citerefentry><refentrytitle>systemd.exec</refentrytitle><manvolnum>5</manvolnum></citerefentry> for
-    details), if the flexibility provided by <filename>tmpfiles.d</filename> is not required. The advantages
-    are that the configuration required by the unit is centralized in one place, and that the lifetime of the
-    directory is tied to the lifetime of the service itself. Similarly, <varname>StateDirectory=</varname>,
-    <varname>CacheDirectory=</varname>, <varname>LogsDirectory=</varname>, and
-    <varname>ConfigurationDirectory=</varname> should be used to create directories under
-    <filename>/var/lib/</filename>, <filename>/var/cache/</filename>, <filename>/var/log/</filename>, and
-    <filename>/etc/</filename>. <filename>tmpfiles.d</filename> should be used for files whose lifetime is
-    independent of any service or requires more complicated configuration.</para>
+    afterwards.</para>
   </refsect1>
 
   <refsect1>
@@ -508,16 +492,6 @@ w- /proc/sys/vm/swappiness - - - - 10</programlisting></para>
       binary data (including newlines and NUL bytes) to files. Note that if this switch is used, the argument
       is not subject to specifier expansion, neither before nor after Base64 decoding.</para>
 
-      <para>If the caret character (<literal>^</literal>) is used, the argument (i.e. 6th) column takes a
-      service credential name to read the argument data from. See <ulink
-      url="https://systemd.io/CREDENTIALS">System and Service Credentials</ulink> for details about the
-      credentials concept. This modifier is only supported on line types that can write file contents,
-      i.e. <varname>f</varname>, <varname>f+</varname>, <varname>w</varname>, <varname>w+</varname>. This is
-      useful for writing arbitrary files with contents sourced from elsewhere, including from VM or container
-      managers further up. If the specified credential is not set for the <command>systemd-tmpfiles</command>
-      service, the line is silently skipped. If <literal>^</literal> and <literal>~</literal> are combined
-      Base64 decoding is applied to the credential contents.</para>
-
       <para>Note that for all line types that result in creation of any kind of file node
       (i.e. <varname>f</varname>/<varname>F</varname>,
       <varname>d</varname>/<varname>D</varname>/<varname>v</varname>/<varname>q</varname>/<varname>Q</varname>,
@@ -843,19 +817,6 @@ e! /var/cache/krb5rcache - - - 0
       will be removed on boot. The directory will not be created.
       </para>
     </example>
-
-    <example>
-      <title>Provision SSH public key access for root user via Credentials in QEMU</title>
-
-      <programlisting>-smbios type=11,value=io.systemd.credential.binary:tmpfiles.extra=$(echo "f~ /root/.ssh/authorized_keys 700 root root - $(ssh-add -L | base64 -w 0)" | base64 -w 0)
-</programlisting>
-
-      <para>By passing this line to QEMU, the public key of the current user will be encoded in
-      base64, added to a tmpfiles.d line that tells systemd-tmpfiles to decode it into
-      <filename>/root/.ssh/authorized_keys</filename>, encode that line itself in base64 and
-      pass it as a Credential that will be picked up by systemd from SMBIOS on boot.
-      </para>
-    </example>
   </refsect1>
 
   <refsect1>
@@ -868,10 +829,7 @@ e! /var/cache/krb5rcache - - - 0
   <refsect1>
     <title>See Also</title>
     <para>
-      <citerefentry><refentrytitle>systemd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
       <citerefentry><refentrytitle>systemd-tmpfiles</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
-      <citerefentry><refentrytitle>systemd-delta</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
-      <citerefentry><refentrytitle>systemd.exec</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
       <citerefentry project='man-pages'><refentrytitle>attr</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
       <citerefentry project='man-pages'><refentrytitle>getfattr</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
       <citerefentry project='man-pages'><refentrytitle>setfattr</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
diff --git a/man/udev.conf.xml b/man/udev.conf.xml
index 0f51a1a..02c0571 100644
--- a/man/udev.conf.xml
+++ b/man/udev.conf.xml
@@ -29,7 +29,7 @@
     <title>Description</title>
 
     <para>
-      <citerefentry><refentrytitle>systemd-udevd</refentrytitle><manvolnum>8</manvolnum></citerefentry>
+      <citerefentry><refentrytitle>udevd</refentrytitle><manvolnum>8</manvolnum></citerefentry>
       expects its main configuration file at
       <filename>/etc/udev/udev.conf</filename>. It consists of a set
       of variables allowing the user to override default udev
@@ -88,7 +88,7 @@
         <term><varname>resolve_names=</varname></term>
 
         <listitem>
-          <para>Specifies when systemd-udevd should resolve names of users and groups.  When set to
+          <para>Specifies when udevd should resolve names of users and groups.  When set to
           <option>early</option> (the default), names will be resolved when the rules are parsed.
           When set to <option>late</option>, names will be resolved for every event.  When set to
           <option>never</option>, names will never be resolved and all devices will be owned by
@@ -102,7 +102,7 @@
         <term><varname>timeout_signal=</varname></term>
 
         <listitem>
-          <para>Specifies a signal that <filename>systemd-udevd</filename> will send on worker
+          <para>Specifies a signal that <filename>udevd</filename> will send on worker
           timeouts. Note that both workers and spawned processes will be killed using this
           signal. Defaults to <option>SIGKILL</option>.</para>
         </listitem>
@@ -110,16 +110,16 @@
     </variablelist>
 
     <para>
-      In addition, <filename>systemd-udevd</filename> can be configured
+      In addition, <filename>udevd</filename> can be configured
       by command line options and the kernel command line (see
-      <citerefentry><refentrytitle>systemd-udevd</refentrytitle><manvolnum>8</manvolnum></citerefentry>).
+      <citerefentry><refentrytitle>udevd</refentrytitle><manvolnum>8</manvolnum></citerefentry>).
     </para>
   </refsect1>
 
   <refsect1>
     <title>See Also</title>
     <para>
-      <citerefentry><refentrytitle>systemd-udevd</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
+      <citerefentry><refentrytitle>udevd</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
       <citerefentry><refentrytitle>udev</refentrytitle><manvolnum>7</manvolnum></citerefentry>,
       <citerefentry><refentrytitle>udevadm</refentrytitle><manvolnum>8</manvolnum></citerefentry>
     </para>
diff --git a/man/udev.xml b/man/udev.xml
index 5533c68..8241253 100644
--- a/man/udev.xml
+++ b/man/udev.xml
@@ -32,8 +32,7 @@
     names provide a way to reliably identify devices based on their properties or
     current configuration.</para>
 
-    <para>The udev daemon, <citerefentry><refentrytitle>systemd-udevd.service</refentrytitle>
-    <manvolnum>8</manvolnum></citerefentry>, receives device uevents directly from
+    <para>The udev daemon (udevd) receives device uevents directly from
     the kernel whenever a device is added or removed from the system, or it changes its
     state. When udev receives a device event, it matches its configured set of rules
     against various device attributes to identify the device. Rules that match may
@@ -266,17 +265,13 @@
                 <varlistentry>
                   <term><literal>arch</literal></term>
                   <listitem>
-                    <para>System's architecture. See <option>ConditionArchitecture=</option> in
-                    <citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>
-                    for possible values.</para>
+                    <para>System's architecture.</para>
                   </listitem>
                 </varlistentry>
                 <varlistentry>
                   <term><literal>virt</literal></term>
                   <listitem>
-                    <para>System's virtualization environment. See
-                    <citerefentry><refentrytitle>systemd-detect-virt</refentrytitle><manvolnum>1</manvolnum></citerefentry>
-                    for possible values.</para>
+                    <para>System's virtualization environment.</para>
                   </listitem>
                 </varlistentry>
                 <varlistentry>
@@ -387,9 +382,7 @@
           <varlistentry>
             <term><varname>NAME</varname></term>
             <listitem>
-              <para>The name to use for a network interface. See
-              <citerefentry><refentrytitle>systemd.link</refentrytitle><manvolnum>5</manvolnum></citerefentry>
-              for a higher-level mechanism for setting the interface name.
+              <para>The name to use for a network interface.
               The name of a device node cannot be changed by udev, only additional
               symlinks can be created.</para>
             </listitem>
@@ -509,15 +502,10 @@
               a long period of time may block all further events for this or a dependent device.</para>
 
               <para>Note that running programs that access the network or mount/unmount filesystems is not
-              allowed inside of udev rules, due to the default sandbox that is enforced on
-              <filename>systemd-udevd.service</filename>.</para>
+              allowed inside of udev rules, due to the default sandbox that is enforced.</para>
 
               <para>Starting daemons or other long-running processes is not allowed; the forked processes,
-              detached or not, will be unconditionally killed after the event handling has finished. In order
-              to activate long-running processes from udev rules, provide a service unit and pull it in from a
-              udev device using the <varname>SYSTEMD_WANTS</varname> device property. See
-              <citerefentry><refentrytitle>systemd.device</refentrytitle><manvolnum>5</manvolnum></citerefentry>
-              for details.</para>
+              detached or not, will be unconditionally killed after the event handling has finished.</para>
             </listitem>
           </varlistentry>
 
@@ -673,7 +661,7 @@
                     level name is specified, the maximum log level is changed to that level. When
                     <literal>reset</literal> is set, then the previously specified log level is
                     revoked. Defaults to the log level of the main process of
-                    <command>systemd-udevd</command>.</para>
+                    <command>udevd</command>.</para>
                     <para>This may be useful when debugging events for certain devices. Note that the
                     log level is applied when the line including this rule is processed. So, for
                     debugging, it is recommended that this is specified at earlier place, e.g., the
@@ -854,14 +842,8 @@ SUBSYSTEM=="net", OPTIONS="log_level=debug"</programlisting></para>
   <refsect1>
     <title>See Also</title>
     <para>
-      <citerefentry>
-        <refentrytitle>systemd-udevd.service</refentrytitle><manvolnum>8</manvolnum>
-      </citerefentry>,
       <citerefentry>
         <refentrytitle>udevadm</refentrytitle><manvolnum>8</manvolnum>
-      </citerefentry>,
-      <citerefentry>
-        <refentrytitle>systemd.link</refentrytitle><manvolnum>5</manvolnum>
       </citerefentry>
     </para>
   </refsect1>
diff --git a/man/udevadm.xml b/man/udevadm.xml
index 900bdac..c1e3759 100644
--- a/man/udevadm.xml
+++ b/man/udevadm.xml
@@ -64,7 +64,7 @@
   <refsect1><title>Description</title>
     <para><command>udevadm</command> expects a command and command
     specific options.  It controls the runtime behavior of
-    <command>systemd-udevd</command>, requests kernel events, manages
+    <command>udevd</command>, requests kernel events, manages
     the event queue, and provides simple debugging mechanisms.</para>
   </refsect1>
 
@@ -90,10 +90,8 @@
       <para>Query the udev database for device information.</para>
 
       <para>Positional arguments should be used to specify one or more devices. Each one may be a device name
-      (in which case it must start with <filename>/dev/</filename>), a sys path (in which case it must start
-      with <filename>/sys/</filename>), or a systemd device unit name (in which case it must end with
-      <literal>.device</literal>, see
-      <citerefentry><refentrytitle>systemd.device</refentrytitle><manvolnum>5</manvolnum></citerefentry>).
+      (in which case it must start with <filename>/dev/</filename>) or a sys path (in which case it must start
+      with <filename>/sys/</filename>).
       </para>
 
       <variablelist>
@@ -453,10 +451,10 @@
           <term><option>--initialized-nomatch</option></term>
           <listitem>
             <para>When <option>--initialized-match</option> is specified, trigger events for devices
-            that are already initialized by <command>systemd-udevd</command>, and skip devices that
+            that are already initialized by <command>udevd</command>, and skip devices that
             are not initialized yet.</para>
             <para>When <option>--initialized-nomatch</option> is specified, trigger events for devices
-            that are not initialized by <command>systemd-udevd</command> yet, and skip devices that
+            that are not initialized by <command>udevd</command> yet, and skip devices that
             are already initialized.</para>
             <para>Typically, it is essential that applications which intend to use such a match, make
             sure a suitable udev rule is installed that sets at least one property on devices that
@@ -494,7 +492,7 @@
         <varlistentry>
           <term><option>--wait-daemon[=<replaceable>SECONDS</replaceable>]</option></term>
           <listitem>
-            <para>Before triggering uevents, wait for systemd-udevd daemon to be initialized.
+            <para>Before triggering uevents, wait for udevd daemon to be initialized.
             Optionally takes timeout value. Default timeout is 5 seconds. This is equivalent to invoking
             <command>udevadm control --ping</command> before <command>udevadm trigger</command>.</para>
           </listitem>
@@ -536,10 +534,6 @@
 
         <xi:include href="standard-options.xml" xpointer="help" />
       </variablelist>
-
-      <para>See
-      <citerefentry><refentrytitle>systemd-udev-settle.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>
-      for more information.</para>
     </refsect2>
 
     <refsect2><title>udevadm control <replaceable>option</replaceable></title>
@@ -549,12 +543,8 @@
           <term><option>-e</option></term>
           <term><option>--exit</option></term>
           <listitem>
-            <para>Signal and wait for systemd-udevd to exit. No option except for
+            <para>Signal and wait for udevd to exit. No option except for
             <option>--timeout</option> can be specified after this option.
-            Note that <filename>systemd-udevd.service</filename> contains
-            <option>Restart=always</option> and so as a result, this option restarts systemd-udevd.
-            If you want to stop <filename>systemd-udevd.service</filename>, please use the following:
-            <programlisting>systemctl stop systemd-udevd-control.socket systemd-udevd-kernel.socket systemd-udevd.service</programlisting>
             </para>
           </listitem>
         </varlistentry>
@@ -563,7 +553,7 @@
           <term><option>--log-level=<replaceable>value</replaceable></option></term>
           <listitem>
             <para>Set the internal log level of
-            <filename>systemd-udevd</filename>. Valid values are the
+            <filename>udevd</filename>. Valid values are the
             numerical syslog priorities or their textual
             representations: <option>emerg</option>,
             <option>alert</option>, <option>crit</option>,
@@ -576,7 +566,7 @@
           <term><option>-s</option></term>
           <term><option>--stop-exec-queue</option></term>
           <listitem>
-            <para>Signal systemd-udevd to stop executing new events. Incoming events
+            <para>Signal udevd to stop executing new events. Incoming events
             will be queued.</para>
           </listitem>
         </varlistentry>
@@ -584,14 +574,14 @@
           <term><option>-S</option></term>
           <term><option>--start-exec-queue</option></term>
           <listitem>
-            <para>Signal systemd-udevd to enable the execution of events.</para>
+            <para>Signal udevd to enable the execution of events.</para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term><option>-R</option></term>
           <term><option>--reload</option></term>
           <listitem>
-            <para>Signal systemd-udevd to reload the rules files and other databases like the kernel
+            <para>Signal udevd to reload the rules files and other databases like the kernel
             module index. Reloading rules and databases does not apply any changes to already
             existing devices; the new configuration will only be applied to new events.</para>
           </listitem>
@@ -607,22 +597,22 @@
           <term><option>-m</option></term>
           <term><option>--children-max=</option><replaceable>value</replaceable></term>
           <listitem>
-            <para>Set the maximum number of events, systemd-udevd will handle at the
+            <para>Set the maximum number of events, udevd will handle at the
             same time.</para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term><option>--ping</option></term>
           <listitem>
-            <para>Send a ping message to systemd-udevd and wait for the reply. This may be useful to check that
-            systemd-udevd daemon is running.</para>
+            <para>Send a ping message to udevd and wait for the reply. This may be useful to check that
+            udevd daemon is running.</para>
           </listitem>
         </varlistentry>
         <varlistentry>
           <term><option>-t</option></term>
           <term><option>--timeout=</option><replaceable>seconds</replaceable></term>
           <listitem>
-            <para>The maximum number of seconds to wait for a reply from systemd-udevd.</para>
+            <para>The maximum number of seconds to wait for a reply from udevd.</para>
           </listitem>
         </varlistentry>
 
@@ -808,12 +798,12 @@
       </title>
 
       <para>Wait for devices or device symlinks being created and initialized by
-      <command>systemd-udevd</command>. Each device path must start with
+      <command>udevd</command>. Each device path must start with
       <literal>/dev/</literal> or <literal>/sys/</literal>, e.g. <literal>/dev/sda</literal>,
       <literal>/dev/disk/by-path/pci-0000:3c:00.0-nvme-1-part1</literal>,
       <literal>/sys/devices/pci0000:00/0000:00:1f.6/net/eth0</literal>, or
       <literal>/sys/class/net/eth0</literal>. This can take multiple devices. This may be useful for
-      waiting for devices being processed by <command>systemd-udevd</command> after e.g. partitioning
+      waiting for devices being processed by <command>udevd</command> after e.g. partitioning
       or formatting the devices.</para>
 
       <variablelist>
@@ -829,7 +819,7 @@
         <varlistentry>
           <term><option>--initialized=<replaceable>BOOL</replaceable></option></term>
           <listitem>
-            <para>Check if <command>systemd-udevd</command> initialized devices. Defaults to true. When
+            <para>Check if <command>udevd</command> initialized devices. Defaults to true. When
             false, the command only checks if the specified devices exist. Set false to this setting if
             there is no udev rules for the specified devices, as the devices will never be considered
             as initialized in that case. See Initialized Devices section below for more details.</para>
@@ -848,7 +838,7 @@
           <term><option>--settle</option></term>
           <listitem>
             <para>When specified, also watches the udev event queue, and wait for all queued events
-            being processed by <command>systemd-udevd</command>.</para>
+            being processed by <command>udevd</command>.</para>
           </listitem>
         </varlistentry>
 
@@ -869,14 +859,6 @@
       are automatically released and its return value is propagated as exit code of <command>udevadm
       lock</command>.</para>
 
-      <para>This tool is in particular useful to ensure that
-      <citerefentry><refentrytitle>systemd-udevd.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>
-      does not probe a block device while changes are made to it, for example partitions created or file
-      systems formatted. Note that many tools that interface with block devices natively support taking
-      relevant locks, see for example
-      <citerefentry project='man-pages'><refentrytitle>sfdisk</refentrytitle><manvolnum>8</manvolnum></citerefentry>'s
-      <option>--lock</option> switch.</para>
-
       <para>The command expects at least one block device specified via <option>--device=</option> or
       <option>--backing=</option>, and a command line to execute as arguments.</para>
 
@@ -912,8 +894,7 @@
           <term><option>-t <replaceable>SECS</replaceable></option></term>
 
           <listitem><para>Specifies how long to wait at most until all locks can be taken. Takes a value in
-          seconds, or in the usual supported time units, see
-          <citerefentry><refentrytitle>systemd.time</refentrytitle><manvolnum>7</manvolnum></citerefentry>. If
+          seconds, or in the usual supported time units. If
           specified as zero the lock is attempted and if not successful the invocation will immediately
           fail. If passed as <literal>infinity</literal> (the default) the invocation will wait indefinitely
           until the lock can be acquired. If the lock cannot be taken in the specified time the specified
@@ -957,7 +938,7 @@
       <title>Format a File System</title>
 
       <para>Take a lock on the backing block device while creating a file system, to ensure that
-      <command>systemd-udevd</command> doesn't probe or announce the new superblock before it is
+      <command>udevd</command> doesn't probe or announce the new superblock before it is
       comprehensively written:</para>
 
       <programlisting># udevadm lock --device=/dev/sda1 mkfs.ext4 /dev/sda1</programlisting>
@@ -975,7 +956,7 @@
       <title>Copy in a File System</title>
 
       <para>Take a lock on the backing block device while copying in a prepared file system image, to ensure
-      that <command>systemd-udevd</command> doesn't probe or announce the new superblock before it is fully
+      that <command>udevd</command> doesn't probe or announce the new superblock before it is fully
       written:</para>
 
       <programlisting># udevadm lock -d /dev/sda1 dd if=fs.raw of=/dev/sda1</programlisting>
@@ -986,9 +967,6 @@
     <title>See Also</title>
     <para><citerefentry>
         <refentrytitle>udev</refentrytitle><manvolnum>7</manvolnum>
-    </citerefentry>,
-    <citerefentry>
-        <refentrytitle>systemd-udevd.service</refentrytitle><manvolnum>8</manvolnum>
     </citerefentry></para>
   </refsect1>
 </refentry>
diff --git a/meson.build b/meson.build
index c4257aa..6ebfea7 100644
--- a/meson.build
+++ b/meson.build
@@ -25,10 +25,7 @@ conf.set('PROJECT_VERSION', meson.project_version(),
 # the wrong result when systemd is being built as a meson subproject
 project_source_root = meson.current_source_dir()
 project_build_root = meson.current_build_dir()
-relative_source_path = run_command('realpath',
-                                   '--relative-to=@0@'.format(project_build_root),
-                                   project_source_root,
-                                   check : true).stdout().strip()
+relative_source_path = '..'
 conf.set_quoted('RELATIVE_SOURCE_PATH', relative_source_path)
 
 conf.set10('BUILD_MODE_DEVELOPER', get_option('mode') == 'developer',
@@ -744,10 +741,6 @@ endforeach
 
 conf.set_quoted('TELINIT', get_option('telinit-path'))
 
-if run_command(ln, '--relative', '--help', check : false).returncode() != 0
-        error('ln does not support --relative (added in coreutils 8.16)')
-endif
-
 ############################################################
 
 gperf = find_program('gperf')
@@ -2261,7 +2254,7 @@ libsystemd = shared_library(
                         threads,
                         userspace],
         link_depends : libsystemd_sym,
-        install : true,
+        install : false,
         install_tag: 'libsystemd',
         install_dir : rootlibdir)
 
@@ -2527,7 +2520,7 @@ exe = executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 dbus_programs += exe
 public_programs += exe
@@ -2571,7 +2564,7 @@ executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 public_programs += executable(
@@ -2584,7 +2577,7 @@ public_programs += executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 if get_option('link-journalctl-shared')
         journalctl_link_with = [libshared]
@@ -2607,7 +2600,7 @@ public_programs += executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootbindir)
 
 executable(
@@ -2617,7 +2610,7 @@ executable(
         link_with : [libshared],
         dependencies : userspace,
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : systemgeneratordir)
 
 executable(
@@ -2627,7 +2620,7 @@ executable(
         link_with : [libshared],
         dependencies : userspace,
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : systemgeneratordir)
 
 executable(
@@ -2637,7 +2630,7 @@ executable(
         link_with : [libshared],
         dependencies : userspace,
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : systemgeneratordir)
 
 exe = executable(
@@ -2647,7 +2640,7 @@ exe = executable(
         link_with : [libshared],
         dependencies : userspace,
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : systemgeneratordir)
 
 meson.add_install_script(meson_make_symlink,
@@ -2710,7 +2703,7 @@ if conf.get('HAVE_BLKID') == 1
                 dependencies : [libblkid,
                                 userspace],
                 install_rpath : rootpkglibdir,
-                install : true,
+                install : false,
                 install_dir : systemgeneratordir)
 
         public_programs += executable(
@@ -2721,7 +2714,7 @@ if conf.get('HAVE_BLKID') == 1
                 dependencies : [userspace,
                                 versiondep],
                 install_rpath : rootpkglibdir,
-                install : true)
+                install : false)
 
         meson.add_install_script(meson_make_symlink,
                                  bindir / 'systemd-dissect',
@@ -2897,7 +2890,7 @@ if conf.get('HAVE_BLKID') == 1 and conf.get('ENABLE_BOOTLOADER') == 1
                                 versiondep],
                 install_rpath : rootpkglibdir,
                 install : true,
-                install_dir : rootlibexecdir)
+                install_dir : rootprefixdir / 'libexec')
 
         executable(
                 'systemd-bless-boot-generator',
@@ -2946,7 +2939,7 @@ executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 public_programs += executable(
@@ -2958,7 +2951,7 @@ public_programs += executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 systemctl = executable(
         'systemctl',
@@ -2974,7 +2967,7 @@ systemctl = executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootbindir)
 public_programs += systemctl
 
@@ -3150,9 +3143,7 @@ foreach alias : (['halt', 'poweroff', 'reboot', 'shutdown'] +
                                  rootsbindir / alias)
 endforeach
 
-meson.add_install_script(meson_make_symlink,
-                         rootbindir / 'udevadm',
-                         rootlibexecdir / 'systemd-udevd')
+install_symlink('udevd', install_dir: rootprefixdir / 'libexec', pointing_to: '../bin/udevadm')
 
 if conf.get('ENABLE_BACKLIGHT') == 1
         executable(
@@ -3185,7 +3176,7 @@ executable(
         link_with : [libshared],
         dependencies : userspace,
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : systemgeneratordir)
 
 if conf.get('HAVE_LIBCRYPTSETUP') == 1
@@ -3742,7 +3733,7 @@ executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 executable(
@@ -3753,7 +3744,7 @@ executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootbindir)
 
 executable(
@@ -3764,7 +3755,7 @@ executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 executable(
@@ -3775,7 +3766,7 @@ executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 executable(
@@ -3786,7 +3777,7 @@ executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 executable(
@@ -3797,14 +3788,9 @@ executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
-if install_sysconfdir_samples
-        install_data('src/sleep/sleep.conf',
-                     install_dir : pkgsysconfdir)
-endif
-
 public_programs += executable(
         'systemd-sysctl',
         'src/sysctl/sysctl.c',
@@ -3813,7 +3799,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 public_programs += executable(
@@ -3824,7 +3810,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 public_programs += executable(
         'systemd-detect-virt',
@@ -3834,7 +3820,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 public_programs += executable(
         'systemd-delta',
@@ -3844,7 +3830,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 public_programs += executable(
         'systemd-escape',
@@ -3854,7 +3840,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootbindir)
 
 public_programs += executable(
@@ -3865,7 +3851,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootbindir)
 
 public_programs += executable(
@@ -3878,7 +3864,7 @@ public_programs += executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootbindir)
 
 public_programs += executable(
@@ -3889,7 +3875,7 @@ public_programs += executable(
         dependencies : [userspace, versiondep],
         install_rpath : rootpkglibdir,
         install_dir : rootlibexecdir,
-        install : true)
+        install : false)
 
 # Protecting files from the distro in /usr doesn't make sense since they can be trivially accessed otherwise,
 # so don't restrict the access mode in /usr. That doesn't apply to /etc, so we do restrict the access mode
@@ -3918,7 +3904,7 @@ executable(
         link_with : [libshared],
         dependencies : userspace,
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 systemd_id128 = executable(
@@ -3929,7 +3915,7 @@ systemd_id128 = executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 public_programs += systemd_id128
 
 if want_tests != 'false'
@@ -3948,7 +3934,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 public_programs += executable(
         'systemd-ask-password',
@@ -3958,7 +3944,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootbindir)
 
 executable(
@@ -3968,7 +3954,7 @@ executable(
         link_with : [libshared],
         dependencies : userspace,
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 public_programs += executable(
@@ -3979,7 +3965,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootbindir)
 
 public_programs += executable(
@@ -3990,7 +3976,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 public_programs += executable(
         'systemd-cgtop',
@@ -4000,7 +3986,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 executable(
         'systemd-initctl',
@@ -4021,7 +4007,7 @@ public_programs += executable(
                        userspace,
                        versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 meson.add_install_script(meson_make_symlink,
                          'systemd-mount', bindir / 'systemd-umount')
@@ -4034,7 +4020,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 public_programs += executable(
         'systemd-stdio-bridge',
@@ -4044,7 +4030,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 public_programs += executable(
         'busctl',
@@ -4054,7 +4040,7 @@ public_programs += executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 if enable_sysusers
         exe = executable(
@@ -4112,7 +4098,7 @@ if conf.get('ENABLE_TMPFILES') == 1
                                 userspace,
                                 versiondep],
                 install_rpath : rootpkglibdir,
-                install : true,
+                install : false,
                 install_dir : rootbindir)
         public_programs += exe
 
@@ -4152,7 +4138,7 @@ endif
 
 if conf.get('ENABLE_HWDB') == 1
         systemd_hwdb = executable(
-                'systemd-hwdb',
+                'udev-hwdb',
                 'src/hwdb/hwdb.c',
                 include_directories : includes,
                 link_with : udev_link_with,
@@ -4193,7 +4179,7 @@ public_programs += executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 udevadm = executable(
@@ -4272,7 +4258,7 @@ executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 executable(
@@ -4299,7 +4285,7 @@ executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 executable(
@@ -4346,7 +4332,7 @@ public_programs += executable(
                         userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true)
+        install : false)
 
 if conf.get('ENABLE_NETWORKD') == 1
         dbus_programs += executable(
@@ -4395,7 +4381,7 @@ exe = executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 if want_tests != 'false'
@@ -4414,7 +4400,7 @@ executable(
         dependencies : [userspace,
                         versiondep],
         install_rpath : rootpkglibdir,
-        install : true,
+        install : false,
         install_dir : rootlibexecdir)
 
 kernel_install = executable(
@@ -4675,24 +4661,14 @@ subdir('docs/sysvinit')
 subdir('docs/var-log')
 subdir('hwdb.d')
 subdir('man')
-subdir('modprobe.d')
 subdir('network')
 subdir('presets')
 subdir('shell-completion/bash')
 subdir('shell-completion/zsh')
-subdir('sysctl.d')
 subdir('sysusers.d')
 subdir('tmpfiles.d')
 subdir('units')
 
-install_subdir('factory/etc',
-               install_dir : factorydir)
-subdir('factory/templates')
-
-if install_sysconfdir
-        install_data('xorg/50-systemd-user.sh',
-                     install_dir : xinitrcdir)
-endif
 install_data('LICENSE.GPL2',
              'LICENSE.LGPL2.1',
              'NEWS',
@@ -4857,7 +4833,6 @@ run_target(
         depends : [man, libsystemd, libudev],
         command : [check_api_docs_sh, libsystemd.full_path(), libudev.full_path()])
 
-alias_target('update-dbus-docs', update_dbus_docs)
 alias_target('update-man-rules', update_man_rules)
 
 if not meson.is_cross_build()
@@ -4871,9 +4846,6 @@ endif
 
 ############################################################
 
-alt_time_epoch = run_command('date', '-Is', '-u', '-d', '@@0@'.format(time_epoch),
-                             check : true).stdout().strip()
-
 summary({
         'split /usr' :                      split_usr,
         'split bin-sbin' :                  split_bin,
@@ -4929,8 +4901,7 @@ summary({
         'default status unit format' :      status_unit_format_default,
         'default user $PATH' :
                 default_user_path != '' ? default_user_path : '(same as system services)',
-        'systemd service watchdog' :        service_watchdog == '' ? 'disabled' : service_watchdog,
-        'time epoch' :                      '@0@ (@1@)'.format(time_epoch, alt_time_epoch)})
+        'systemd service watchdog' :        service_watchdog == '' ? 'disabled' : service_watchdog})
 
 # TODO:
 # CFLAGS:   ${OUR_CFLAGS} ${CFLAGS}
diff --git a/rules.d/README b/rules.d/README
index 08edb4d..bd61154 100644
--- a/rules.d/README
+++ b/rules.d/README
@@ -1,8 +1,5 @@
-Files in this directory contain configuration for systemd-udevd.service, a
-daemon that manages symlinks to device nodes, permissions of devices nodes,
+Files in this directory contain configuration for udevd, a daemon
+that manages symlinks to device nodes, permissions of devices nodes,
 emits device events for userspace, and renames network interfaces.
 
-See man:udev(7) for an overview of the configuration file format, and
-man:systemd-udevd.service(8) for a description of service itself.
-
-Use 'systemd-analyze cat-config udev/rules.d' to display the effective config.
+See man:udev(7) for an overview of the configuration file format.
diff --git a/rules.d/meson.build b/rules.d/meson.build
index 20fca22..60f36d0 100644
--- a/rules.d/meson.build
+++ b/rules.d/meson.build
@@ -56,7 +56,6 @@ rules_in = [
         ['50-udev-default.rules'],
         ['60-persistent-storage.rules'],
         ['64-btrfs.rules'],
-        ['99-systemd.rules'],
 
         ['70-uaccess.rules',   enable_logind and conf.get('HAVE_ACL') == 1],
         ['71-seat.rules',      enable_logind],
diff --git a/shell-completion/bash/meson.build b/shell-completion/bash/meson.build
index 24cb785..4585166 100644
--- a/shell-completion/bash/meson.build
+++ b/shell-completion/bash/meson.build
@@ -15,7 +15,7 @@ custom_target(
         input : 'systemctl.in',
         output : 'systemctl',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
-        install : bashcompletiondir != 'no',
+        install : false,
         install_dir : bashcompletiondir)
 
 items = [['busctl',              ''],
@@ -49,6 +49,8 @@ items = [['busctl',              ''],
          ['systemd-sysext',      'ENABLE_SYSEXT'],
          ['timedatectl',         'ENABLE_TIMEDATED']]
 
+items = [['udevadm', ''], ['bootctl', 'ENABLE_BOOTLOADER']]
+
 foreach item : items
         if bashcompletiondir != 'no' and (item[1] == '' or conf.get(item[1]) == 1)
                 install_data(item[0],
diff --git a/shell-completion/zsh/_udevadm b/shell-completion/zsh/_udevadm
index 37e9f28..30659f9 100644
--- a/shell-completion/zsh/_udevadm
+++ b/shell-completion/zsh/_udevadm
@@ -54,14 +54,14 @@ _udevadm_settle(){
 (( $+functions[_udevadm_control] )) ||
 _udevadm_control(){
     _arguments \
-        '--exit[Signal and wait for systemd-udevd to exit.]' \
-        '--log-priority=[Set the internal log level of systemd-udevd.]:priorities:(err info debug)' \
-        '--stop-exec-queue[Signal systemd-udevd to stop executing new events. Incoming events will be queued.]' \
-        '--start-exec-queue[Signal systemd-udevd to enable the execution of events.]' \
-        '--reload[Signal systemd-udevd to reload the rules files and other databases like the kernel module index.]' \
+        '--exit[Signal and wait for udevd to exit.]' \
+        '--log-priority=[Set the internal log level of udevd.]:priorities:(err info debug)' \
+        '--stop-exec-queue[Signal udevd to stop executing new events. Incoming events will be queued.]' \
+        '--start-exec-queue[Signal udevd to enable the execution of events.]' \
+        '--reload[Signal udevd to reload the rules files and other databases like the kernel module index.]' \
         '--property=[Set a global property for all events.]' \
         '--children-max=[Set the maximum number of events.]' \
-        '--timeout=[The maximum number of seconds to wait for a reply from systemd-udevd.]' \
+        '--timeout=[The maximum number of seconds to wait for a reply from udevd.]' \
         '--help[Print help text.]'
 }
 
@@ -119,7 +119,7 @@ _udevadm_verify(){
 _udevadm_wait(){
     _arguments \
         '--timeout=[Maximum number of seconds to wait for the devices being created.]' \
-        '--initialized=[Wait for devices being initialized by systemd-udevd.]:boolean:(yes no)' \
+        '--initialized=[Wait for devices being initialized by udevd.]:boolean:(yes no)' \
         '--removed[Wait for devices being removed.]' \
         '--settle[Also wait for udev queue being empty.]' \
         '--help[Print help text.]' \
diff --git a/shell-completion/zsh/meson.build b/shell-completion/zsh/meson.build
index 6703204..efd745c 100644
--- a/shell-completion/zsh/meson.build
+++ b/shell-completion/zsh/meson.build
@@ -10,7 +10,7 @@ custom_target(
         input : '_systemctl.in',
         output : '_systemctl',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
-        install : zshcompletiondir != 'no',
+        install : false,
         install_dir : zshcompletiondir)
 
 items = [['_busctl',                   ''],
@@ -40,6 +40,8 @@ items = [['_busctl',                   ''],
          ['_systemd-tmpfiles',         'ENABLE_TMPFILES'],
          ['_timedatectl',              'ENABLE_TIMEDATED']]
 
+items = [['_udevadm', ''], ['_bootctl', 'ENABLE_BOOTLOADER']]
+
 foreach item : items
         if zshcompletiondir != 'no' and (item[1] == '' or conf.get(item[1]) == 1)
                 install_data(item[0],
diff --git a/src/basic/linux/if_ether.h b/src/basic/linux/if_ether.h
index 69e0457..4bf6341 100644
--- a/src/basic/linux/if_ether.h
+++ b/src/basic/linux/if_ether.h
@@ -166,7 +166,7 @@
 
 /* allow libcs like musl to deactivate this, glibc does not implement this. */
 #ifndef __UAPI_DEF_ETHHDR
-#define __UAPI_DEF_ETHHDR		1
+#define __UAPI_DEF_ETHHDR		0
 #endif
 
 #if __UAPI_DEF_ETHHDR
diff --git a/src/basic/meson.build b/src/basic/meson.build
index 9d85f66..7a7e8c9 100644
--- a/src/basic/meson.build
+++ b/src/basic/meson.build
@@ -233,12 +233,6 @@ run_target(
 filesystem_includes = ['linux/magic.h',
                        'linux/gfs2_ondisk.h']
 
-check_filesystems = find_program('check-filesystems.sh')
-r = run_command([check_filesystems, cpp, files('filesystems-gperf.gperf')] + filesystem_includes, check: false)
-if r.returncode() != 0
-        error('Unknown filesystems defined in kernel headers:\n\n' + r.stdout())
-endif
-
 filesystems_gperf_h = custom_target(
         'filesystems-gperf.h',
         input : 'filesystems-gperf.gperf',
diff --git a/src/boot/efi/efi.h b/src/boot/efi/efi.h
index 5c34668..50fca66 100644
--- a/src/boot/efi/efi.h
+++ b/src/boot/efi/efi.h
@@ -1,6 +1,14 @@
 /* SPDX-License-Identifier: LGPL-2.1-or-later */
 #pragma once
 
+#if SD_BOOT
+#define __DEFINED_wchar_t
+/* uchar.h/wchar.h are not suitable for freestanding environments. */
+typedef __WCHAR_TYPE__ wchar_t;
+typedef __CHAR16_TYPE__ char16_t;
+typedef __CHAR32_TYPE__ char32_t;
+#endif
+
 #include <stdarg.h>
 #include <stdbool.h>
 #include <stddef.h>
@@ -9,11 +17,6 @@
 #include "macro-fundamental.h"
 
 #if SD_BOOT
-/* uchar.h/wchar.h are not suitable for freestanding environments. */
-typedef __WCHAR_TYPE__ wchar_t;
-typedef __CHAR16_TYPE__ char16_t;
-typedef __CHAR32_TYPE__ char32_t;
-
 /* Let's be paranoid and do some sanity checks. */
 assert_cc(__STDC_HOSTED__ == 0);
 assert_cc(sizeof(bool) == 1);
diff --git a/src/basic/user-util.c b/src/basic/user-util.c
index fb62e48..357fb97 100644
--- a/src/basic/user-util.c
+++ b/src/basic/user-util.c
@@ -999,7 +999,7 @@ int fgetpwent_sane(FILE *stream, struct passwd **pw) {
 
         errno = 0;
         struct passwd *p = fgetpwent(stream);
-        if (!p && errno != ENOENT)
+        if (!p && errno && errno != ENOENT)
                 return errno_or_else(EIO);
 
         *pw = p;
@@ -1012,7 +1012,7 @@ int fgetspent_sane(FILE *stream, struct spwd **sp) {
 
         errno = 0;
         struct spwd *s = fgetspent(stream);
-        if (!s && errno != ENOENT)
+        if (!s && errno && errno != ENOENT)
                 return errno_or_else(EIO);
 
         *sp = s;
@@ -1025,7 +1025,7 @@ int fgetgrent_sane(FILE *stream, struct group **gr) {
 
         errno = 0;
         struct group *g = fgetgrent(stream);
-        if (!g && errno != ENOENT)
+        if (!g && errno && errno != ENOENT)
                 return errno_or_else(EIO);
 
         *gr = g;
@@ -1039,7 +1039,7 @@ int fgetsgent_sane(FILE *stream, struct sgrp **sg) {
 
         errno = 0;
         struct sgrp *s = fgetsgent(stream);
-        if (!s && errno != ENOENT)
+        if (!s && errno && errno != ENOENT)
                 return errno_or_else(EIO);
 
         *sg = s;
diff --git a/src/boot/efi/meson.build b/src/boot/efi/meson.build
index 1c52629..94a0bcd 100644
--- a/src/boot/efi/meson.build
+++ b/src/boot/efi/meson.build
@@ -150,12 +150,10 @@ if get_option('mode') == 'developer' and get_option('debug')
         efi_c_args += '-DEFI_DEBUG'
 endif
 
-efi_c_ld_args = [
-        # We only support bfd. gold is going away, lld has issues with LTO on x86
-        # and mold does not support linker scripts.
-        '-fuse-ld=bfd',
+rtlib = run_command(cc, '-print-libgcc-file-name', check: true)
 
-        '-lgcc',
+efi_c_ld_args = [
+        rtlib.stdout().strip(),
         '-nostdlib',
         '-static-pie',
         '-Wl,--entry=efi_main',
diff --git a/src/core/meson.build b/src/core/meson.build
index 91477af..79ef9be 100644
--- a/src/core/meson.build
+++ b/src/core/meson.build
@@ -155,7 +155,7 @@ foreach item : in_files
                 input : file + '.in',
                 output: file,
                 command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
-                install : (dir == pkgsysconfdir) ? install_sysconfdir_samples : (dir != 'no'),
+                install : false,
                 install_dir : dir)
 endforeach
 
@@ -164,7 +164,7 @@ systemd_pc = custom_target(
         input : 'systemd.pc.in',
         output : 'systemd.pc',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
-        install : pkgconfigdatadir != 'no',
+        install : false,
         install_tag : 'devel',
         install_dir : pkgconfigdatadir)
 
diff --git a/src/fundamental/memory-util-fundamental.h b/src/fundamental/memory-util-fundamental.h
index 78e2dbe..561e05f 100644
--- a/src/fundamental/memory-util-fundamental.h
+++ b/src/fundamental/memory-util-fundamental.h
@@ -1,11 +1,10 @@
 /* SPDX-License-Identifier: LGPL-2.1-or-later */
 #pragma once
 
-#include <stddef.h>
-
 #if SD_BOOT
 #  include "efi-string.h"
 #else
+#  include <stddef.h>
 #  include <string.h>
 #endif
 
diff --git a/src/fundamental/string-util-fundamental.c b/src/fundamental/string-util-fundamental.c
index a5bafc6..0d7c08a 100644
--- a/src/fundamental/string-util-fundamental.c
+++ b/src/fundamental/string-util-fundamental.c
@@ -4,8 +4,8 @@
 #  include <ctype.h>
 #endif
 
-#include "macro-fundamental.h"
 #include "string-util-fundamental.h"
+#include "macro-fundamental.h"
 
 sd_char *startswith(const sd_char *s, const sd_char *prefix) {
         size_t l;
diff --git a/src/hwdb/hwdb.c b/src/hwdb/hwdb.c
index 4287b1f..e9cd1c9 100644
--- a/src/hwdb/hwdb.c
+++ b/src/hwdb/hwdb.c
@@ -29,7 +29,7 @@ static int help(void) {
         _cleanup_free_ char *link = NULL;
         int r;
 
-        r = terminal_urlify_man("systemd-hwdb", "8", &link);
+        r = terminal_urlify_man("udev-hwdb", "8", &link);
         if (r < 0)
                 return log_oom();
 
diff --git a/src/journal/meson.build b/src/journal/meson.build
index a6837d2..47ef3b8 100644
--- a/src/journal/meson.build
+++ b/src/journal/meson.build
@@ -39,11 +39,6 @@ systemd_cat_sources = files('cat.c')
 
 journalctl_sources = files('journalctl.c')
 
-if install_sysconfdir_samples
-        install_data('journald.conf',
-                     install_dir : pkgsysconfdir)
-endif
-
 if get_option('create-log-dirs')
         meson.add_install_script(
                 'sh', '-c',
diff --git a/src/libsystemd/meson.build b/src/libsystemd/meson.build
index 8da73a1..50f3689 100644
--- a/src/libsystemd/meson.build
+++ b/src/libsystemd/meson.build
@@ -138,7 +138,7 @@ libsystemd_pc = custom_target(
         input : 'libsystemd.pc.in',
         output : 'libsystemd.pc',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
-        install : pkgconfiglibdir != 'no',
+        install : false,
         install_tag : 'devel',
         install_dir : pkgconfiglibdir)
 
diff --git a/src/libsystemd/sd-hwdb/sd-hwdb.c b/src/libsystemd/sd-hwdb/sd-hwdb.c
index f163314..6b6d7ec 100644
--- a/src/libsystemd/sd-hwdb/sd-hwdb.c
+++ b/src/libsystemd/sd-hwdb/sd-hwdb.c
@@ -313,7 +313,7 @@ static int hwdb_new(const char *path, sd_hwdb **ret) {
 
                 if (!hwdb->f)
                         return log_debug_errno(SYNTHETIC_ERRNO(ENOENT),
-                                               "hwdb.bin does not exist, please run 'systemd-hwdb update'");
+                                               "hwdb.bin does not exist, please run 'udev-hwdb update'");
         }
 
         if (fstat(fileno(hwdb->f), &hwdb->st) < 0)
diff --git a/src/udev/udevadm-hwdb.c b/src/udev/udevadm-hwdb.c
index 2f5429f..aa8ec95 100644
--- a/src/udev/udevadm-hwdb.c
+++ b/src/udev/udevadm-hwdb.c
@@ -22,7 +22,7 @@ static int help(void) {
                "  -r --root=PATH       Alternative root path in the filesystem\n\n"
                "NOTE:\n"
                "The sub-command 'hwdb' is deprecated, and is left for backwards compatibility.\n"
-               "Please use systemd-hwdb instead.\n",
+               "Please use udev-hwdb instead.\n",
                program_invocation_short_name);
 
         return 0;
diff --git a/tools/meson-make-symlink.sh b/tools/meson-make-symlink.sh
index 653a73b..7fb5483 100755
--- a/tools/meson-make-symlink.sh
+++ b/tools/meson-make-symlink.sh
@@ -10,13 +10,3 @@ if [ "${MESON_INSTALL_QUIET:-0}" = 1 ] ; then
 else
     VERBOSE="v"
 fi
-
-# this is needed mostly because $DESTDIR is provided as a variable,
-# and we need to create the target directory...
-
-mkdir -${VERBOSE}p "$(dirname "${DESTDIR:-}$TARGET")"
-if [ "$(dirname "$SOURCE")" = . ] || [ "$(dirname "$SOURCE")" = .. ]; then
-    ln -${VERBOSE}fs -T -- "$SOURCE" "${DESTDIR:-}$TARGET"
-else
-    ln -${VERBOSE}fs -T --relative -- "${DESTDIR:-}$SOURCE" "${DESTDIR:-}$TARGET"
-fi
diff --git a/units/meson-add-wants.sh b/units/meson-add-wants.sh
index 6d8da57..ddbcaa4 100755
--- a/units/meson-add-wants.sh
+++ b/units/meson-add-wants.sh
@@ -3,6 +3,8 @@
 # shellcheck disable=SC2154,SC2174
 set -eu
 
+exit 0
+
 i=1
 while [ $i -lt $# ] ; do
     eval unitdir="\${$i}"
