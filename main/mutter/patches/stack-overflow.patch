commit d657616a70ef40c25f965f0f157d0680e77d7eaf
Author: q66 <q66@chimera-linux.org>
Date:   Tue Oct 10 15:49:01 2023 +0200

    dynamically allocate lut for storage
    
    The lut may be very large.

diff --git a/src/backends/native/meta-kms-impl-device-atomic.c b/src/backends/native/meta-kms-impl-device-atomic.c
index d3fd772..0ebc191 100644
--- a/src/backends/native/meta-kms-impl-device-atomic.c
+++ b/src/backends/native/meta-kms-impl-device-atomic.c
@@ -675,10 +675,12 @@ process_crtc_color_updates (MetaKmsImplDevice  *impl_device,
   if (color_update->gamma.has_update)
     {
       MetaGammaLut *gamma = color_update->gamma.state;
-      struct drm_color_lut drm_color_lut[gamma->size];
+      struct drm_color_lut *drm_color_lut = NULL;
       int i;
       uint32_t color_lut_blob_id;
 
+      drm_color_lut = g_new(struct drm_color_lut, gamma->size);
+
       for (i = 0; i < gamma->size; i++)
         {
           drm_color_lut[i].red = gamma->red[i];
@@ -689,8 +691,10 @@ process_crtc_color_updates (MetaKmsImplDevice  *impl_device,
       color_lut_blob_id = store_new_blob (impl_device,
                                           blob_ids,
                                           drm_color_lut,
-                                          sizeof drm_color_lut,
+                                          sizeof struct drm_color_lut * gamma->size,
                                           error);
+      g_free(drm_color_lut);
+
       if (!color_lut_blob_id)
         return FALSE;
 
