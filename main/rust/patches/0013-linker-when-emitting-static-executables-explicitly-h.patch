From 126ac576c329e1b31468be3e26d7f92a957c950d Mon Sep 17 00:00:00 2001
From: q66 <q66@chimera-linux.org>
Date: Tue, 16 Jul 2024 15:04:38 +0200
Subject: [PATCH 13/16] linker: when emitting static executables, explicitly
 hint static

This is important as rustc is not always in charge of what it is
linking (due to some targets not necessarily passing -nodefaultlibs)
and it assumes that resetting to dynamic is always the default.

This would result in executables that have no interpreter but
are still dynamically linked (despite static being requested).

By explicitly hinting static again before passing the -static
or -static-pie, we tell the linker to always link whatever
implicit libs statically as expected.
---
 compiler/rustc_codegen_ssa/src/back/linker.rs | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/compiler/rustc_codegen_ssa/src/back/linker.rs b/compiler/rustc_codegen_ssa/src/back/linker.rs
index a2efd420a..90baa5bc0 100644
--- a/compiler/rustc_codegen_ssa/src/back/linker.rs
+++ b/compiler/rustc_codegen_ssa/src/back/linker.rs
@@ -531,6 +531,10 @@ impl<'a> Linker for GccLinker<'a> {
                 }
             }
             LinkOutputKind::StaticNoPicExe => {
+                // Hint static again, as we would otherwise emit
+                // a dynamically linked executable with no interp
+                // (due to libc/builtins wrongly being linked dynamically)
+                self.hint_static();
                 // `-static` works for both gcc wrapper and ld.
                 self.link_or_cc_arg("-static");
                 if !self.is_ld && self.is_gnu {
@@ -538,6 +542,8 @@ impl<'a> Linker for GccLinker<'a> {
                 }
             }
             LinkOutputKind::StaticPicExe => {
+                // See the StaticNoPicExe case above
+                self.hint_static();
                 if !self.is_ld {
                     // Note that combination `-static -pie` doesn't work as expected
                     // for the gcc wrapper, `-static` in that case suppresses `-pie`.
@@ -553,6 +559,8 @@ impl<'a> Linker for GccLinker<'a> {
             }
             LinkOutputKind::DynamicDylib => self.build_dylib(crate_type, out_filename),
             LinkOutputKind::StaticDylib => {
+                // Ditto
+                self.hint_static();
                 self.link_or_cc_arg("-static");
                 self.build_dylib(crate_type, out_filename);
             }
-- 
2.51.2

