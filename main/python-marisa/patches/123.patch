From 806090b8a01f5c6f2ca3138db5c38d4b328684d8 Mon Sep 17 00:00:00 2001
From: Weng Xuetian <wengxt@gmail.com>
Date: Thu, 31 Jul 2025 20:02:56 -0700
Subject: [PATCH] Fix binding build and add CI to test it on linux.

Fix #121
Fix #122
---
 .github/workflows/linux.yml              | 23 +++++++++++++++++++++++
 bindings/marisa-swig-python3.cxx         | 15 +++++----------
 bindings/marisa-swig.cxx                 | 15 +++++----------
 bindings/perl/marisa-swig.cxx            | 15 +++++----------
 bindings/python/marisa-swig.cxx          | 17 ++++++-----------
 bindings/python3/marisa-swig-python3.cxx | 15 +++++----------
 bindings/ruby/marisa-swig.cxx            | 15 +++++----------
 7 files changed, 54 insertions(+), 61 deletions(-)

diff --git a/.github/workflows/linux.yml b/.github/workflows/linux.yml
index 243ae31..affd735 100644
--- a/.github/workflows/linux.yml
+++ b/.github/workflows/linux.yml
@@ -69,9 +69,32 @@ jobs:
             -DENABLE_UBSAN=ON \
             -DCMAKE_CXX_CLANG_TIDY=clang-tidy \
             -DCMAKE_BUILD_TYPE=Debug \
+            -DCMAKE_POSITION_INDEPENDENT_CODE=On \
             $([ "${{ matrix.coverage }}" = "true" ] && echo "-DENABLE_COVERAGE=ON")
           cmake --build build-debug -j $(getconf _NPROCESSORS_ONLN)
 
+      - name: Build SWIG Bindings
+        run: |
+          make -C bindings
+
+      - name: Build Python3 Binding
+        run: |
+          cd bindings/python3
+          CFLAGS="-std=c++17" python3 setup.py build_ext --include-dirs=../../include --library-dirs=../../build-debug
+          python3 setup.py build
+
+      - name: Build Perl Binding
+        run: |
+          cd bindings/perl
+          perl Makefile.PL CC=$CC CCFLAGS="-std=c++17" INC=-I"../../include" LIBS=-L"../../build-debug" INSTALLDIRS=vendor
+          make
+
+      - name: Build Ruby Binding
+        run: |
+          cd bindings/ruby
+          ruby extconf.rb --with-opt-include="../../include" --with-opt-lib="../../build-debug" --vendor
+          make CC=$CC CXX=$CXX CXXFLAGS="-std=c++17"
+
       - name: Run Tests (Debug)
         run: ctest --test-dir build-debug --output-on-failure -j $(getconf _NPROCESSORS_ONLN)
 
diff --git a/bindings/marisa-swig-python3.cxx b/bindings/marisa-swig-python3.cxx
index 50ab6b0..10bbad3 100644
--- a/bindings/marisa-swig-python3.cxx
+++ b/bindings/marisa-swig-python3.cxx
@@ -27,8 +27,7 @@ size_t Query::query_id() const {
   return query_.id();
 }
 
-Keyset::Keyset() : keyset_(new (std::nothrow) marisa::Keyset) {
-  MARISA_THROW_IF(keyset_ == NULL, ::MARISA_MEMORY_ERROR);
+Keyset::Keyset() : keyset_(new marisa::Keyset) {
 }
 
 Keyset::~Keyset() {
@@ -82,8 +81,7 @@ void Keyset::clear() {
 }
 
 Agent::Agent()
-    : agent_(new (std::nothrow) marisa::Agent), buf_(NULL), buf_size_(0) {
-  MARISA_THROW_IF(agent_ == NULL, ::MARISA_MEMORY_ERROR);
+    : agent_(new marisa::Agent), buf_(NULL), buf_size_(0) {
 }
 
 Agent::~Agent() {
@@ -101,8 +99,7 @@ void Agent::set_query(const char *ptr, size_t length) {
         new_buf_size *= 2;
       }
     }
-    char *new_buf = new (std::nothrow) char[new_buf_size];
-    MARISA_THROW_IF(new_buf == NULL, MARISA_MEMORY_ERROR);
+    char *new_buf = new char[new_buf_size];
     delete [] buf_;
     buf_ = new_buf;
     buf_size_ = new_buf_size;
@@ -141,8 +138,7 @@ size_t Agent::query_id() const {
   return agent_->query().id();
 }
 
-Trie::Trie() : trie_(new (std::nothrow) marisa::Trie) {
-  MARISA_THROW_IF(trie_ == NULL, ::MARISA_MEMORY_ERROR);
+Trie::Trie() : trie_(new marisa::Trie) {
 }
 
 Trie::~Trie() {
@@ -195,8 +191,7 @@ void Trie::reverse_lookup(size_t id,
   marisa::Agent agent;
   agent.set_query(id);
   trie_->reverse_lookup(agent);
-  char * const buf = new (std::nothrow) char[agent.key().length()];
-  MARISA_THROW_IF(buf == NULL, MARISA_MEMORY_ERROR);
+  char * const buf = new char[agent.key().length()];
   std::memcpy(buf, agent.key().ptr(), agent.key().length());
   *ptr_out_to_be_deleted = buf;
   *length_out = agent.key().length();
diff --git a/bindings/marisa-swig.cxx b/bindings/marisa-swig.cxx
index 6c9037c..593f5f0 100644
--- a/bindings/marisa-swig.cxx
+++ b/bindings/marisa-swig.cxx
@@ -27,8 +27,7 @@ size_t Query::id() const {
   return query_.id();
 }
 
-Keyset::Keyset() : keyset_(new (std::nothrow) marisa::Keyset) {
-  MARISA_THROW_IF(keyset_ == NULL, ::MARISA_MEMORY_ERROR);
+Keyset::Keyset() : keyset_(new marisa::Keyset) {
 }
 
 Keyset::~Keyset() {
@@ -82,8 +81,7 @@ void Keyset::clear() {
 }
 
 Agent::Agent()
-    : agent_(new (std::nothrow) marisa::Agent), buf_(NULL), buf_size_(0) {
-  MARISA_THROW_IF(agent_ == NULL, ::MARISA_MEMORY_ERROR);
+    : agent_(new marisa::Agent), buf_(NULL), buf_size_(0) {
 }
 
 Agent::~Agent() {
@@ -101,8 +99,7 @@ void Agent::set_query(const char *ptr, size_t length) {
         new_buf_size *= 2;
       }
     }
-    char *new_buf = new (std::nothrow) char[new_buf_size];
-    MARISA_THROW_IF(new_buf == NULL, MARISA_MEMORY_ERROR);
+    char *new_buf = new char[new_buf_size];
     delete [] buf_;
     buf_ = new_buf;
     buf_size_ = new_buf_size;
@@ -141,8 +138,7 @@ size_t Agent::query_id() const {
   return agent_->query().id();
 }
 
-Trie::Trie() : trie_(new (std::nothrow) marisa::Trie) {
-  MARISA_THROW_IF(trie_ == NULL, ::MARISA_MEMORY_ERROR);
+Trie::Trie() : trie_(new marisa::Trie) {
 }
 
 Trie::~Trie() {
@@ -195,8 +191,7 @@ void Trie::reverse_lookup(size_t id,
   marisa::Agent agent;
   agent.set_query(id);
   trie_->reverse_lookup(agent);
-  char * const buf = new (std::nothrow) char[agent.key().length()];
-  MARISA_THROW_IF(buf == NULL, MARISA_MEMORY_ERROR);
+  char * const buf = new char[agent.key().length()];
   std::memcpy(buf, agent.key().ptr(), agent.key().length());
   *ptr_out_to_be_deleted = buf;
   *length_out = agent.key().length();
diff --git a/bindings/perl/marisa-swig.cxx b/bindings/perl/marisa-swig.cxx
index 6c9037c..593f5f0 100644
--- a/bindings/perl/marisa-swig.cxx
+++ b/bindings/perl/marisa-swig.cxx
@@ -27,8 +27,7 @@ size_t Query::id() const {
   return query_.id();
 }
 
-Keyset::Keyset() : keyset_(new (std::nothrow) marisa::Keyset) {
-  MARISA_THROW_IF(keyset_ == NULL, ::MARISA_MEMORY_ERROR);
+Keyset::Keyset() : keyset_(new marisa::Keyset) {
 }
 
 Keyset::~Keyset() {
@@ -82,8 +81,7 @@ void Keyset::clear() {
 }
 
 Agent::Agent()
-    : agent_(new (std::nothrow) marisa::Agent), buf_(NULL), buf_size_(0) {
-  MARISA_THROW_IF(agent_ == NULL, ::MARISA_MEMORY_ERROR);
+    : agent_(new marisa::Agent), buf_(NULL), buf_size_(0) {
 }
 
 Agent::~Agent() {
@@ -101,8 +99,7 @@ void Agent::set_query(const char *ptr, size_t length) {
         new_buf_size *= 2;
       }
     }
-    char *new_buf = new (std::nothrow) char[new_buf_size];
-    MARISA_THROW_IF(new_buf == NULL, MARISA_MEMORY_ERROR);
+    char *new_buf = new char[new_buf_size];
     delete [] buf_;
     buf_ = new_buf;
     buf_size_ = new_buf_size;
@@ -141,8 +138,7 @@ size_t Agent::query_id() const {
   return agent_->query().id();
 }
 
-Trie::Trie() : trie_(new (std::nothrow) marisa::Trie) {
-  MARISA_THROW_IF(trie_ == NULL, ::MARISA_MEMORY_ERROR);
+Trie::Trie() : trie_(new marisa::Trie) {
 }
 
 Trie::~Trie() {
@@ -195,8 +191,7 @@ void Trie::reverse_lookup(size_t id,
   marisa::Agent agent;
   agent.set_query(id);
   trie_->reverse_lookup(agent);
-  char * const buf = new (std::nothrow) char[agent.key().length()];
-  MARISA_THROW_IF(buf == NULL, MARISA_MEMORY_ERROR);
+  char * const buf = new char[agent.key().length()];
   std::memcpy(buf, agent.key().ptr(), agent.key().length());
   *ptr_out_to_be_deleted = buf;
   *length_out = agent.key().length();
diff --git a/bindings/python/marisa-swig.cxx b/bindings/python/marisa-swig.cxx
index ec7460a..593f5f0 100644
--- a/bindings/python/marisa-swig.cxx
+++ b/bindings/python/marisa-swig.cxx
@@ -27,8 +27,7 @@ size_t Query::id() const {
   return query_.id();
 }
 
-Keyset::Keyset() : keyset_(new (std::nothrow) marisa::Keyset) {
-  MARISA_THROW_IF(keyset_ == NULL, ::MARISA_MEMORY_ERROR);
+Keyset::Keyset() : keyset_(new marisa::Keyset) {
 }
 
 Keyset::~Keyset() {
@@ -82,8 +81,7 @@ void Keyset::clear() {
 }
 
 Agent::Agent()
-    : agent_(new (std::nothrow) marisa::Agent), buf_(NULL), buf_size_(0) {
-  MARISA_THROW_IF(agent_ == NULL, ::MARISA_MEMORY_ERROR);
+    : agent_(new marisa::Agent), buf_(NULL), buf_size_(0) {
 }
 
 Agent::~Agent() {
@@ -101,8 +99,7 @@ void Agent::set_query(const char *ptr, size_t length) {
         new_buf_size *= 2;
       }
     }
-    char *new_buf = new (std::nothrow) char[new_buf_size];
-    MARISA_THROW_IF(new_buf == NULL, MARISA_MEMORY_ERROR);
+    char *new_buf = new char[new_buf_size];
     delete [] buf_;
     buf_ = new_buf;
     buf_size_ = new_buf_size;
@@ -141,8 +138,7 @@ size_t Agent::query_id() const {
   return agent_->query().id();
 }
 
-Trie::Trie() : trie_(new (std::nothrow) marisa::Trie) {
-  MARISA_THROW_IF(trie_ == NULL, ::MARISA_MEMORY_ERROR);
+Trie::Trie() : trie_(new marisa::Trie) {
 }
 
 Trie::~Trie() {
@@ -153,7 +149,7 @@ void Trie::build(Keyset &keyset, int config_flags) {
   trie_->build(*keyset.keyset_, config_flags);
 }
 
-void Trie::mmap(const char *filename, , int flags) {
+void Trie::mmap(const char *filename, int flags) {
   trie_->mmap(filename, flags);
 }
 
@@ -195,8 +191,7 @@ void Trie::reverse_lookup(size_t id,
   marisa::Agent agent;
   agent.set_query(id);
   trie_->reverse_lookup(agent);
-  char * const buf = new (std::nothrow) char[agent.key().length()];
-  MARISA_THROW_IF(buf == NULL, MARISA_MEMORY_ERROR);
+  char * const buf = new char[agent.key().length()];
   std::memcpy(buf, agent.key().ptr(), agent.key().length());
   *ptr_out_to_be_deleted = buf;
   *length_out = agent.key().length();
diff --git a/bindings/python3/marisa-swig-python3.cxx b/bindings/python3/marisa-swig-python3.cxx
index 50ab6b0..10bbad3 100644
--- a/bindings/python3/marisa-swig-python3.cxx
+++ b/bindings/python3/marisa-swig-python3.cxx
@@ -27,8 +27,7 @@ size_t Query::query_id() const {
   return query_.id();
 }
 
-Keyset::Keyset() : keyset_(new (std::nothrow) marisa::Keyset) {
-  MARISA_THROW_IF(keyset_ == NULL, ::MARISA_MEMORY_ERROR);
+Keyset::Keyset() : keyset_(new marisa::Keyset) {
 }
 
 Keyset::~Keyset() {
@@ -82,8 +81,7 @@ void Keyset::clear() {
 }
 
 Agent::Agent()
-    : agent_(new (std::nothrow) marisa::Agent), buf_(NULL), buf_size_(0) {
-  MARISA_THROW_IF(agent_ == NULL, ::MARISA_MEMORY_ERROR);
+    : agent_(new marisa::Agent), buf_(NULL), buf_size_(0) {
 }
 
 Agent::~Agent() {
@@ -101,8 +99,7 @@ void Agent::set_query(const char *ptr, size_t length) {
         new_buf_size *= 2;
       }
     }
-    char *new_buf = new (std::nothrow) char[new_buf_size];
-    MARISA_THROW_IF(new_buf == NULL, MARISA_MEMORY_ERROR);
+    char *new_buf = new char[new_buf_size];
     delete [] buf_;
     buf_ = new_buf;
     buf_size_ = new_buf_size;
@@ -141,8 +138,7 @@ size_t Agent::query_id() const {
   return agent_->query().id();
 }
 
-Trie::Trie() : trie_(new (std::nothrow) marisa::Trie) {
-  MARISA_THROW_IF(trie_ == NULL, ::MARISA_MEMORY_ERROR);
+Trie::Trie() : trie_(new marisa::Trie) {
 }
 
 Trie::~Trie() {
@@ -195,8 +191,7 @@ void Trie::reverse_lookup(size_t id,
   marisa::Agent agent;
   agent.set_query(id);
   trie_->reverse_lookup(agent);
-  char * const buf = new (std::nothrow) char[agent.key().length()];
-  MARISA_THROW_IF(buf == NULL, MARISA_MEMORY_ERROR);
+  char * const buf = new char[agent.key().length()];
   std::memcpy(buf, agent.key().ptr(), agent.key().length());
   *ptr_out_to_be_deleted = buf;
   *length_out = agent.key().length();
diff --git a/bindings/ruby/marisa-swig.cxx b/bindings/ruby/marisa-swig.cxx
index 6c9037c..593f5f0 100644
--- a/bindings/ruby/marisa-swig.cxx
+++ b/bindings/ruby/marisa-swig.cxx
@@ -27,8 +27,7 @@ size_t Query::id() const {
   return query_.id();
 }
 
-Keyset::Keyset() : keyset_(new (std::nothrow) marisa::Keyset) {
-  MARISA_THROW_IF(keyset_ == NULL, ::MARISA_MEMORY_ERROR);
+Keyset::Keyset() : keyset_(new marisa::Keyset) {
 }
 
 Keyset::~Keyset() {
@@ -82,8 +81,7 @@ void Keyset::clear() {
 }
 
 Agent::Agent()
-    : agent_(new (std::nothrow) marisa::Agent), buf_(NULL), buf_size_(0) {
-  MARISA_THROW_IF(agent_ == NULL, ::MARISA_MEMORY_ERROR);
+    : agent_(new marisa::Agent), buf_(NULL), buf_size_(0) {
 }
 
 Agent::~Agent() {
@@ -101,8 +99,7 @@ void Agent::set_query(const char *ptr, size_t length) {
         new_buf_size *= 2;
       }
     }
-    char *new_buf = new (std::nothrow) char[new_buf_size];
-    MARISA_THROW_IF(new_buf == NULL, MARISA_MEMORY_ERROR);
+    char *new_buf = new char[new_buf_size];
     delete [] buf_;
     buf_ = new_buf;
     buf_size_ = new_buf_size;
@@ -141,8 +138,7 @@ size_t Agent::query_id() const {
   return agent_->query().id();
 }
 
-Trie::Trie() : trie_(new (std::nothrow) marisa::Trie) {
-  MARISA_THROW_IF(trie_ == NULL, ::MARISA_MEMORY_ERROR);
+Trie::Trie() : trie_(new marisa::Trie) {
 }
 
 Trie::~Trie() {
@@ -195,8 +191,7 @@ void Trie::reverse_lookup(size_t id,
   marisa::Agent agent;
   agent.set_query(id);
   trie_->reverse_lookup(agent);
-  char * const buf = new (std::nothrow) char[agent.key().length()];
-  MARISA_THROW_IF(buf == NULL, MARISA_MEMORY_ERROR);
+  char * const buf = new char[agent.key().length()];
   std::memcpy(buf, agent.key().ptr(), agent.key().length());
   *ptr_out_to_be_deleted = buf;
   *length_out = agent.key().length();
