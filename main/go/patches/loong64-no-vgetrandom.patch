it seems there is something wrong with this as we always get EFAULT on loong64
when using vdso getrandom (unless it's a kernel bug? nothing else seems to
encounter it though); patch it out for now (test with a later kernel)

diff --git a/src/runtime/sys_linux_loong64.s b/src/runtime/sys_linux_loong64.s
index 41e12c3..5094962 100644
--- a/src/runtime/sys_linux_loong64.s
+++ b/src/runtime/sys_linux_loong64.s
@@ -687,46 +687,3 @@ TEXT runtime路socket(SB),$0-20
 	MOVV	R0, 2(R0)
 	MOVW	R0, ret+16(FP) // for vet
 	RET
-
-// func vgetrandom1(buf *byte, length uintptr, flags uint32, state uintptr, stateSize uintptr) int
-TEXT runtime路vgetrandom1<ABIInternal>(SB),NOSPLIT,$16
-	MOVV	R3, R23
-
-	MOVV	runtime路vdsoGetrandomSym(SB), R12
-
-	MOVV	g_m(g), R24
-
-	MOVV	m_vdsoPC(R24), R13
-	MOVV	R13, 8(R3)
-	MOVV	m_vdsoSP(R24), R13
-	MOVV	R13, 16(R3)
-	MOVV	R1, m_vdsoPC(R24)
-	MOVV    $buf-8(FP), R13
-	MOVV	R13, m_vdsoSP(R24)
-
-	AND	$~15, R3
-
-	MOVBU	runtime路iscgo(SB), R13
-	BNE	R13, nosaveg
-	MOVV	m_gsignal(R24), R13
-	BEQ	R13, nosaveg
-	BEQ	g, R13, nosaveg
-	MOVV	(g_stack+stack_lo)(R13), R25
-	MOVV	g, (R25)
-
-	JAL	(R12)
-
-	MOVV	R0, (R25)
-	JMP	restore
-
-nosaveg:
-	JAL	(R12)
-
-restore:
-	MOVV	R23, R3
-	MOVV	16(R3), R25
-	MOVV	R25, m_vdsoSP(R24)
-	MOVV	8(R3), R25
-	MOVV	R25, m_vdsoPC(R24)
-	NOP	R4 // Satisfy go vet, since the return value comes from the vDSO function.
-	RET
diff --git a/src/runtime/vgetrandom_linux.go b/src/runtime/vgetrandom_linux.go
index 225f702..7513afa 100644
--- a/src/runtime/vgetrandom_linux.go
+++ b/src/runtime/vgetrandom_linux.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build linux && (amd64 || arm64 || arm64be || ppc64 || ppc64le || loong64 || s390x)
+//go:build linux && (amd64 || arm64 || arm64be || ppc64 || ppc64le || s390x)
 
 package runtime
 
diff --git a/src/runtime/vgetrandom_unsupported.go b/src/runtime/vgetrandom_unsupported.go
index 43c53e1..7ca0ca8 100644
--- a/src/runtime/vgetrandom_unsupported.go
+++ b/src/runtime/vgetrandom_unsupported.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build !(linux && (amd64 || arm64 || arm64be || ppc64 || ppc64le || loong64 || s390x))
+//go:build !(linux && (amd64 || arm64 || arm64be || ppc64 || ppc64le || s390x))
 
 package runtime
 
