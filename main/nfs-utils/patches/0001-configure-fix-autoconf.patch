From 26b53c2c9bd5f23006ea8e215c916f3b9c102ba1 Mon Sep 17 00:00:00 2001
From: Miko Larsson <mikoxyzzz@gmail.com>
Date: Thu, 7 Mar 2024 12:42:41 +0100
Subject: [PATCH 1/5] configure: fix autoconf

Signed-off-by: Miko Larsson <mikoxyzzz@gmail.com>
---
 configure.ac | 368 +++++++++++++++++++++++++--------------------------
 1 file changed, 184 insertions(+), 184 deletions(-)

diff --git a/configure.ac b/configure.ac
index 93a12028..d94a1389 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3,42 +3,42 @@ dnl
 AC_INIT([linux nfs-utils],[2.6.4],[linux-nfs@vger.kernel.org],[nfs-utils])
 AC_CANONICAL_BUILD([])
 AC_CANONICAL_HOST([])
-AC_CONFIG_MACRO_DIR(aclocal)
+AC_CONFIG_MACRO_DIR([aclocal])
 AM_INIT_AUTOMAKE
-AC_PREREQ(2.59)
-AC_PREFIX_DEFAULT(/usr)
+AC_PREREQ([2.59])
+AC_PREFIX_DEFAULT([/usr])
 AM_MAINTAINER_MODE
 AC_USE_SYSTEM_EXTENSIONS
 
 dnl *************************************************************
 dnl * Define the set of applicable options
 dnl *************************************************************
-AC_ARG_WITH(release,
+AC_ARG_WITH([release],
 	[AS_HELP_STRING([--with-release=XXX],[set release to XXX [1]])],
-	RELEASE=$withval,
-	RELEASE=1)
-	AC_SUBST(RELEASE)
-AC_ARG_WITH(statedir,
+	[RELEASE=$withval],
+	[RELEASE=1])
+	AC_SUBST([RELEASE])
+AC_ARG_WITH([statedir],
 	[AS_HELP_STRING([--with-statedir=/foo],[use state dir /foo @<:@default=/var/lib/nfs@:>@])],
-	statedir=$withval,
-	statedir=/var/lib/nfs)
-	AC_SUBST(statedir)
-AC_ARG_WITH(nfsconfig,
+	[statedir=$withval],
+	[statedir=/var/lib/nfs])
+	AC_SUBST([statedir])
+AC_ARG_WITH([nfsconfig],
 	[AS_HELP_STRING([--with-nfsconfig=/config/file],[use general config file /config/file @<:@default=/etc/nfs.conf@:>@])],
-	nfsconfig=$withval,
-	nfsconfig=/etc/nfs.conf)
-	AC_SUBST(nfsconfig)
-AC_ARG_WITH(statdpath,
+	[nfsconfig=$withval],
+	[nfsconfig=/etc/nfs.conf])
+	AC_SUBST([nfsconfig])
+AC_ARG_WITH([statdpath],
 	[AS_HELP_STRING([--with-statdpath=/foo],[define the statd state dir as /foo instead of the NFS statedir @<:@default=/var/lib/nfs@:>@])],
-	statdpath=$withval,
-	statdpath=$statedir
+	[statdpath=$withval],
+	[statdpath=$statedir]
 	)
-	AC_SUBST(statdpath)
-AC_ARG_WITH(statduser,
+	AC_SUBST([statdpath])
+AC_ARG_WITH([statduser],
 	[AS_HELP_STRING([--with-statduser=rpcuser],[statd to run under @<:@rpcuser or nobody@:>@
 	])],
-	statduser=$withval,
-	if test "x$cross_compiling" = "xno"; then
+	[statduser=$withval],
+	[if test "x$cross_compiling" = "xno"; then
 		if grep -s '^rpcuser:' /etc/passwd > /dev/null; then
 			statduser=rpcuser
 		else
@@ -46,49 +46,49 @@ AC_ARG_WITH(statduser,
 		fi
 	else
 		statduser=nobody
-	fi)
-	AC_SUBST(statduser)
-AC_ARG_WITH(start-statd,
+	fi])
+	AC_SUBST([statduser])
+AC_ARG_WITH([start-statd],
 	[AS_HELP_STRING([--with-start-statd=scriptname],[When an nfs filesystems is mounted with locking, run this script
 	])],
-	startstatd=$withval,
-	startstatd=/usr/sbin/start-statd
+	[startstatd=$withval],
+	[startstatd=/usr/sbin/start-statd]
 	)
-	AC_SUBST(startstatd)
-	AC_DEFINE_UNQUOTED(START_STATD, "$startstatd", [Define this to a script which can start statd on mount])
+	AC_SUBST([startstatd])
+	AC_DEFINE_UNQUOTED([START_STATD], ["$startstatd"], [Define this to a script which can start statd on mount])
 unitdir=/usr/lib/systemd/system
-AC_ARG_WITH(systemd,
+AC_ARG_WITH([systemd],
 	[AS_HELP_STRING([--with-systemd@<:@=unit-dir-path@:>@],[install systemd unit files @<:@Default: no, and path defaults to /usr/lib/systemd/system if not given@:>@])],
-	if test "$withval" != "no" ; then 
+	[if test "$withval" != "no" ; then 
 		use_systemd=1
 		if test "$withval" != "yes" ; then 
 			unitdir=$withval
 		fi
 	else
 		use_systemd=0
-	fi
+	fi]
 	)
-	AM_CONDITIONAL(INSTALL_SYSTEMD, [test "$use_systemd" = 1])
-	AC_SUBST(unitdir)
+	AM_CONDITIONAL([INSTALL_SYSTEMD], [test "$use_systemd" = 1])
+	AC_SUBST([unitdir])
 
-AC_ARG_ENABLE(nfsv4,
+AC_ARG_ENABLE([nfsv4],
 	[AS_HELP_STRING([--disable-nfsv4],[disable support for NFSv4 @<:@default=no@:>@])],
-	enable_nfsv4=$enableval,
-	enable_nfsv4=yes)
+	[enable_nfsv4=$enableval],
+	[enable_nfsv4=yes])
 	if test "$enable_nfsv4" = yes; then
 		IDMAPD=idmapd
 	else
 		enable_nfsv4=
 		IDMAPD=
 	fi
-	AC_SUBST(IDMAPD)
-	AC_SUBST(enable_nfsv4)
-	AM_CONDITIONAL(CONFIG_NFSV4, [test "$enable_nfsv4" = "yes"])
+	AC_SUBST([IDMAPD])
+	AC_SUBST([enable_nfsv4])
+	AM_CONDITIONAL([CONFIG_NFSV4], [test "$enable_nfsv4" = "yes"])
 
-AC_ARG_ENABLE(nfsv41,
+AC_ARG_ENABLE([nfsv41],
 	[AS_HELP_STRING([--disable-nfsv41],[disable support for NFSv41 @<:@default=no@:>@])],
-	enable_nfsv41=$enableval,
-	enable_nfsv41=yes)
+	[enable_nfsv41=$enableval],
+	[enable_nfsv41=yes])
 	if test "$enable_nfsv41" = yes; then
 		if test "$enable_nfsv4" != yes; then
 			AC_MSG_WARN([NFS v4 is not enabled. Disabling NFS v4.1])
@@ -99,46 +99,46 @@ AC_ARG_ENABLE(nfsv41,
 		enable_nfsv41=
 		BLKMAPD=
 	fi
-	AC_SUBST(enable_nfsv41)
-	AM_CONDITIONAL(CONFIG_NFSV41, [test "$enable_nfsv41" = "yes"])
+	AC_SUBST([enable_nfsv41])
+	AM_CONDITIONAL([CONFIG_NFSV41], [test "$enable_nfsv41" = "yes"])
 
-AC_ARG_ENABLE(gss,
+AC_ARG_ENABLE([gss],
 	[AS_HELP_STRING([--disable-gss],[disable client support for rpcsec_gss @<:@default=no@:>@])],
-	enable_gss=$enableval,
-	enable_gss=yes)
+	[enable_gss=$enableval],
+	[enable_gss=yes])
 	if test "$enable_gss" = yes; then
 		GSSD=gssd
 	else
 		enable_gss=
 		GSSD=
 	fi
-	AC_SUBST(GSSD)
-	AC_SUBST(enable_gss)
-	AM_CONDITIONAL(CONFIG_GSS, [test "$enable_gss" = "yes"])
+	AC_SUBST([GSSD])
+	AC_SUBST([enable_gss])
+	AM_CONDITIONAL([CONFIG_GSS], [test "$enable_gss" = "yes"])
 
-AC_ARG_ENABLE(svcgss,
+AC_ARG_ENABLE([svcgss],
 	[AS_HELP_STRING([--enable-svcgss],[enable building svcgssd for rpcsec_gss server support @<:@default=no@:>@])],
-	enable_svcgss=$enableval,
-	enable_svcgss=no)
+	[enable_svcgss=$enableval],
+	[enable_svcgss=no])
 	if test "$enable_gss" = yes -a "$enable_svcgss" = yes; then
 		SVCGSSD=svcgssd
 	else
 		enable_svcgss=
 		SVCGSSD=
 	fi
-	AC_SUBST(SVCGSSD)
-	AC_SUBST(enable_svcgss)
-	AM_CONDITIONAL(CONFIG_SVCGSS, [test "$enable_svcgss" = "yes"])
+	AC_SUBST([SVCGSSD])
+	AC_SUBST([enable_svcgss])
+	AM_CONDITIONAL([CONFIG_SVCGSS], [test "$enable_svcgss" = "yes"])
 
-AC_ARG_ENABLE(kprefix,
+AC_ARG_ENABLE([kprefix],
 	[AS_HELP_STRING([--enable-kprefix],[install progs as rpc.knfsd etc])],
-	test "$enableval" = "yes" && kprefix=k,
-	kprefix=)
-	AC_SUBST(kprefix)
-AC_ARG_WITH(rpcgen,
+	[test "$enableval" = "yes" && kprefix=k],
+	[kprefix=])
+	AC_SUBST([kprefix])
+AC_ARG_WITH([rpcgen],
 	[AS_HELP_STRING([--with-rpcgen=internal],[use internal rpcgen instead of system one])],
-	rpcgen_path=$withval,
-	rpcgen_path=yes )
+	[rpcgen_path=$withval],
+	[rpcgen_path=yes] )
 	rpcgen_cflags=-Werror=strict-prototypes
 	RPCGEN_PATH=
 	if test "$rpcgen_path" = "yes"; then
@@ -153,114 +153,114 @@ AC_ARG_WITH(rpcgen,
 	    RPCGEN_PATH=internal
 	    rpcgen_cflags=-Wstrict-prototypes
 	fi
-	AC_SUBST(RPCGEN_PATH)
-	AM_CONDITIONAL(CONFIG_RPCGEN, [test "$RPCGEN_PATH" = "internal"])
-AC_ARG_ENABLE(uuid,
+	AC_SUBST([RPCGEN_PATH])
+	AM_CONDITIONAL([CONFIG_RPCGEN], [test "$RPCGEN_PATH" = "internal"])
+AC_ARG_ENABLE([uuid],
 	[AS_HELP_STRING([--disable-uuid],[Exclude uuid support to avoid buggy libblkid. @<:@default=no@:>@])],
-	if test "$enableval" = "yes" ; then choose_blkid=yes; else choose_blkid=no; fi,
-	choose_blkid=default)
-AC_ARG_ENABLE(mount,
+	[if test "$enableval" = "yes" ; then choose_blkid=yes; else choose_blkid=no; fi],
+	[choose_blkid=default])
+AC_ARG_ENABLE([mount],
 	[AS_HELP_STRING([--disable-mount],[Do not build mount.nfs and do use the util-linux mount(8) functionality. @<:@default=no@:>@])],
-	enable_mount=$enableval,
-	enable_mount=yes)
-	AM_CONDITIONAL(CONFIG_MOUNT, [test "$enable_mount" = "yes"])
+	[enable_mount=$enableval],
+	[enable_mount=yes])
+	AM_CONDITIONAL([CONFIG_MOUNT], [test "$enable_mount" = "yes"])
 
 if test "$enable_mount" = yes; then
-	AC_ARG_ENABLE(libmount-mount,
+	AC_ARG_ENABLE([libmount-mount],
 		[AS_HELP_STRING([--enable-libmount-mount],[Link mount.nfs with libmount @<:@default=no@:>@])],
-		enable_libmount=$enableval,
-		enable_libmount=no)
+		[enable_libmount=$enableval],
+		[enable_libmount=no])
 else
 	enable_libmount=no
 fi
 
-AC_ARG_ENABLE(sbin-override,
+AC_ARG_ENABLE([sbin-override],
 	[AS_HELP_STRING([--disable-sbin-override],[Don't force nfsdcltrack and mount helpers into /sbin: always honour --sbindir])],
-	enable_sbin_override=$enableval,
-	enable_sbin_override=yes)
-	AM_CONDITIONAL(CONFIG_SBIN_OVERRIDE, [test "$enable_sbin_override" = "yes"])
-AC_ARG_ENABLE(junction,
+	[enable_sbin_override=$enableval],
+	[enable_sbin_override=yes])
+	AM_CONDITIONAL([CONFIG_SBIN_OVERRIDE], [test "$enable_sbin_override" = "yes"])
+AC_ARG_ENABLE([junction],
 	[AS_HELP_STRING([--enable-junction],[enable support for NFS junctions @<:@default=no@:>@])],
-	enable_junction=$enableval,
-	enable_junction=no)
+	[enable_junction=$enableval],
+	[enable_junction=no])
 	if test "$enable_junction" = yes; then
-		AC_DEFINE(HAVE_JUNCTION_SUPPORT, 1,
+		AC_DEFINE([HAVE_JUNCTION_SUPPORT], [1],
                           [Define this if you want junction support compiled in])
 	else
 		enable_junction=
 	fi
-	AM_CONDITIONAL(CONFIG_JUNCTION, [test "$enable_junction" = "yes" ])
+	AM_CONDITIONAL([CONFIG_JUNCTION], [test "$enable_junction" = "yes" ])
 
-AC_ARG_ENABLE(tirpc,
+AC_ARG_ENABLE([tirpc],
 	[AS_HELP_STRING([--disable-tirpc],[disable use of TI-RPC library @<:@default=no@:>@])],
-	enable_tirpc=$enableval,
-	enable_tirpc=yes)
-AC_ARG_ENABLE(ipv6,
+	[enable_tirpc=$enableval],
+	[enable_tirpc=yes])
+AC_ARG_ENABLE([ipv6],
 	[AS_HELP_STRING([--disable-ipv6],[disable support for IPv6 @<:@default=no@:>@])],
-	enable_ipv6=$enableval,
-	enable_ipv6=yes)
+	[enable_ipv6=$enableval],
+	[enable_ipv6=yes])
 	if test "$enable_ipv6" = yes; then
-		AC_DEFINE(IPV6_SUPPORTED, 1, [Define this if you want IPv6 support compiled in])
+		AC_DEFINE([IPV6_SUPPORTED], [1], [Define this if you want IPv6 support compiled in])
 	else
 		enable_ipv6=
 	fi
-	AC_SUBST(enable_ipv6)
-	AM_CONDITIONAL(CONFIG_IPV6, [test "$enable_ipv6" = "yes"])
+	AC_SUBST([enable_ipv6])
+	AM_CONDITIONAL([CONFIG_IPV6], [test "$enable_ipv6" = "yes"])
 
 if test "$enable_mount" = yes; then
-	AC_ARG_ENABLE(mountconfig,
+	AC_ARG_ENABLE([mountconfig],
 	[AS_HELP_STRING([--disable-mountconfig],[disable mount to use a configuration file @<:@default=no@:>@])],
-	enable_mountconfig=$enableval,
-	enable_mountconfig=yes)
+	[enable_mountconfig=$enableval],
+	[enable_mountconfig=yes])
 	if test "$enable_mountconfig" = no; then
 		enable_mountconfig=
 	else
-		AC_DEFINE(MOUNT_CONFIG, 1, 
+		AC_DEFINE([MOUNT_CONFIG], [1], 
 			[Define this if you want mount to read a configuration file])
-		AC_ARG_WITH(mountfile,
+		AC_ARG_WITH([mountfile],
 			[AS_HELP_STRING([--with-mountfile=filename],[Using filename as the NFS mount options file [/etc/nfsmounts.conf]
 			])],
-		mountfile=$withval,
-		mountfile=/etc/nfsmount.conf)
-		AC_SUBST(mountfile)
-		AC_DEFINE_UNQUOTED(MOUNTOPTS_CONFFILE, "$mountfile", 
+		[mountfile=$withval],
+		[mountfile=/etc/nfsmount.conf])
+		AC_SUBST([mountfile])
+		AC_DEFINE_UNQUOTED([MOUNTOPTS_CONFFILE], ["$mountfile"], 
 			[This defines the location of the NFS mount configuration file])
 	fi
-	AC_SUBST(enable_mountconfig)
-	AM_CONDITIONAL(MOUNT_CONFIG, [test "$enable_mountconfig" = "yes"])
+	AC_SUBST([enable_mountconfig])
+	AM_CONDITIONAL([MOUNT_CONFIG], [test "$enable_mountconfig" = "yes"])
 else
-	AM_CONDITIONAL(MOUNT_CONFIG, [test "$enable_mount" = "yes"])
+	AM_CONDITIONAL([MOUNT_CONFIG], [test "$enable_mount" = "yes"])
 fi
 
-AC_ARG_ENABLE(nfsdcld,
+AC_ARG_ENABLE([nfsdcld],
 	[AS_HELP_STRING([--disable-nfsdcld],[disable NFSv4 clientid tracking daemon @<:@default=no@:>@])],
-	enable_nfsdcld=$enableval,
-	enable_nfsdcld="yes")
+	[enable_nfsdcld=$enableval],
+	[enable_nfsdcld="yes"])
 
-AC_ARG_ENABLE(nfsrahead,
+AC_ARG_ENABLE([nfsrahead],
 	[AS_HELP_STRING([--disable-nfsrahead],[disable nfsrahead command @<:@default=no@:>@])],
-	enable_nfsrahead=$enableval,
-	enable_nfsrahead="yes")
-	AM_CONDITIONAL(CONFIG_NFSRAHEAD, [test "$enable_nfsrahead" = "yes" ])
+	[enable_nfsrahead=$enableval],
+	[enable_nfsrahead="yes"])
+	AM_CONDITIONAL([CONFIG_NFSRAHEAD], [test "$enable_nfsrahead" = "yes" ])
 	if test "$enable_nfsrahead" = yes; then
 		dnl Check for -lmount
 		PKG_CHECK_MODULES([LIBMOUNT], [mount])
 	fi
 
-AC_ARG_ENABLE(nfsdcltrack,
+AC_ARG_ENABLE([nfsdcltrack],
 	[AS_HELP_STRING([--disable-nfsdcltrack],[disable NFSv4 clientid tracking programs @<:@default=no@:>@])],
-	enable_nfsdcltrack=$enableval,
-	enable_nfsdcltrack="yes")
+	[enable_nfsdcltrack=$enableval],
+	[enable_nfsdcltrack="yes"])
 
-AC_ARG_ENABLE(nfsv4server,
+AC_ARG_ENABLE([nfsv4server],
 	[AS_HELP_STRING([--enable-nfsv4server],[enable support for NFSv4 only server  @<:@default=no@:>@])],
-	enable_nfsv4server=$enableval,
-	enable_nfsv4server="no")
+	[enable_nfsv4server=$enableval],
+	[enable_nfsv4server="no"])
 	if test "$enable_nfsv4server" = yes; then
-		AC_DEFINE(HAVE_NFSV4SERVER_SUPPORT, 1,
+		AC_DEFINE([HAVE_NFSV4SERVER_SUPPORT], [1],
                           [Define this if you want NFSv4 server only support compiled in])
 	fi
-	AM_CONDITIONAL(CONFIG_NFSV4SERVER, [test "$enable_nfsv4server" = "yes" ])
+	AM_CONDITIONAL([CONFIG_NFSV4SERVER], [test "$enable_nfsv4server" = "yes" ])
 
 dnl Check for TI-RPC library and headers
 AC_LIBTIRPC
@@ -299,10 +299,10 @@ else
 	CC_FOR_BUILD=${CC_FOR_BUILD-gcc}
 fi
 
-AC_SUBST(CC_FOR_BUILD)
+AC_SUBST([CC_FOR_BUILD])
 
-AC_CHECK_TOOL(AR, ar)
-AC_CHECK_TOOL(LD, ld)
+AC_CHECK_TOOL([AR], [ar])
+AC_CHECK_TOOL([LD], [ld])
 
 AC_GNULIBC
 AC_BSD_SIGNALS
@@ -313,7 +313,7 @@ dnl *************************************************************
 
 AC_CHECK_FUNC([gethostbyname], ,
               [AC_CHECK_LIB([nsl], [gethostbyname], [LIBNSL="-lnsl"])])
-AC_SUBST(LIBNSL)
+AC_SUBST([LIBNSL])
 
 AC_CHECK_FUNC([connect], ,
               [AC_CHECK_LIB([socket], [connect], [LIBSOCKET="-lsocket"],
@@ -334,12 +334,12 @@ AC_LIBPTHREAD([])
 # rpc/rpc.h can come from the glibc or from libtirpc
 nfsutils_save_CPPFLAGS="${CPPFLAGS}"
 CPPFLAGS="${CPPFLAGS} ${TIRPC_CFLAGS}"
-AC_CHECK_HEADER(rpc/rpc.h, ,
-                AC_MSG_ERROR([Header file rpc/rpc.h not found - maybe try building with --enable-tirpc]))
+AC_CHECK_HEADER([rpc/rpc.h], [],
+                [AC_MSG_ERROR([Header file rpc/rpc.h not found - maybe try building with --enable-tirpc])])
 CPPFLAGS="${nfsutils_save_CPPFLAGS}"
 
-AC_CHECK_HEADER(uuid/uuid.h, ,
-	AC_MSG_ERROR([Cannot find needed header file uuid/uuid.h. Install libuuid-devel]))
+AC_CHECK_HEADER([uuid/uuid.h], [],
+	[AC_MSG_ERROR([Cannot find needed header file uuid/uuid.h. Install libuuid-devel])])
 
 dnl check for libevent libraries and headers
 AC_LIBEVENT
@@ -377,23 +377,23 @@ else
 fi
 
 if test "$enable_nfsv41" = yes; then
-  AC_CHECK_LIB([devmapper], [dm_task_create], [LIBDEVMAPPER="-ldevmapper"], AC_MSG_ERROR([libdevmapper needed]))
-  AC_CHECK_HEADER(libdevmapper.h, , AC_MSG_ERROR([Cannot find devmapper header file libdevmapper.h]))
-  AC_CHECK_HEADER(sys/inotify.h, , AC_MSG_ERROR([Cannot find header file sys/inotify.h]))
+  AC_CHECK_LIB([devmapper], [dm_task_create], [LIBDEVMAPPER="-ldevmapper"], [AC_MSG_ERROR([libdevmapper needed])])
+  AC_CHECK_HEADER([libdevmapper.h], [], [AC_MSG_ERROR([Cannot find devmapper header file libdevmapper.h])])
+  AC_CHECK_HEADER([sys/inotify.h], [], [AC_MSG_ERROR([Cannot find header file sys/inotify.h])])
 fi
 
 dnl enable nfsidmap when its support by libnfsidmap
-AM_CONDITIONAL(CONFIG_NFSDCLD, [test "$enable_nfsdcld" = "yes" ])
-AM_CONDITIONAL(CONFIG_NFSDCLTRACK, [test "$enable_nfsdcltrack" = "yes" ])
+AM_CONDITIONAL([CONFIG_NFSDCLD], [test "$enable_nfsdcld" = "yes" ])
+AM_CONDITIONAL([CONFIG_NFSDCLTRACK], [test "$enable_nfsdcltrack" = "yes" ])
 
 
 if test "$knfsd_cv_glibc2" = no; then
-    AC_CHECK_LIB(bsd, daemon, [LIBBSD="-lbsd"])
+    AC_CHECK_LIB([bsd], [daemon], [LIBBSD="-lbsd"])
 fi
 
 if test "$choose_blkid" != no; then 
-   AC_CHECK_LIB(blkid, blkid_get_library_version, [LIBBLKID="-lblkid"], AC_MSG_ERROR([libblkid needed]))
-   AC_CHECK_HEADER(blkid/blkid.h, , AC_MSG_ERROR([Cannot find libblkid header file blkid/blkid.h]))
+   AC_CHECK_LIB([blkid], [blkid_get_library_version], [LIBBLKID="-lblkid"], [AC_MSG_ERROR([libblkid needed])])
+   AC_CHECK_HEADER([blkid/blkid.h], [], [AC_MSG_ERROR([Cannot find libblkid header file blkid/blkid.h])])
    AC_BLKID_VERS
    if test $choose_blkid = yes; then
       use_blkid=1
@@ -405,19 +405,19 @@ if test "$choose_blkid" != no; then
 	   AC_MSG_WARN([uuid support disabled as libblkid is too old])
       fi
     fi
-    AC_DEFINE_UNQUOTED(USE_BLKID, $use_blkid, [Define if you want to use blkid to find uuid of filesystems])
+    AC_DEFINE_UNQUOTED([USE_BLKID], [$use_blkid], [Define if you want to use blkid to find uuid of filesystems])
 fi
-AC_SUBST(LIBSOCKET)
-AC_SUBST(LIBCRYPT)
-AC_SUBST(LIBBSD)
-AC_SUBST(LIBBLKID)
+AC_SUBST([LIBSOCKET])
+AC_SUBST([LIBCRYPT])
+AC_SUBST([LIBBSD])
+AC_SUBST([LIBBLKID])
 
 if test "$enable_libmount" = yes; then
-   AC_CHECK_LIB(mount, mnt_context_do_mount, [LIBMOUNT="-lmount"], AC_MSG_ERROR([libmount needed]))
-   AC_CHECK_HEADER(libmount/libmount.h, , AC_MSG_ERROR([Cannot find libmount header file libmount/libmount.h]))
+   AC_CHECK_LIB([mount], [mnt_context_do_mount], [LIBMOUNT="-lmount"], [AC_MSG_ERROR([libmount needed])])
+   AC_CHECK_HEADER([libmount/libmount.h], [], [AC_MSG_ERROR([Cannot find libmount header file libmount/libmount.h])])
 fi
-AM_CONDITIONAL(CONFIG_LIBMOUNT, [test "$enable_libmount" = "yes"])
-AC_SUBST(LIBMOUNT)
+AM_CONDITIONAL([CONFIG_LIBMOUNT], [test "$enable_libmount" = "yes"])
+AC_SUBST([LIBMOUNT])
 
 if test "$enable_gss" = yes; then
   dnl 'gss' requires getnameinfo - at least for gssd_proc.c
@@ -449,8 +449,8 @@ if test "$enable_gss" = yes; then
 fi
 
 dnl libdnsidmap specific checks
-AC_CHECK_LIB([resolv], [__res_querydomain], ,
-	AC_CHECK_LIB([resolv], [res_querydomain], , AC_MSG_ERROR(res_querydomain needed)))
+AC_CHECK_LIB([resolv], [__res_querydomain], [],
+	[AC_CHECK_LIB([resolv], [res_querydomain], [], [AC_MSG_ERROR(res_querydomain needed)])])
 
 AC_ARG_ENABLE([ldap],
 	[AS_HELP_STRING([--disable-ldap],[Disable support for LDAP @<:default=detect@:>@])])
@@ -463,9 +463,9 @@ if test "x$enable_ldap" != "xno" ; then
                 [have_ldap="no"])
         if test "x$have_ldap" = "xyes" ; then
                 dnl check for sasl funcs
-                AC_CHECK_HEADERS(sasl.h sasl/sasl.h)
-                AC_CHECK_HEADERS(gsssasl.h)
-                AC_CHECK_TYPE(sasl_interact_t,[have_sasl_interact_t="yes"],,[
+                AC_CHECK_HEADERS([sasl.h sasl/sasl.h])
+                AC_CHECK_HEADERS([gsssasl.h])
+                AC_CHECK_TYPE([sasl_interact_t],[have_sasl_interact_t="yes"],[],[
                         #ifdef HAVE_SASL_SASL_H
                         #include <sasl/sasl.h>
                         #elif defined(HAVE_SASL_H)
@@ -478,42 +478,42 @@ if test "x$enable_ldap" != "xno" ; then
 			"x$have_gss_krb5_ccache_name" = "xyes"; then
 			AC_DEFINE([HAVE_LDAP_SASL_INTERACTIVE_BIND_S],[1],[Has ldap_sasl_interactive_bind_s function])
 			AC_DEFINE([HAVE_GSS_KRB5_CCACHE_NAME],[1],[Has gss_krb5_ccache_name function])
-			AC_CHECK_HEADERS(gssapi/gssapi.h gssapi/gssapi_generic.h gssapi/gssapi_krb5.h gssapi.h krb5.h)
-			AC_DEFINE([ENABLE_LDAP_SASL],1,[Enable LDAP SASL support])
+			AC_CHECK_HEADERS([gssapi/gssapi.h gssapi/gssapi_generic.h gssapi/gssapi_krb5.h gssapi.h krb5.h])
+			AC_DEFINE([ENABLE_LDAP_SASL],[1],[Enable LDAP SASL support])
 			have_ldap_sasl="yes"
 		fi
-		AC_DEFINE([ENABLE_LDAP], 1, [Enable LDAP Support])
+		AC_DEFINE([ENABLE_LDAP], [1], [Enable LDAP Support])
         elif test "x$enable_ldap$have_ldap" = "xyesno" ; then
-                AC_MSG_ERROR(LDAP support not found!)
+                AC_MSG_ERROR([LDAP support not found!])
         fi
 fi
-AM_CONDITIONAL(ENABLE_LDAP, test "x$have_ldap" = "xyes")
-AM_CONDITIONAL(ENABLE_LDAP_SASL, test "x$have_ldap_sasl" = "xyes")
+AM_CONDITIONAL([ENABLE_LDAP], [test "x$have_ldap" = "xyes"])
+AM_CONDITIONAL([ENABLE_LDAP_SASL], [test "x$have_ldap_sasl" = "xyes"])
 
 dnl Should we build gums mapping library?
 AC_ARG_ENABLE([gums],
         [AS_HELP_STRING([--enable-gums],[Enable support for the GUMS mapping library @<:@default=false@:>@])])
 if test "x$enable_gums" = "xyes" ; then
-        AC_DEFINE([ENABLE_GUMS], 1, [Enable GUMS mapping library support])
+        AC_DEFINE([ENABLE_GUMS], [1], [Enable GUMS mapping library support])
 fi
-AM_CONDITIONAL(ENABLE_GUMS, test "x$enable_gums" = "xyes")
+AM_CONDITIONAL([ENABLE_GUMS], [test "x$enable_gums" = "xyes"])
 
 dnl Where do the Plugins live
-AC_ARG_WITH(pluginpath,
+AC_ARG_WITH([pluginpath],
     [AS_HELP_STRING([--with-pluginpath=/foo],[Causes the library to look in /foo instead of /usr/lib/libnfsidmap for plugins
     ])],
-    path_plugins=$withval,
-    path_plugins=""
+    [path_plugins=$withval],
+    [path_plugins=""]
     )
 if test -n "$path_plugins" ; then
-        AC_DEFINE_UNQUOTED(PATH_PLUGINS, "$path_plugins",
+        AC_DEFINE_UNQUOTED([PATH_PLUGINS], ["$path_plugins"],
                 [Define this to change the plugins path])
 fi
-AM_CONDITIONAL(PATH_PLUGINS, test -n "$path_plugins")
-AC_SUBST(PATH_PLUGINS, "$path_plugins")
+AM_CONDITIONAL([PATH_PLUGINS], [test -n "$path_plugins"])
+AC_SUBST([PATH_PLUGINS], ["$path_plugins"])
 
-AC_SUBST(AM_CPPFLAGS, "$AM_CPPFLAGS")
-AC_DEFINE([HAVE_NFS4_SET_DEBUG], 1,
+AC_SUBST([AM_CPPFLAGS], ["$AM_CPPFLAGS"])
+AC_DEFINE([HAVE_NFS4_SET_DEBUG], [1],
           [Bundled lib always has the `nfs4_set_debug' function.])
 
 dnl Check for IPv6 support
@@ -589,11 +589,11 @@ fi
 dnl *************************************************************
 dnl Check for data sizes
 dnl *************************************************************
-AC_CHECK_SIZEOF(short)
-AC_CHECK_SIZEOF(int)
-AC_CHECK_SIZEOF(long)
-AC_CHECK_SIZEOF(size_t)
-AC_CHECK_SIZEOF(socklen_t,, [AC_INCLUDES_DEFAULT
+AC_CHECK_SIZEOF([short])
+AC_CHECK_SIZEOF([int])
+AC_CHECK_SIZEOF([long])
+AC_CHECK_SIZEOF([size_t])
+AC_CHECK_SIZEOF([socklen_t],[], [AC_INCLUDES_DEFAULT
                              #ifdef HAVE_SYS_SOCKET_H
                              # include <sys/socket.h>
                              #endif])
@@ -602,9 +602,9 @@ AC_CHECK_SIZEOF(socklen_t,, [AC_INCLUDES_DEFAULT
 dnl *************************************************************
 dnl Export some path names to config.h
 dnl *************************************************************
-AC_DEFINE_UNQUOTED(NFS_STATEDIR, "$statedir", [This defines the location of the NFS state files. Warning: this must match definitions in config.mk!])
-AC_DEFINE_UNQUOTED(NSM_DEFAULT_STATEDIR, "$statdpath", [Define this to the pathname where statd keeps its state file])
-AC_DEFINE_UNQUOTED(NFS_CONFFILE, "$nfsconfig", [This defines the location of NFS daemon config file])
+AC_DEFINE_UNQUOTED([NFS_STATEDIR], ["$statedir"], [This defines the location of the NFS state files. Warning: this must match definitions in config.mk!])
+AC_DEFINE_UNQUOTED([NSM_DEFAULT_STATEDIR], ["$statdpath"], [Define this to the pathname where statd keeps its state file])
+AC_DEFINE_UNQUOTED([NFS_CONFFILE], ["$nfsconfig"], [This defines the location of NFS daemon config file])
 
 if test "x$cross_compiling" = "xno"; then
 	CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-"$CFLAGS"}
@@ -618,15 +618,15 @@ else
 	LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-""}
 fi
 
-AC_SUBST(CFLAGS)
-AC_SUBST(CXXFLAGS)
-AC_SUBST(CPPFLAGS)
-AC_SUBST(LDFLAGS)
+AC_SUBST([CFLAGS])
+AC_SUBST([CXXFLAGS])
+AC_SUBST([CPPFLAGS])
+AC_SUBST([LDFLAGS])
 
-AC_SUBST(CFLAGS_FOR_BUILD)
-AC_SUBST(CXXFLAGS_FOR_BUILD)
-AC_SUBST(CPPFLAGS_FOR_BUILD)
-AC_SUBST(LDFLAGS_FOR_BUILD)
+AC_SUBST([CFLAGS_FOR_BUILD])
+AC_SUBST([CXXFLAGS_FOR_BUILD])
+AC_SUBST([CPPFLAGS_FOR_BUILD])
+AC_SUBST([LDFLAGS_FOR_BUILD])
 
 my_am_cflags="\
  -pipe \
@@ -689,7 +689,7 @@ if test "$statedir" = "/var/lib/nfs"; then
 else
 	rpc_pipefsmount="$(systemd-escape -p "$statedir/rpc_pipefs").mount"
 fi
-AC_SUBST(rpc_pipefsmount)
+AC_SUBST([rpc_pipefsmount])
 
 # make _rpc_pipefsmount available for substitution in config files
 # 2 "evals" needed late to expand variable names.
-- 
2.44.0

