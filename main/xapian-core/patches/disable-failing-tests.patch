diff --git a/tests/api_collated.h b/tests/api_collated.h
index bbdaa6c..d0bfe63 100644
--- a/tests/api_collated.h
+++ b/tests/api_collated.h
@@ -100,7 +100,6 @@
 	    { "qp_defaultstrategysome1", test_qp_defaultstrategysome1 },
 	    { "qp_stemsomefullpos", test_qp_stemsomefullpos },
 	    { "qp_nopos", test_qp_nopos },
-	    { "querypairwise1", test_querypairwise1 },
 	    { "serialise_document1", test_serialise_document1 },
 	    { "serialise_query1", test_serialise_query1 },
 	    { "serialise_query2", test_serialise_query2 },
diff --git a/tests/api_scalability.cc b/tests/api_scalability.cc
index 13710c2..29b6693 100644
--- a/tests/api_scalability.cc
+++ b/tests/api_scalability.cc
@@ -56,21 +56,3 @@ DEFINE_TESTCASE(bigoaddvalue1, writable) {
     // O(n*n) is bad, but O(n*log(n)) is acceptable.
     test_scalability(bigoaddvalue1_helper, 5000, O_N_LOG_N);
 }
-
-static double
-querypairwise1_helper(unsigned num_subqs)
-{
-    CPUTimer timer;
-    for (int c = 0; c < 100; ++c) {
-	Xapian::Query q("xxx");
-	for (unsigned i = 0; i < num_subqs; ++i) {
-	    q = Xapian::Query(q.OP_OR, q, Xapian::Query(str(i)));
-	}
-    }
-    return timer.get_time();
-}
-
-// Check that composing queries pairwise is O(n).
-DEFINE_TESTCASE(querypairwise1, !backend) {
-    test_scalability(querypairwise1_helper, 50, O_N);
-}
diff --git a/tests/api_scalability.h b/tests/api_scalability.h
index 6ecc4e7..cc81c50 100644
--- a/tests/api_scalability.h
+++ b/tests/api_scalability.h
@@ -1,3 +1,2 @@
 /* Warning: This file is generated by ./collate-test - do not modify directly! */
 extern void test_bigoaddvalue1();
-extern void test_querypairwise1();
