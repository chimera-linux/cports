From df5a2c7e0b00cf0cc01b4ffd44fa65bb5e657a27 Mon Sep 17 00:00:00 2001
From: Jens Reidel <adrian@travitia.xyz>
Date: Sat, 21 Jun 2025 02:35:06 +0200
Subject: [PATCH] Adjust Table.GrowExtremelyLargeTable to avoid OOM on ARMv7

Signed-off-by: Jens Reidel <adrian@travitia.xyz>
---
 absl/container/internal/raw_hash_set_test.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/absl/container/internal/raw_hash_set_test.cc b/absl/container/internal/raw_hash_set_test.cc
index e1dafff3..3946c5e1 100644
--- a/absl/container/internal/raw_hash_set_test.cc
+++ b/absl/container/internal/raw_hash_set_test.cc
@@ -4043,7 +4043,7 @@ struct ConstUint8Hash {
 // 5. Finally we will catch up and go to overflow codepath.
 TEST(Table, GrowExtremelyLargeTable) {
   constexpr size_t kTargetCapacity =
-#if defined(__wasm__) || defined(__asmjs__) || defined(__i386__)
+#if defined(__wasm__) || defined(__asmjs__) || defined(__i386__) || defined(__arm__)
       NextCapacity(ProbedItem4Bytes::kMaxNewCapacity);  // OOMs on WASM, 32-bit.
 #else
       NextCapacity(ProbedItem8Bytes::kMaxNewCapacity);
-- 
2.49.0

