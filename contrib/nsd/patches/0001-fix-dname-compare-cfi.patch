diff --git a/dname.c b/dname.c
index 487d2535..7b32047e 100644
--- a/dname.c
+++ b/dname.c
@@ -339,6 +339,12 @@ dname_compare(const dname_type *left, const dname_type *right)
 	return (int) left->label_count - (int) right->label_count;
 }
 
+int
+tree_dname_compare(const void* a, const void* b)
+{
+	return dname_compare((const dname_type*)a, (const dname_type*)b);
+}
+
 
 int
 label_compare(const uint8_t *left, const uint8_t *right)
diff --git a/dname.h b/dname.h
index 0d5dc4ac..05a98122 100644
--- a/dname.h
+++ b/dname.h
@@ -183,6 +183,18 @@ dname_label(const dname_type *dname, uint8_t label)
  */
 int dname_compare(const dname_type *left, const dname_type *right);
 
+/*
+ * Compare two domain names. This is functionally equivalent to 
+ * dname_compare, but has void* arguments for usage in rbtree. The 
+ * comparison defines a lexicographical ordering based on the domain 
+ * name's labels, starting with the most significant label.
+ *
+ * Return < 0 if LEFT < RIGHT, 0 if LEFT == RIGHT, and > 0 if LEFT >
+ * RIGHT.  The comparison is case sensitive.
+ *
+ * Pre: left != NULL && right != NULL
+ */
+int tree_dname_compare(const void* left, const void* right);
 
 /*
  * Compare two labels.  The comparison defines a lexicographical
diff --git a/namedb.c b/namedb.c
index 772e038b..1699fd8a 100644
--- a/namedb.c
+++ b/namedb.c
@@ -348,8 +348,7 @@ domain_table_create(region_type* region)
 	root->rnode = radname_insert(result->nametree, dname_name(root->dname),
 		root->dname->name_size, root);
 #else
-	result->names_to_domains = rbtree_create(
-		region, (int (*)(const void *, const void *)) dname_compare);
+	result->names_to_domains = rbtree_create(region, tree_dname_compare);
 	rbtree_insert(result->names_to_domains, (rbnode_type *) root);
 #endif
 
diff --git a/options.c b/options.c
index e662ad14..361e0fb3 100644
--- a/options.c
+++ b/options.c
@@ -47,8 +47,7 @@ nsd_options_create(region_type* region)
 	opt = (struct nsd_options*)region_alloc(region, sizeof(
 		struct nsd_options));
 	opt->region = region;
-	opt->zone_options = rbtree_create(region,
-		(int (*)(const void *, const void *)) dname_compare);
+	opt->zone_options = rbtree_create(region, tree_dname_compare);
 	opt->configfile = NULL;
 	opt->zonestatnames = rbtree_create(opt->region, rbtree_strcmp);
 	opt->patterns = rbtree_create(region, rbtree_strcmp);
diff --git a/tsig.c b/tsig.c
index 8b24fd1b..a33238ef 100644
--- a/tsig.c
+++ b/tsig.c
@@ -140,12 +140,6 @@ tsig_digest_variables(tsig_record_type *tsig, int tsig_timers_only)
 	}
 }
 
-static int
-tree_dname_compare(const void* a, const void* b)
-{
-	return dname_compare((const dname_type*)a, (const dname_type*)b);
-}
-
 int
 tsig_init(region_type *region)
 {
diff --git a/xfrd.c b/xfrd.c
index 9882e3d5..7bdfffaf 100644
--- a/xfrd.c
+++ b/xfrd.c
@@ -538,10 +538,8 @@ xfrd_init_zones()
 	struct zone_options *zone_opt;
 	assert(xfrd->zones == 0);
 
-	xfrd->zones = rbtree_create(xfrd->region,
-		(int (*)(const void *, const void *)) dname_compare);
-	xfrd->notify_zones = rbtree_create(xfrd->region,
-		(int (*)(const void *, const void *)) dname_compare);
+	xfrd->zones = rbtree_create(xfrd->region, tree_dname_compare);
+	xfrd->notify_zones = rbtree_create(xfrd->region, tree_dname_compare);
 
 	RBTREE_FOR(zone_opt, struct zone_options*, xfrd->nsd->options->zone_options)
 	{
