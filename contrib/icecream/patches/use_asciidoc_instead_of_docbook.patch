From 186d900dec69cb09629700eb3f5987b3df8d6e05 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lubo=C5=A1=20Lu=C5=88=C3=A1k?= <l.lunak@centrum.cz>
Date: Sun, 26 Jul 2020 21:19:42 +0200
Subject: [PATCH] use asciidoc for manpages, instead of docbook

- Most of all, GitHub knows how to render online .adoc files directly
from the repository, so we can have online documentation simply
by having manpages written this way. Since currently README.md
duplicates a lot of content of icecream.7, this duplication can now
be removed.
- AsciiDoc is much simpler to read and write than Docbook. It has
no semantic marking (i.e. nothing like DocBook's <varname> etc. tags),
but that seems to be an acceptable cost and it's not really used
for anything anyway. I've written down some conventions
in the README.adoc file.
- There should be hopefully no hassle with finding the right
Docbook tool (configure searched for 5(!) different binaries and AFAIK
they are not always compatible).
- I'm no expert on Markdown vs AsciiDoc, but searching suggests
AsciiDoc is more standardized and more powerful.

This commit only translates manpages documents to AsciiDoc,
without changing any content. Updating it, removing obsolete and
duplicate content can come in following commits.
---
 .cirrus.yml                    |   2 +-
 .travis.yml                    |  10 +-
 configure.ac                   |  16 +-
 doc/Makefile.am                |  40 ++--
 doc/README.adoc                |  65 ++++++
 doc/icecc-create-env.adoc      |  40 ++++
 doc/icecc-scheduler.adoc       |  60 +++++
 doc/icecc.adoc                 |  35 +++
 doc/iceccd.adoc                |  90 ++++++++
 doc/icecream.adoc              | 321 ++++++++++++++++++++++++++
 doc/icerun.adoc                |  33 +++
 doc/man-icecc-create-env.1.xml |  81 -------
 doc/man-icecc-scheduler.1.xml  | 120 ----------
 doc/man-icecc.1.xml            |  60 -----
 doc/man-iceccd.1.xml           | 172 --------------
 doc/man-icecream.7.xml         | 397 ---------------------------------
 doc/man-icerun.1.xml           |  58 -----
 17 files changed, 684 insertions(+), 916 deletions(-)
 create mode 100644 doc/README.adoc
 create mode 100644 doc/icecc-create-env.adoc
 create mode 100644 doc/icecc-scheduler.adoc
 create mode 100644 doc/icecc.adoc
 create mode 100644 doc/iceccd.adoc
 create mode 100644 doc/icecream.adoc
 create mode 100644 doc/icerun.adoc
 delete mode 100644 doc/man-icecc-create-env.1.xml
 delete mode 100644 doc/man-icecc-scheduler.1.xml
 delete mode 100644 doc/man-icecc.1.xml
 delete mode 100644 doc/man-iceccd.1.xml
 delete mode 100644 doc/man-icecream.7.xml
 delete mode 100644 doc/man-icerun.1.xml

diff --git a/.cirrus.yml b/.cirrus.yml
index 7149ac952..a4589b56e 100644
--- a/.cirrus.yml
+++ b/.cirrus.yml
@@ -12,7 +12,7 @@ task:
   install_script:
     - sed -i.bak -e 's,pkg+http://pkg.FreeBSD.org/\${ABI}/quarterly,pkg+http://pkg.FreeBSD.org/\${ABI}/latest,' /etc/pkg/FreeBSD.conf
     - pkg upgrade -y
-    - pkg install -y autoconf automake docbook2X gmake libarchive libtool lzo2 pkgconf zstd
+    - pkg install -y autoconf automake asciidoc gmake libarchive libtool lzo2 pkgconf zstd
   script:
     - ./autogen.sh
     - ./configure --prefix=/usr/local
diff --git a/.travis.yml b/.travis.yml
index db86c76f7..bc091a082 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -2,6 +2,11 @@ language: cpp
 
 script:
   - |
+        if test "$TRAVIS_OS_NAME" = "osx"; then
+            # set up the catalog properly for asciidoc
+            sudo mkdir /etc/xml
+            sudo ln -s /usr/local/etc/xml/catalog /etc/xml/catalog
+        fi
   - ./autogen.sh
   - ./configure --prefix=$PWD/_inst
   - make -s -j $(getconf _NPROCESSORS_ONLN)
@@ -49,7 +54,7 @@ matrix:
   - os: osx
     before_install:
       - brew update
-      - brew install lzo docbook2x gdb ccache libarchive expect telnet util-linux gnu-getopt
+      - brew install lzo asciidoc docbook-xsl gdb ccache libarchive expect telnet util-linux gnu-getopt
   - os: linux
     sudo: true # for setcap so we can run the tests in chroot.
     compiler: clang
@@ -90,7 +95,8 @@ addons:
     - libcap-ng-utils
     - liblzo2-dev
     - libzstd1-dev
-    - docbook2x
+    - asciidoc
+    - xsltproc # needed by asciidoc
     - gdb
     - valgrind
     - libarchive-dev
diff --git a/configure.ac b/configure.ac
index 22723c9c0..d24b36ed0 100644
--- a/configure.ac
+++ b/configure.ac
@@ -112,13 +112,17 @@ AC_ARG_WITH(man,
 )
 AS_IF([test "x$with_man" != "xno"], [
     build_man=yes
-    AC_PATH_PROGS(DOCBOOK2X,
-        [docbook2x-man db2x_docbook2man docbook-to-man docbook2man.pl docbook2man])
-    AS_IF([test -z "$DOCBOOK2X"], [
-        AC_MSG_WARN([docbook2x is missing. Install docbook2x package.])
-        DOCBOOK2X='echo docbook2x is missing. Install docbook2x package.'])
+    AC_PATH_PROGS(ASCIIDOC, [asciidoc])
+    AS_IF([test -z "$ASCIIDOC"], [
+        AC_MSG_WARN([asciidoc is missing. Install asciidoc package.])
+        ASCIIDOC='echo asciidoc is missing. Install asciidoc package.'])
+    AC_PATH_PROGS(A2X, [a2x])
+    AS_IF([test -z "$A2X"], [
+        AC_MSG_WARN([a2x is missing. Install a2x package.])
+        A2X='echo a2x is missing. Install a2x package.'])
 ], [build_man=no])
-AC_SUBST(DOCBOOK2X)
+AC_SUBST(ASCIIDOC)
+AC_SUBST(A2X)
 AM_CONDITIONAL([WITH_ICECREAM_MAN], [test "x$build_man" != "xno"])
 
 ########################################################################
diff --git a/doc/Makefile.am b/doc/Makefile.am
index 7afc9e9eb..272ee5ad5 100644
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -1,22 +1,22 @@
 if WITH_ICECREAM_MAN
 
-icecc.1: $(srcdir)/man-icecc.1.xml
-	$(DOCBOOK2X) $<
+man_verbose = $(man_verbose_@AM_V@)
+man_verbose_ = $(man_verbose_@AM_DEFAULT_V@)
+man_verbose_0 = @echo MAN $@;
 
-icerun.1: $(srcdir)/man-icerun.1.xml
-	$(DOCBOOK2X) $<
+# do not show anything here
+xml_verbose = $(xml_verbose_@AM_V@)
+xml_verbose_ = $(xml_verbose_@AM_DEFAULT_V@)
+xml_verbose_0 = @
 
-icecc-create-env.1: $(srcdir)/man-icecc-create-env.1.xml
-	$(DOCBOOK2X) $<
+%.xml: $(srcdir)/%.adoc
+	$(xml_verbose)$(ASCIIDOC) -a revnumber=${VERSION} -d manpage -b docbook -o $(builddir)/$@ $<
 
-icecc-scheduler.1: $(srcdir)/man-icecc-scheduler.1.xml
-	$(DOCBOOK2X) $<
+%.1: %.xml
+	$(man_verbose)$(A2X) --doctype manpage --format manpage $<
 
-iceccd.1: $(srcdir)/man-iceccd.1.xml
-	$(DOCBOOK2X) $<
-
-icecream.7: $(srcdir)/man-icecream.7.xml
-	$(DOCBOOK2X) $<
+%.7: %.xml
+	$(man_verbose)$(A2X) --doctype manpage --format manpage $<
 
 dist_man_MANS = \
 	icecc.1 \
@@ -26,12 +26,14 @@ dist_man_MANS = \
 	icecc-create-env.1 \
 	icecream.7
 
+CLEANFILES = $(dist_man_MANS)
+
 endif
 
 EXTRA_DIST = \
-	man-icecc.1.xml \
-	man-icerun.1.xml \
-	man-iceccd.1.xml \
-	man-icecc-scheduler.1.xml \
-	man-icecc-create-env.1.xml \
-	man-icecream.7.xml
+	icecc.adoc \
+	icerun.adoc \
+	iceccd.adoc \
+	icecc-scheduler.adoc \
+	icecc-create-env.adoc \
+	icecream.adoc
diff --git a/doc/README.adoc b/doc/README.adoc
new file mode 100644
index 000000000..8aabc041b
--- /dev/null
+++ b/doc/README.adoc
@@ -0,0 +1,65 @@
+Icecream documentation is written using AsciiDoc (see https://asciidoc.org/).
+
+
+Manual pages
+------------
+
+* link:icecream.adoc[icecream(7)] - the main manual page
+
+* link:icecc.adoc[icecc(1)] - compiler wrapper
+
+* link:icerun.adoc[icerun(1)] - wrapper for custom commands
+
+* link:iceccd.adoc[iceccd(1)] - daemon
+
+* link:icecc-scheduler.adoc[icecc-scheduler(1)] - scheduler daemon
+
+* link:icecc-create-env.adoc[icecc-create-env(1)] - tool used to create compiler tarballs
+
+
+Documentation on writing using AsciiDoc
+---------------------------------------
+
+For AsciiDoc documentation see its https://asciidoc.org/userguide.html[User Guide]
+or some https://powerman.name/doc/asciidoc[cheatsheet].
+
+Also note that GitHub actually uses https://asciidoctor.org[AsciiDoctor], which is mostly
+compatible with AsciiDoc, but there may be slight differences. The AsciiDoc format is
+the one to use, both because the `asciidoc` tool is used to generate manual pages
+and because even GitHub uses compatibility mode for documentation written in the format
+required for manual pages.
+
+Conventions
+-----------
+
+Unlike Docbook, AsciiDoc does not mark semantic meaning of parts of text. This means
+it's simpler to read and write, but there are no official rules for how to mark a shell
+variable or a command.
+
+Follow these guidelines:
+
+* +++__+++ (underscores) - for "variables" where the proper value should be substituted
+ (AsciiDoc examples use single quotes for manpages, but that's inconsistent with normal
+ AsciiDoc formats, where single quotes simply result in quoting, and using underscores
+ seems have the same result when used for manpages).
+
+// TODO: Is the above a good rule?
+
+* +++**+++ (asterisk) - for literal names of commands, variables, etc., also inline examples of commands
+
+* +++``+++ (backticks) - for filenames, binary names, etc. in normal text
+
+Example:
+
+----
+To run a parallel build, use *make -j _num_*, where _num_ is a number of parallel jobs.
+If you use other build tool than `make`, such as `ninja`, consult the documentation of the tool.
+----
+
+This results in:
+
+To run a parallel build, use *make -j _num_*, where _num_ is a number of parallel jobs.
+If you use other build tool than `make`, such as `ninja`, consult the documentation of the tool.
+
+If you want to reference another document, use `+++link+++:document.adoc[Text]` or `+++link+++:document.adoc#section[Text]`.
+Use the `+++<<>>+++` format only when referencing sections in the same document.
diff --git a/doc/icecc-create-env.adoc b/doc/icecc-create-env.adoc
new file mode 100644
index 000000000..0b87f499e
--- /dev/null
+++ b/doc/icecc-create-env.adoc
@@ -0,0 +1,40 @@
+ICECC-CREATE_ENV(1)
+===================
+:doctype: manpage
+:man source: icerun
+:man version: {revnumber}
+:man manual: Icecream User's Manual
+
+Name
+----
+icecc-create-env - Create an Icrecream environment tarball
+
+
+Synopsis
+--------
+*icecc-create-env* _compiler-binary_ [--addfile _file_]...
+
+
+Description
+-----------
+Icecc-create-env is an Icecream helper that creates a new *.tar.gz*
+archive with all the files (compiler, tools and libraries) needed to setup a
+build environment.
+
+The resulting archive has a random file name like *ddaea39ca1a7c88522b185eca04da2d8.tar.gz*,
+which can then be renamed. See icecream(7) for more information on using the environment
+tarballs.
+
+NOTE: In the usual case it is not necessary to invoke `icecc-create-env` manually, as it will be
+called automatically for the native compiler used whenever necessary.
+
+
+Options
+-------
+*--addfile* _file_::
+    Add _file_ to the environment archive, can be specified multiple times.
+
+
+See Also
+--------
+link:icecream.adoc[icecream(7)], link:icecc-scheduler.adoc[icecc-scheduler(1)], link:iceccd.adoc[iceccd(1)]
diff --git a/doc/icecc-scheduler.adoc b/doc/icecc-scheduler.adoc
new file mode 100644
index 000000000..af58d9121
--- /dev/null
+++ b/doc/icecc-scheduler.adoc
@@ -0,0 +1,60 @@
+ICECC-SCHEDULER(1)
+==================
+:doctype: manpage
+:man source: icecc-scheduler
+:man version: {revnumber}
+:man manual: Icecream User's Manual
+
+
+Name
+----
+icecc-scheduler - Icecream scheduler
+
+
+Synopsis
+--------
+*icecc-scheduler* [_options_]
+
+
+Description
+-----------
+The Icecream scheduler is the central instance of an Icecream compile
+network. It distributes the compile jobs and provides the data for the
+monitors.
+
+
+Options
+-------
+
+*-d, --daemonize*::
+    Detach daemon from shell.
+
+*-r, --persistent-client-connection*::
+    Client connections are not disconnected from the scheduler even if there is a better scheduler available.
+
+*-h, --help*::
+    Print help message and exit.
+
+*-l, --log-file* _log-file_::
+    Name of file where log output is written to.
+
+*-n, --netname* _net-name_::
+    The name of the Icecream network the scheduler controls.
+
+*-p, --port* _port_::
+    IP port the scheduler uses.
+
+*-u, --user-uid* _user_::
+    Specify the system user used by the daemon, which must be
+    different than *root*. If not specified, the daemon defaults
+    to the *icecc* system user if available, or *nobody* if not.
+
+*-v, -vv, -vvv*::
+    Control verbosity of daemon. The more v the more verbose.
+
+
+See Also
+--------
+link:icecream.adoc[icecream(7)], link:iceccd.adoc[iceccd(1)],
+ifdef::env-github[link:https://github.com/icecc/icemon/tree/master/doc/icemon.adoc[icemon(1)]]
+ifndef::env-github[icemon(1)]
diff --git a/doc/icecc.adoc b/doc/icecc.adoc
new file mode 100644
index 000000000..4d7dff3cd
--- /dev/null
+++ b/doc/icecc.adoc
@@ -0,0 +1,35 @@
+ICECC(1)
+=========
+:doctype: manpage
+:man source: icecc
+:man version: {revnumber}
+:man manual: Icecream User's Manual
+
+
+Name
+----
+icecc - Icecream compiler stub
+
+
+Synopsis
+--------
+*icecc* [_compiler_] [_compile options_] -o _OBJECT_ -c _SOURCE_
+
+
+Description
+-----------
+Icecc is the Icecream compiler stub. It gets called in place of the actual
+compiler and transparently routes the compile requests to the Icecream
+network. You should not call icecc directly, but place the specific compiler
+stubs in your path:
+[source,shell]
+----
+export PATH=/usr/lib/icecc/bin:$PATH
+----
+
+
+See Also
+--------
+link:icecream.adoc[icecream(7)], link:icecc-scheduler.adoc[icecc-scheduler(1)], link:iceccd.adoc[iceccd(1)],
+ifdef::env-github[link:https://github.com/icecc/icemon/tree/master/doc/icemon.adoc[icemon(1)]]
+ifndef::env-github[icemon(1)]
diff --git a/doc/iceccd.adoc b/doc/iceccd.adoc
new file mode 100644
index 000000000..0f27af857
--- /dev/null
+++ b/doc/iceccd.adoc
@@ -0,0 +1,90 @@
+ICECCD(1)
+=========
+:doctype: manpage
+:man source: iceccd
+:man version: {revnumber}
+:man manual: Icecream User's Manual
+
+
+Name
+----
+iceccd - Icecream daemon
+
+
+Synopsis
+--------
+*iceccd* [_options_]
+
+
+Description
+-----------
+The Icecream daemon has to run on all nodes being part of the Icecream
+compile cluster. It receives compile jobs and executes them in a chroot
+environment. The compile clients send their compile environment the first time
+they send a job to a particular daemon, so that the environment of the daemon
+does not have to match the one of the client.
+
+The daemon also has to run on clients sending compile jobs to the Icecream
+network. If a node should be able to send compile jobs, but never receive any,
+start the daemon with the option *-m 0*.
+
+All Icecream daemons need to have contact to the Icecream scheduler which
+controls the distribution of data between compile nodes. Normally the daemon
+will automatically find the right scheduler. If this is not the case you can
+explicitly specify the name of the Icecream network and the host running the
+scheduler.
+
+
+Options
+-------
+
+*-b, --env-basedir* _env-basedir_::
+    Base directory for storing compile environments sent to the daemon by the compile clients.
+
+*--cache-limit* _MB_::
+    Maximum size in Mega Bytes of cache used to store compile environments of compile clients.
+
+*-d, --daemonize*::
+    Detach daemon from shell.
+
+*-h, --help*::
+    Print help message and exit.
+
+*-l, --log-file* _log-file_::
+    Name of file where log output is written to.
+
+*-m, --max-processes* _max-processes_::
+    Maximum number of compile jobs started in parallel on machine running the daemon.
+
+*-N* _hostname_::
+    The name of the icecream host on the network.
+
+*-n, --name, --netname* _net-name_::
+    The name of the icecream network the daemon should connect to.
+    There has to be a scheduler running for the network under the same network name.
+
+*--nice* _level_::
+    The level of niceness to use.  Default is 5.
+
+*--no-remote*::
+    Prevents jobs from other nodes being scheduled on this one.
+
+*-s, --scheduler-host* _scheduler-host_::
+    Name of host running the scheduler for the network the daemon
+    should connect to. This option might help if the scheduler cannot broadcast its
+    presence to the clients due to firewall settings or similar
+    reasons, when this is enabled scheduler should use *--persistent-client-connection*.
+
+*-u, --user-uid* _user_::
+    Specify the system user used by the daemon, which must be different than *root*.
+    If not specified, the daemon defaults to the *icecc* system user if available, or *nobody* if not.
+
+*-v, -vv, -vvv*::
+    Control verbosity of daemon. The more v the more verbose.
+
+
+See Also
+--------
+link:icecream.adoc[icecream(7)], link:icecc-scheduler.adoc[icecc-scheduler(1)],
+ifdef::env-github[link:https://github.com/icecc/icemon/tree/master/doc/icemon.adoc[icemon(1)]]
+ifndef::env-github[icemon(1)]
diff --git a/doc/icecream.adoc b/doc/icecream.adoc
new file mode 100644
index 000000000..b7f314e79
--- /dev/null
+++ b/doc/icecream.adoc
@@ -0,0 +1,321 @@
+ICECREAM(7)
+===========
+:doctype: manpage
+:man source: icecream
+:man version: {revnumber}
+:man manual: Icecream User's Manual
+:toc:
+// TOC placement on GitHub is strange (https://gist.github.com/dcode/0cfbf2699a1fe9b46ff04c41721dda74#table-of-contents)
+ifdef::env-github[]
+:toc-placement!:
+:toc-title: Table of Contents
+endif::[]
+
+
+Name
+----
+icecream - A distributed compile system
+
+
+ifdef::env-github[]
+toc::[]
+endif::[]
+
+
+Description
+-----------
+Icecream is a distributed compile system for C and C++.
+
+Icecream is created by SUSE and is based on ideas and code by distcc. Like
+distcc it takes compile jobs from your build and distributes it to remote
+machines allowing a parallel build on several machines you have got. But unlike
+distcc Icecream uses a central server that schedules the compile jobs to the
+fastest free server and is as this dynamic. This advantage pays off mostly for
+shared computers, if you are the only user on X machines, you have full control
+over them anyway.
+
+
+How to Use Icecream
+-------------------
+You need:
+
+* One machine that runs the scheduler (*icecc-scheduler -d*)
+* Many machines that run the daemon (*iceccd -d*)
+
+If you want to compile using icecream, make sure `$prefix/lib/icecc/bin`
+is the first entry in your path, e.g. type
+*export PATH=/usr/lib/icecc/bin:$PATH* (hint: put this in `~/.bashrc` or `/etc/profile` to not have to type it in everytime).
+
+Then you just compile with *make -j _num_*, where _num_ is the amount of jobs you want to compile in parallel.
+Hello _there_.
+Do not exaggerate. Too large numbers can overload your machine or the compile cluster
+and make the build in fact slower.
+
+WARNING: Never use icecream in untrusted environments. Run the daemons and
+the scheduler as unpriviliged user in such networks if you have to! But you will
+have to rely on homogeneous networks then (see below).
+
+If you want an overview of your icecream compile cluster, or if you just want funny stats,
+you might want to run icemon.
+
+
+Using icecream in heterogeneous environments
+--------------------------------------------
+
+If you are running icecream daemons in the same icecream
+network but on machines with incompatible compiler versions, icecream needs to send
+your build environment to remote machines (note: they 'all' must be running as
+root if compiled without libcap-ng support. In the future icecream might gain the ability to know when machines cannot
+accept a different environment, but for now it is all or nothing).
+
+Under normal circumstances this is handled transparently by the icecream
+daemon, which will prepare a tarball with the environment when needed.
+This is the recommended way, as the daemon will also automatically update
+the tarball whenever your compiler changes.
+
+If you want to handle this manually for some reason, you have to tell
+icecream which environment you are using. Use *icecc --build-native* to
+create an archive file containing all the files necessary to setup the compiler
+environment. The file will have a random unique name like
+*ddaea39ca1a7c88522b185eca04da2d8.tar.bz2* per default. Rename it to something
+more expressive for your convenience, e.g. *i386-3.3.1.tar.bz2*. Set
+*ICECC_VERSION=_filename_of_archive_containing_your_environment_*
+in the shell environment where you start the compile jobs and the file will be
+transferred to the daemons where your compile jobs run and installed to a chroot
+environment for executing the compile jobs in the environment fitting to the
+environment of the client. This requires that the icecream daemon runs as root.
+
+
+Cross-Compiling using icecream
+------------------------------
+
+SUSE got quite some good machines not having a processor from Intel or
+AMD, so icecream is pretty good in using cross-compiler environments similar
+to the above way of spreading compilers. There the ICECC_VERSION variable looks
+like
+*_native_filename_(,_platform_+++:+++_cross_compiler_filename_)+++*+++*,
+for example like this:
+*/work/9.1-i386.tar.bz2,ia64:/work/9.1-cross-ia64.tar.bz2*
+
+How to package such a cross compiler is pretty straightforward if you look
+what is inside the tarballs generated by *icecc --build-native*.
+
+
+Cross-Compiling for embedded targets using icecream
+---------------------------------------------------
+
+When building for embedded targets like ARM often you will have a toolchain
+that runs on your host and produces code for the target. In these situations you
+can exploit the power of icecream as well.
+
+Create symlinks from where `icecc` is to the name of your cross compilers
+(e.g. `arm-linux-g++` and `arm-linux-gcc`), make sure that these symlinks are in the
+path and before the path of your toolchain, with *$ICECC_CC*
+and *$ICECC_CXX* you need to tell icecream which compilers to
+use for preprocessing and local compiling. e.g. set it to
+*ICECC_CC=arm-linux-gcc* and *ICECC_CXX=arm-linux-g++*.
+
+As the next step you need to create a *.tar.bz2* of your cross compiler,
+check the result of build-native to see what needs to be present.
+
+Finally one needs to set *ICECC_VERSION* and point it to
+the *.tar.bz2* you have created.
+When you start compiling your toolchain will be used.
+
+NOTE: With *ICECC_VERSION* you point out on which
+platforms your toolchain runs, you do not indicate for which target code will be
+generated.
+
+
+Cross-Compiling for multiple targets in the same environment using icecream
+---------------------------------------------------------------------------
+When working with toolchains for multiple targets, icecream can be
+configured to support multiple toolchains in the same environment.
+
+Multiple toolchains can be configured by appending *=_target_* to the
+tarball filename in the *ICECC_VERSION* variable. Where the _target_ is
+the cross compiler prefix. There the *ICECC_VERSION* variable will look
+like *_native_filename_(,_platform_+++:+++_cross_compiler_filename_=_target_)+++*+++*.
+
+Below an example of how to configure icecream to use two toolchains,
+`/work/toolchain1/bin/arm-eabi-[gcc,g++]` and `/work/toolchain2/bin/arm-linux-androideabi-[gcc,g++]`,
+for the same host architecture:
+
+* Create symbolic links with the cross compilers names
+    (e.g. `arm-eabi-[gcc,g++]` and `arm-linux-androideabi-[gcc,g++]`)
+    pointing to where the icecc binary is. Make sure these symbolic links are
+    in the *$PATH* and before the path of the toolchains.
+* Create a tarball file for each toolchain that you want to use with
+    icecream. The `icecc-create-env` script can be used to
+    create the tarball file for each toolchain, for example:
++
+[source,shell]
+----
+icecc-create-env /work/toolchain1/bin/arm-eabi-gcc
+icecc-create-env /work/toolchain2/bin/arm-linux-androideabi-gcc
+----
+* Set *ICECC_VERSION* to point to the native tarball file and for each
+    tarball file created to the toolchains (e.g.
+    *ICECC_VERSION=/work/i386-native.tar.gz,/work/arm-eabi-toolchain1.tar.gz=arm-eabi,/work/arm-linux-androideabi-toolchain2.tar.gz=arm-linux-androideabi*).
+
+With these steps icecream will use `/work/arm-eabi-toolchain1.tar.gz`
+file to cross compilers with the prefix `arm-eabi`
+(e.g. `arm-eabi-gcc` and `arm-eabi-g++`), use
+`/work/arm-linux-androideabi-toolchain2.tar.gz`
+file to cross compilers with the prefix `arm-linux-androideabi`
+(e.g. `arm-linux-androideabi-gcc` and `arm-linux-androideabi-g++`)
+and use `/work/i386-native.tar.gz` file to compilers without prefix,
+the native compilers.
+
+
+How to combine icecream with ccache
+-----------------------------------
+
+The easiest way to use ccache with icecream is to set *CCACHE_PREFIX*
+to `icecc` (the actual icecream client wrapper)
+
+[source,shell]
+----
+export CCACHE_PREFIX=icecc
+----
+
+This will make ccache prefix any compilation command it needs to do with `icecc`,
+making it use icecream for the compilation (but not for preprocessing alone).
+
+To actually use ccache, the mechanism is the same like with using icecream alone.
+Since ccache does not provide any symlinks in `/opt/ccache/bin`,
+you can create them manually:
+
+[source,shell]
+----
+mkdir /opt/ccache/bin
+ln -s /usr/bin/ccache /opt/ccache/bin/gcc
+ln -s /usr/bin/ccache /opt/ccache/bin/g++
+----
+
+And then compile with
+
+[source,shell]
+----
+export PATH=/opt/ccache/bin:$PATH
+----
+
+Note however that ccache is not really worth the trouble if you are not
+recompiling your project three times a day from scratch (it adds quite some overhead
+in comparing the preprocessor output and uses quite some disc space and I found
+a cache hit of 18% a bit too few, so I disabled it again).
+
+Debug output
+------------
+
+You can use the environment variable *ICECC_DEBUG* to
+control if icecream gives debug output or not. Set it to
+*debug* to get debug output. The other possible values are
+*error*, *warning* and *info*
+(the *-v* option for daemon and scheduler raise the level per
+*-v* on the command line - so use *-vvv* for full debug).
+
+
+Avoiding old hosts
+------------------
+
+It is possible that compilation on some hosts fails because they are too old
+(typically the kernel on the remote host is too old for the glibc from the local host).
+Recent icecream versions should automatically detect this and avoid such hosts
+when compilation would fail. If some hosts are running old icecream versions and
+it is not possible to upgrade them for some reason, use
+
+[source,shell]
+----
+export ICECC_IGNORE_UNVERIFIED=1
+----
+
+
+Some Numbers
+------------
+
+Numbers of my test case (some STL C++ genetic algorithm)
+
+* `g++` on my machine: 1.6s
+* `g++` on fast machine: 1.1s
+* icecream using my machine as remote machine: 1.9s
+* icecream using fast machine: 1.8s
+
+The icecream overhead is quite huge as you might notice, but the compiler
+cannot interleave preprocessing with compilation and the file needs to be
+read/written once more and in between the file is transferred.
+
+But even if the other computer is faster, using `g++` on my local machine
+is faster. If you are (for whatever reason) alone in your network at some point,
+you lose all advantages of distributed compiling and only add the overhead. So
+icecream got a special case for local compilations (the same special meaning
+that localhost got within $DISTCC_HOSTS). This makes compiling on my machine
+using icecream down to 1.7s (the overhead is actually less than 0.1s in
+average).
+
+As the scheduler is aware of that meaning, it will prefer your own
+computer if it is free and got not less than 70% of the fastest available
+computer.
+
+Keep in mind, that this affects only the first compile job, the second one
+is distributed anyway. So if I had to compile two of my files, I would get
+
+* `g++ -j1` on my machine: 3.2s
+* `g++ -j1` on the fast machine: 2.2s
+* using icecream `-j2` on my machine: max(1.7,1.8)=1.8s
+* (using icecream `-j2` on the other machine: max(1.1,1.8)=1.8s)
+
+The math is a bit tricky and depends a lot on the current state of the
+compilation network, but make sure you are not blindly assuming
+`make -j2` halves your compilation time.
+
+
+What is the best environment for icecream
+-----------------------------------------
+
+In most requirements icecream is not special, e.g. it does not matter what
+distributed compile system you use, you will not have fun if your nodes are
+connected through than less or equal to 10MBit. Note that icecream compresses
+input and output files (using `lzo`), so you can calc with ~1MBit per compile job
+- i.e. more than `make -j10` will not be possible without delays.
+
+Remember that more machines are only good if you can use massive
+parallelization, but you will for sure get the best result if your submitting
+machine (the one you called `g++` on) will be fast enough to feed the others.
+Especially if your project consists of many easy to compile files, the
+preprocessing and file I/O will be job enough to need a quick machine.
+
+The scheduler will try to give you the fastest machines available, so even
+if you add old machines, they will be used only in exceptional situations, but
+still you can have bad luck - the scheduler does not know how long a job will
+take before it started. So if you have 3 machines and two quick to compile and
+one long to compile source file, you are not safe from a choice where everyone
+has to wait on the slow machine. Keep that in mind.
+
+
+Network setup for Icecream (firewalls)
+--------------------------------------
+
+A short overview of the ports icecream requires:
+
+* TCP/10245 on the daemon computers (required)
+* TCP/8765 for the the scheduler computer (required)
+* TCP/8766 for the telnet interface to the scheduler (optional)
+* UDP/8765 for broadcast to find the scheduler (optional)
+
+If the monitor cannot find the scheduler, use *ICECC_SCHEDULER=_host_ icemon*.
+
+
+See Also
+--------
+link:icecc-scheduler.adoc[icecc-scheduler(1)], link:iceccd.adoc[iceccd(1)],
+ifdef::env-github[link:https://github.com/icecc/icemon/tree/master/doc/icemon.adoc[icemon(1)]]
+ifndef::env-github[icemon(1)]
+
+
+Icecream Authors
+----------------
+* Stephan Kulow <coolo@suse.de>
+* Michael Matz <matz@suse.de>
+* Cornelius Schumacher <cschum@suse.de>
+* ...and various other contributors.
diff --git a/doc/icerun.adoc b/doc/icerun.adoc
new file mode 100644
index 000000000..4d285bff0
--- /dev/null
+++ b/doc/icerun.adoc
@@ -0,0 +1,33 @@
+ICERUN(1)
+=========
+:doctype: manpage
+:man source: icerun
+:man version: {revnumber}
+:man manual: Icecream User's Manual
+
+
+Name
+----
+icerun - Icecream custom command wrapper
+
+
+Synopsis
+--------
+*icerun* [_command_] [_command options_]
+
+
+Description
+-----------
+Icerun is the Icecream custom command wrapper. It simply executes the passed
+command, but limits the number of parallel invocations the same way local compilations
+are limited. Since builds using Icecream usually require increasing the parallelism
+of a build, wrapping custom resource-demanding commands this way prevents these
+commnads from overloading the system.
+
+
+See Also
+--------
+link:icecream.adoc[icecream(7)], link:icecc.adoc[icecc(1)], link:icecc-scheduler.adoc[icecc-scheduler(1)],
+link:iceccd.adoc[iceccd(1)],
+ifdef::env-github[link:https://github.com/icecc/icemon/tree/master/doc/icemon.adoc[icemon(1)]]
+ifndef::env-github[icemon(1)]
diff --git a/doc/man-icecc-create-env.1.xml b/doc/man-icecc-create-env.1.xml
deleted file mode 100644
index 3e03c7350..000000000
--- a/doc/man-icecc-create-env.1.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0" ?>
-<!-- vim:set ts=4 noet syntax=xml: -->
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
-[
-  <!ENTITY clang "<application>Clang</application>">
-  <!ENTITY gcc "<application>GCC</application>">
-  <!ENTITY icecc-create-env "<application>icecc-create-env</application>">
-]>
-
-<refentry id="icecc-create-env">
-
-<refentryinfo>
-  <title>Icecream User's Manual</title>
-  <author>
-    <personname>
-      <firstname>Pino</firstname>
-      <surname>Toscano</surname>
-    </personname>
-  </author>
-  <date>June 5rd, 2013</date>
-  <productname>Icecream</productname>
-</refentryinfo>
-
-<refmeta>
-  <refentrytitle>icecc-create-env</refentrytitle>
-  <manvolnum>1</manvolnum>
-</refmeta>
-
-<refnamediv>
-  <refname>icecc-create-env</refname>
-  <refpurpose>Create an Icrecream environment tarball</refpurpose>
-</refnamediv>
-
-<refsynopsisdiv>
-<cmdsynopsis>
-<command>icecc-create-env</command>
-<arg choice="plain"><replaceable>compiler-binary</replaceable></arg>
-<arg rep="repeat">--addfile <replaceable>file</replaceable></arg>
-</cmdsynopsis>
-</refsynopsisdiv>
-
-<refsect1>
-<title>Description</title>
-<para>&icecc-create-env; is an Icecream helper that creates a new <literal role="extension">.tar.gz</literal>
-archive with all the files (compiler, tools and libraries) needed to setup a
-build environment.</para>
-<para>The resulting archive has a random file name like
-<filename>ddaea39ca1a7c88522b185eca04da2d8.tar.gz</filename>, which can
-then be renamed. See icecream(7) for more information on using the environment
-tarballs.</para>
-<para>Note that in the usual case it is not necessary to invoke icecc-create-env manually, as it will be
-called automatically for the native compiler used whenever necessary.</para>
-</refsect1>
-
-<refsect1>
-<title>Options</title>
-
-<variablelist>
-
-<varlistentry>
-<term><option>--addfile</option>
-<parameter>file</parameter></term>
-<listitem><para>Add <replaceable>file</replaceable> to the environment
-archive; can be specified multiple times.</para></listitem>
-</varlistentry>
-
-</variablelist>
-
-</refsect1>
-
-
-<refsect1>
-<title>See Also</title>
-<para>icecream(7), icecc-scheduler(1), iceccd(1)</para>
-</refsect1>
-
-<refsect1>
-<title>Author</title>
-<para>Pino Toscano</para>
-</refsect1>
-</refentry>
diff --git a/doc/man-icecc-scheduler.1.xml b/doc/man-icecc-scheduler.1.xml
deleted file mode 100644
index fa0bc9012..000000000
--- a/doc/man-icecc-scheduler.1.xml
+++ /dev/null
@@ -1,120 +0,0 @@
-<?xml version="1.0" ?>
-<!-- vim:set ts=4 noet syntax=xml: -->
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
-[
-  <!ENTITY icecc-scheduler "<application>icecc-scheduler</application>">
-]>
-
-<refentry id="icecc-scheduler">
-
-<refentryinfo>
-  <title>Icecream User's Manual</title>
-  <author>
-    <personname>
-      <firstname>Cornelius</firstname>
-      <surname>Schumacher</surname>
-    </personname>
-  </author>
-  <date>April 21th, 2005</date>
-  <productname>Icecream</productname>
-</refentryinfo>
-
-<refmeta>
-  <refentrytitle>icecc-scheduler</refentrytitle>
-  <manvolnum>1</manvolnum>
-</refmeta>
-
-<refnamediv>
-  <refname>icecc-scheduler</refname>
-  <refpurpose>Icecream scheduler</refpurpose>
-</refnamediv>
-
-<refsynopsisdiv>
-<cmdsynopsis>
-<command>icecc-scheduler</command>
-<arg>-d</arg>
-<arg>-r</arg>
-<arg>-l <replaceable>log-file</replaceable></arg>
-<arg>-n <replaceable>net-name</replaceable></arg>
-<arg>-p <replaceable>port</replaceable></arg>
-<arg>-u <replaceable>user</replaceable></arg>
-<arg>-v<arg>v<arg>v</arg></arg></arg>
-</cmdsynopsis>
-</refsynopsisdiv>
-
-<refsect1>
-<title>Description</title>
-<para>The Icecream scheduler is the central instance of an Icecream compile
-network. It distributes the compile jobs and provides the data for the
-monitors.</para>
-</refsect1>
-
-<refsect1>
-<title>Options</title>
-
-<variablelist>
-
-<varlistentry>
-<term><option>-d</option>, <option>--daemonize</option></term>
-<listitem><para>Detach daemon from shell.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-r</option>, <option>--persistent-client-connection</option></term>
-<listitem><para>Client connections are not disconnected from the scheduler even if there is a better scheduler available.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-h</option>, <option>--help</option></term>
-<listitem><para>Print help message and exit.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-l</option>, <option>--log-file</option>
-<parameter>log-file</parameter></term>
-<listitem><para>Name of file where log output is written to.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-n</option>, <option>--netname</option>
-<parameter>net-name</parameter></term>
-<listitem><para>The name of the Icecream network the scheduler
-controls.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-p</option>, <option>--port</option>
-<parameter>port</parameter></term>
-<listitem><para>IP port the scheduler uses.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-u</option>, <option>--user-uid</option>
-<parameter>user</parameter></term>
-<listitem><para>Specify the system user used by the daemon, which must be
-different than <quote>root</quote>. If not specified, the daemon defaults
-to the <quote>icecc</quote> system user if available, or <quote>nobody</quote>
-if not.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-v</option>, <option>-vv</option>, <option>-vvv</option></term>
-<listitem><para>Control verbosity of daemon. The more v the more
-verbose.</para></listitem>
-</varlistentry>
-
-</variablelist>
-
-</refsect1>
-
-
-<refsect1>
-<title>See Also</title>
-<para>icecream(7), iceccd(1), icemon(1)</para>
-</refsect1>
-
-<refsect1>
-<title>Author</title>
-<para>Cornelius Schumacher</para>
-</refsect1>
-</refentry>
diff --git a/doc/man-icecc.1.xml b/doc/man-icecc.1.xml
deleted file mode 100644
index 40ac96786..000000000
--- a/doc/man-icecc.1.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" ?>
-<!-- vim:set ts=4 noet syntax=xml: -->
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
-[
-  <!ENTITY icecc "<application>icecc</application>">
-]>
-
-<refentry id="icecc">
-
-<refentryinfo>
-  <title>Icecream User's Manual</title>
-  <author>
-    <personname>
-      <firstname>Cornelius</firstname>
-      <surname>Schumacher</surname>
-    </personname>
-  </author>
-  <date>April 21th, 2005</date>
-  <productname>Icecream</productname>
-</refentryinfo>
-
-<refmeta>
-  <refentrytitle>icecc</refentrytitle>
-  <manvolnum>1</manvolnum>
-</refmeta>
-
-<refnamediv>
-  <refname>icecc</refname>
-  <refpurpose>Icecream compiler stub</refpurpose>
-</refnamediv>
-
-<refsynopsisdiv>
-<cmdsynopsis>
-<command>icecc</command>
-<arg><replaceable>compiler</replaceable></arg>
-<arg><replaceable>compile options</replaceable></arg>
-<arg choice="plain">-o <replaceable>OBJECT</replaceable></arg>
-<arg choice="plain">-c <replaceable>SOURCE</replaceable></arg>
-</cmdsynopsis>
-</refsynopsisdiv>
-
-<refsect1>
-<title>Description</title>
-<para>&icecc; is the Icecream compiler stub. It gets called in place of the actual
-compiler and transparently routes the compile requests to the Icecream
-network. You should not call &icecc; directly, but place the specific compiler
-stubs in your path:
-<command>export PATH=/usr/lib/icecc/bin:$PATH</command>.</para>
-</refsect1>
-
-<refsect1>
-<title>See Also</title>
-<para>icecream(7), icecc-scheduler(1), iceccd(1), icemon(1)</para>
-</refsect1>
-
-<refsect1>
-<title>Author</title>
-<para>Cornelius Schumacher</para>
-</refsect1>
-</refentry>
diff --git a/doc/man-iceccd.1.xml b/doc/man-iceccd.1.xml
deleted file mode 100644
index c8d328301..000000000
--- a/doc/man-iceccd.1.xml
+++ /dev/null
@@ -1,172 +0,0 @@
-<?xml version="1.0" ?>
-<!-- vim:set ts=4 noet syntax=xml: -->
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
-[
-  <!ENTITY iceccd "<application>iceccd</application>">
-]>
-
-<refentry id="iceccd">
-
-<refentryinfo>
-  <title>Icecream User's Manual</title>
-  <author>
-    <personname>
-      <firstname>Cornelius</firstname>
-      <surname>Schumacher</surname>
-    </personname>
-  </author>
-  <date>April 21th, 2005</date>
-  <productname>Icecream</productname>
-</refentryinfo>
-
-<refmeta>
-  <refentrytitle>iceccd</refentrytitle>
-  <manvolnum>1</manvolnum>
-</refmeta>
-
-<refnamediv>
-  <refname>iceccd</refname>
-  <refpurpose>Icecream daemon</refpurpose>
-</refnamediv>
-
-<refsynopsisdiv>
-<cmdsynopsis>
-<command>iceccd</command>
-<arg>-b <replaceable>env-basedir</replaceable></arg>
-<arg>--cache-limit <replaceable>MB</replaceable></arg>
-<arg>-d</arg>
-<arg>-l <replaceable>log-file</replaceable></arg>
-<arg>-m <replaceable>max-processes</replaceable></arg>
-<arg>-N <replaceable>hostname</replaceable></arg>
-<arg>-n <replaceable>node-name</replaceable></arg>
-<arg>--nice <replaceable>level</replaceable></arg>
-<arg>--no-remote</arg>
-<arg>-s <replaceable>scheduler-host</replaceable></arg>
-<arg>-u <replaceable>user</replaceable></arg>
-<arg>-v<arg>v<arg>v</arg></arg></arg>
-</cmdsynopsis>
-</refsynopsisdiv>
-
-<refsect1>
-<title>Description</title>
-<para>The Icecream daemon has to run on all nodes being part of the Icecream
-compile cluster. It receives compile jobs and executes them in a chroot
-environment. The compile clients send their compile environment the first time
-they send a job to a particular daemon, so that the environment of the daemon
-does not have to match the one of the client.</para>
-
-<para>The daemon also has to run on clients sending compile jobs to the Icecream
-network. If a node should be able to send compile jobs, but never receive any,
-start the daemon with the option <option>-m 0</option>.</para>
-
-<para>All Icecream daemons need to have contact to the Icecream scheduler which
-controls the distribution of data between compile nodes. Normally the daemon
-will automatically find the right scheduler. If this is not the case you can
-explicitly specify the name of the Icecream network and the host running the
-scheduler.</para>
-
-</refsect1>
-
-<refsect1>
-<title>Options</title>
-
-<variablelist>
-
-<varlistentry>
-<term><option>-b</option>, <option>--env-basedir</option>
-<parameter>env-basedir</parameter></term>
-<listitem><para>Base directory for storing compile environments sent to the
-daemon by the compile clients.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>--cache-limit</option> <parameter>MB</parameter></term>
-<listitem><para>Maximum size in Mega Bytes of cache used to store compile
-environments of compile clients.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-d</option>, <option>--daemonize</option></term>
-<listitem><para>Detach daemon from shell.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-h</option>, <option>--help</option></term>
-<listitem><para>Print help message and exit.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-l</option>, <option>--log-file</option>
-<parameter>log-file</parameter></term>
-<listitem><para>Name of file where log output is written to.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-m</option>, <option>--max-processes</option>
-<parameter>max-processes</parameter></term>
-<listitem><para>Maximum number of compile jobs started in parallel on machine
-running the daemon.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-N</option> <parameter>hostname</parameter></term>
-<listitem><para>The name of the icecream host on the network.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-n</option>, <option>--name</option>, <option>--netname</option>
-<parameter>net-name</parameter></term>
-<listitem><para>The name of the icecream network the daemon should connect to.
-There has to be a scheduler running for the network under the same network
-name.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>--nice</option> <parameter>level</parameter></term>
-<listitem><para>The level of niceness to use.  Default is 5.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>--no-remote</option></term>
-<listitem><para>Prevents jobs from other nodes being scheduled on this one.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-s</option>, <option>--scheduler-host</option>
-<parameter>scheduler-host</parameter></term>
-<listitem><para>Name of host running the scheduler for the network the daemon
-should connect to. This option might help if the scheduler cannot broadcast its
-presence to the clients due to firewall settings or similar
-reasons, when this is enabled scheduler should use --persistent-client-connection.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-u</option>, <option>--user-uid</option>
-<parameter>user</parameter></term>
-<listitem><para>Specify the system user used by the daemon, which must be
-different than <quote>root</quote>. If not specified, the daemon defaults
-to the <quote>icecc</quote> system user if available, or <quote>nobody</quote>
-if not.</para></listitem>
-</varlistentry>
-
-<varlistentry>
-<term><option>-v</option>, <option>-vv</option>, <option>-vvv</option></term>
-<listitem><para>Control verbosity of daemon. The more v the more
-verbose.</para></listitem>
-</varlistentry>
-
-</variablelist>
-
-</refsect1>
-
-<refsect1>
-<title>See Also</title>
-<para>icecream(7), icecc-scheduler(1), icemon(1)</para>
-</refsect1>
-
-<refsect1>
-<title>Author</title>
-<para>Cornelius Schumacher</para>
-</refsect1>
-
-</refentry>
diff --git a/doc/man-icecream.7.xml b/doc/man-icecream.7.xml
deleted file mode 100644
index 96b2b9125..000000000
--- a/doc/man-icecream.7.xml
+++ /dev/null
@@ -1,397 +0,0 @@
-<?xml version="1.0" ?>
-<!-- vim:set ts=4 noet syntax=xml: -->
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
-[
-  <!ENTITY ccache "<application>ccache</application>">
-  <!ENTITY distcc "<application>distcc</application>">
-  <!ENTITY icecc "<application>icecc</application>">
-  <!ENTITY icemon "<application>icemon</application>">
-]>
-
-<refentry id="icecream">
-
-<refentryinfo>
-  <title>Icecream User's Manual</title>
-  <author>
-    <personname>
-      <firstname>Cornelius</firstname>
-      <surname>Schumacher</surname>
-    </personname>
-  </author>
-  <date>April 21th, 2005</date>
-  <productname>Icecream</productname>
-</refentryinfo>
-
-<refmeta>
-  <refentrytitle>icecream</refentrytitle>
-  <manvolnum>7</manvolnum>
-</refmeta>
-
-<refnamediv>
-  <refname>icecream</refname>
-  <refpurpose>A distributed compile system</refpurpose>
-</refnamediv>
-
-<refsect1>
-<title>Description</title>
-
-<para>Icecream is a distributed compile system for C and C++.</para>
-
-<para>Icecream is created by SUSE and is based on ideas and code by &distcc;. Like
-&distcc; it takes compile jobs from your build and distributes it to remote
-machines allowing a parallel build on several machines you have got. But unlike
-&distcc; Icecream uses a central server that schedules the compile jobs to the
-fastest free server and is as this dynamic. This advantage pays off mostly for
-shared computers, if you are the only user on X machines, you have full control
-over them anyway.</para>
-
-</refsect1>
-
-<refsect1>
-<title>How to use icecream</title>
-
-<para>You need:</para>
-<itemizedlist>
-<listitem>
-  <para>One machine that runs the scheduler
-  (<command>icecc-scheduler <option>-d</option></command>)</para>
-</listitem>
-<listitem>
-  <para>Many machines that run the daemon
-  (<command>iceccd <option>-d</option></command>)</para>
-</listitem>
-</itemizedlist>
-
-<para>If you want to compile using icecream, make sure
-<filename class="directory">$prefix/lib/icecc/bin</filename>
-is the first entry in your path, e.g. type
-<command>export PATH=/usr/lib/icecc/bin:$PATH</command>
-(Hint: put this in <filename>~/.bashrc</filename> or <filename>/etc/profile</filename>
-to not have to type it in everytime)
-</para>
-
-<para>Then you just compile with
-<command>make <option>-j <replaceable>num</replaceable></option></command>,
-where <parameter>num</parameter> is the amount of jobs you want to compile in parallel.
-Do not exaggerate. Too large numbers can overload your machine or the compile cluster
-and make the build in fact slower.</para>
-
-<para><warning>
-Never use icecream in untrusted environments. Run the daemons and
-the scheduler as unpriviliged user in such networks if you have to! But you will
-have to rely on homogeneous networks then (see below).
-</warning></para>
-
-<para>If you want an overview of your icecream compile cluster, or if you just want funny stats,
-you might want to run &icemon;.</para>
-</refsect1>
-
-<refsect1>
-<title>Using icecream in heterogeneous environments</title>
-
-<para>If you are running icecream daemons in the same icecream
-network but on machines with incompatible compiler versions, icecream needs to send
-your build environment to remote machines (note: they <emphasis>all</emphasis> must be running as
-root if compiled without libcap-ng support. In the future icecream might gain the ability to know when machines cannot
-accept a different environment, but for now it is all or nothing).</para>
-
-<para>Under normal circumstances this is handled transparently by the icecream
-daemon, which will prepare a tarball with the environment when needed.
-This is the recommended way, as the daemon will also automatically update
-the tarball whenever your compiler changes.</para>
-
-<para>If you want to handle this manually for some reason, you have to tell
-icecream which environment you are using. Use <command>icecc <option>--build-native</option></command> to
-create an archive file containing all the files necessary to setup the compiler
-environment. The file will have a random unique name like
-<filename>ddaea39ca1a7c88522b185eca04da2d8.tar.bz2</filename> per default. Rename it to something
-more expressive for your convenience, e.g. <filename>i386-3.3.1.tar.bz2</filename>. Set
-<command>ICECC_VERSION=<replaceable>filename_of_archive_containing_your_environment</replaceable></command>
-in the shell environment where you start the compile jobs and the file will be
-transferred to the daemons where your compile jobs run and installed to a chroot
-environment for executing the compile jobs in the environment fitting to the
-environment of the client. This requires that the icecream daemon runs as root.
-</para>
-
-</refsect1>
-
-<refsect1>
-<title>Cross-Compiling using icecream</title>
-
-<para>SUSE got quite some good machines not having a processor from Intel or
-AMD, so icecream is pretty good in using cross-compiler environments similar
-to the above way of spreading compilers. There the ICECC_VERSION variable looks
-like
-<literal>&lt;native_filename&gt;(,&lt;platform&gt;:&lt;cross_compiler_filename&gt;)*</literal>,
-for example like this:
-<literal>/work/9.1-i386.tar.bz2,ia64:/work/9.1-cross-ia64.tar.bz2</literal>
-</para>
-
-<para>How to package such a cross compiler is pretty straightforward if you look
-what is inside the tarballs generated by
-<command>icecc <option>--build-native</option></command>.</para>
-
-</refsect1>
-
-<refsect1>
-<title>Cross-Compiling for embedded targets using icecream</title>
-
-<para>When building for embedded targets like ARM often you will have a toolchain
-that runs on your host and produces code for the target. In these situations you
-can exploit the power of icecream as well.</para>
-
-<para>Create symlinks from where &icecc; is to the name of your cross compilers
-(e.g. <filename class="symlink">arm-linux-g++</filename> and
-<filename class="symlink">arm-linux-gcc</filename>), make sure that these symlinks are in the
-path and before the path of your toolchain, with <varname>$ICECC_CC</varname>
-and <varname>$ICECC_CXX</varname> you need to tell icecream which compilers to
-use for preprocessing and local compiling. e.g. set it to
-<command>ICECC_CC=arm-linux-gcc</command> and
-<command>ICECC_CXX=arm-linux-g++</command>.</para>
-
-<para>As the next step you need to create a <literal role="extension">.tar.bz2</literal>
-of your cross compiler,
-check the result of build-native to see what needs to be present.</para>
-
-<para>Finally one needs to set <varname>ICECC_VERSION</varname> and point it to
-the <literal role="extension">.tar.bz2</literal> you have created.
-When you start compiling your toolchain will be used.</para>
-
-<para><note>
-With <varname>ICECC_VERSION</varname> you point out on which
-platforms your toolchain runs, you do not indicate for which target code will be
-generated.
-</note></para>
-
-</refsect1>
-
-<refsect1>
-<title>Cross-Compiling for multiple targets in the same environment using icecream</title>
-
-<para>When working with toolchains for multiple targets, icecream can be
-configured to support multiple toolchains in the same environment.</para>
-
-<para>Multiple toolchains can be configured by appending =&lt;target&gt; to the
-tarball filename in the <varname>ICECC_VERSION</varname> variable. Where the &lt;target&gt; is
-the cross compiler prefix. There the <varname>ICECC_VERSION</varname> variable will look
-like &lt;native_filename&gt;(,&lt;platform&gt;:&lt;cross_compiler_filename&gt;=&lt;target&gt;)*.</para>
-
-<para>Below an example of how to configure icecream to use two toolchains,
-/work/toolchain1/bin/arm-eabi-[gcc,g++] and /work/toolchain2/bin/arm-linux-androideabi-[gcc,g++],
-for the same host architecture:</para>
-
-<itemizedlist>
-<listitem>
-    <para>Create symbolic links with the cross compilers names
-    (e.g. arm-eabi-[gcc,g++] and arm-linux-androideabi-[gcc,g++])
-    pointing to where the icecc binary is. Make sure these symbolic links are
-    in the $PATH and before the path of the toolchains.</para>
-</listitem>
-<listitem>
-    <para>Create a tarball file for each toolchain that you want to use with
-    icecream. The <filename>icecc-create-env</filename> script can be used to
-    create the tarball file for each toolchain, for example:
-    <command>icecc-create-env /work/toolchain1/bin/arm-eabi-gcc</command>
-    <command>icecc-create-env /work/toolchain2/bin/arm-linux-androideabi-gcc</command>.</para>
-</listitem>
-<listitem>
-    <para>Set <varname>ICECC_VERSION</varname> to point to the native tarball file and for each
-    tarball file created to the toolchains (e.g  <varname>ICECC_VERSION</varname>=/work/i386-native.tar.gz,/work/arm-eabi-toolchain1.tar.gz=arm-eabi,/work/arm-linux-androideabi-toolchain2.tar.gz=arm-linux-androideabi).</para>
-</listitem>
-</itemizedlist>
-
-<para>With these steps the icecrem will use <filename>/work/arm-eabi-toolchain1.tar.gz</filename>
-file to cross compilers with the prefix <literal>arm-eabi</literal>
-(e.g. <command>arm-eabi-gcc</command> and <command>arm-eabi-g++</command>), use
-<filename>/work/arm-linux-androideabi-toolchain2.tar.gz</filename>
-file to cross compilers with the prefix <literal>arm-linux-androideabi</literal>
-(e.g. <command>arm-linux-androideabi-gcc</command> and <command>arm-linux-androideabi-g++</command>)
-and use <filename>/work/i386-native.tar.gz</filename> file to compilers without prefix,
-the native compilers.</para>
-</refsect1>
-
-<refsect1>
-<title>How to combine icecream with &ccache;</title>
-
-<para>The easiest way to use &ccache; with icecream is to set <varname>CCACHE_PREFIX</varname>
-to &icecc; (the actual icecream client wrapper)
-
-<screen><command>export CCACHE_PREFIX=icecc</command></screen>
-</para>
-
-<para>This will make &ccache; prefix any compilation command it needs to do with icecc,
-making it use icecream for the compilation (but not for preprocessing alone).</para>
-
-<para>To actually use &ccache;, the mechanism is the same like with using icecream alone.
-Since &ccache; does not provide any symlinks in
-<filename class="directory">/opt/ccache/bin</filename>,
-you can create them manually:
-
-<screen>mkdir /opt/ccache/bin
-ln -s /usr/bin/ccache /opt/ccache/bin/gcc
-ln -s /usr/bin/ccache /opt/ccache/bin/g++</screen>
-</para>
-
-<para>And then compile with
-<screen>export PATH=/opt/ccache/bin:$PATH</screen>
-</para>
-
-<para>Note however that &ccache; is not really worth the trouble if you are not
-recompiling your project three times a day from scratch (it adds quite some overhead
-in comparing the preprocessor output and uses quite some disc space and I found
-a cache hit of 18% a bit too few, so I disabled it again).</para>
-
-</refsect1>
-
-<refsect1>
-<title>Debug output</title>
-
-<para>You can use the environment variable <varname>ICECC_DEBUG</varname> to
-control if icecream gives debug output or not. Set it to
-<literal>debug</literal> to get debug output. The other possible values are
-<literal>error</literal>, <literal>warning</literal> and <literal>info</literal>
-(the <option>-v</option> option for daemon and scheduler raise the level per
-<option>-v</option> on the command line - so use <option>-vvv</option>
-for full debug).</para>
-
-</refsect1>
-
-<refsect1>
-<title>Avoiding old hosts</title>
-
-<para>It is possible that compilation on some hosts fails because they are too old
-(typically the kernel on the remote host is too old for the glibc from the local host).
-Recent icecream versions should automatically detect this and avoid such hosts
-when compilation would fail. If some hosts are running old icecream versions and
-it is not possible to upgrade them for some reason, use
-
-<screen>export ICECC_IGNORE_UNVERIFIED=1</screen>
-</para>
-
-</refsect1>
-
-<refsect1>
-<title>Some Numbers</title>
-
-<para>
-Numbers of my test case (some STL C++ genetic algorithm)
-<itemizedlist>
-  <listitem>
-    <para><command>g++</command> on my machine: 1.6s</para>
-  </listitem>
-  <listitem>
-    <para><command>g++</command> on fast machine: 1.1s</para>
-  </listitem>
-  <listitem>
-    <para>icecream using my machine as remote machine: 1.9s</para>
-  </listitem>
-  <listitem>
-    <para>icecream using fast machine: 1.8s</para>
-  </listitem>
-</itemizedlist>
-</para>
-
-<para>The icecream overhead is quite huge as you might notice, but the compiler
-cannot interleave preprocessing with compilation and the file needs to be
-read/written once more and in between the file is transferred.</para>
-
-<para>But even if the other computer is faster, using <command>g++</command> on my local machine
-is faster. If you are (for whatever reason) alone in your network at some point,
-you lose all advantages of distributed compiling and only add the overhead. So
-icecream got a special case for local compilations (the same special meaning
-that localhost got within $DISTCC_HOSTS). This makes compiling on my machine
-using icecream down to 1.7s (the overhead is actually less than 0.1s in
-average).</para>
-
-<para>As the scheduler is aware of that meaning, it will prefer your own
-computer if it is free and got not less than 70% of the fastest available
-computer.</para>
-
-<para>Keep in mind, that this affects only the first compile job, the second one
-is distributed anyway. So if I had to compile two of my files, I would get
-<itemizedlist>
-  <listitem>
-    <para><command>g++ <option>-j1</option></command> on my machine: 3.2s</para>
-  </listitem>
-  <listitem>
-    <para><command>g++ <option>-j1</option></command> on the fast machine: 2.2s</para>
-  </listitem>
-  <listitem>
-    <para>using icecream <option>-j2</option> on my machine: max(1.7,1.8)=1.8s</para>
-  </listitem>
-  <listitem>
-    <para>(using icecream <option>-j2</option> on the other machine: max(1.1,1.8)=1.8s)</para>
-  </listitem>
-</itemizedlist>
-</para>
-
-<para>The math is a bit tricky and depends a lot on the current state of the
-compilation network, but make sure you are not blindly assuming
-<command>make <option>-j2</option></command> halves your compilation time.</para>
-
-</refsect1>
-
-<refsect1>
-<title>What is the best environment for icecream</title>
-
-<para>In most requirements icecream is not special, e.g. it does not matter what
-distributed compile system you use, you will not have fun if your nodes are
-connected through than less or equal to 10MBit. Note that icecream compresses
-input and output files (using <literal>lzo</literal>), so you can calc with ~1MBit per compile job
-- i.e. more than <command>make <option>-j10</option></command> will not
-be possible without delays.</para>
-
-<para>Remember that more machines are only good if you can use massive
-parallelization, but you will for sure get the best result if your submitting
-machine (the one you called <command>g++</command> on) will be fast enough to feed the others.
-Especially if your project consists of many easy to compile files, the
-preprocessing and file I/O will be job enough to need a quick machine.</para>
-
-<para>The scheduler will try to give you the fastest machines available, so even
-if you add old machines, they will be used only in exceptional situations, but
-still you can have bad luck - the scheduler does not know how long a job will
-take before it started. So if you have 3 machines and two quick to compile and
-one long to compile source file, you are not safe from a choice where everyone
-has to wait on the slow machine. Keep that in mind.</para>
-
-</refsect1>
-
-<refsect1>
-<title>Network setup for Icecream (firewalls)</title>
-
-<para>A short overview of the ports icecream requires:
- <itemizedlist>
-  <listitem>
-    <para>TCP/10245 on the daemon computers (required)</para>
-  </listitem>
-  <listitem>
-    <para>TCP/8765 for the the scheduler computer (required)</para>
-  </listitem>
-  <listitem>
-    <para>TCP/8766 for the telnet interface to the scheduler (optional)</para>
-  </listitem>
-  <listitem>
-    <para>UDP/8765 for broadcast to find the scheduler (optional)</para>
-  </listitem>
-</itemizedlist>
-</para>
-
-<para>If the monitor cannot find the scheduler, use
-<command>ICECC_SCHEDULER=<replaceable>host</replaceable> icemon</command>.</para>
-
-</refsect1>
-
-
-<refsect1>
-<title>See Also</title>
-<para>icecc-scheduler(1), iceccd(1), icemon(1)</para>
-</refsect1>
-
-<refsect1>
-<title>Icecream Authors</title>
-<para>Stephan Kulow &lt;coolo@suse.de&gt;</para>
-<para>Michael Matz &lt;matz@suse.de&gt;</para>
-<para>Cornelius Schumacher &lt;cschum@suse.de&gt;</para>
-<para>...and various other contributors.</para>
-</refsect1>
-</refentry>
diff --git a/doc/man-icerun.1.xml b/doc/man-icerun.1.xml
deleted file mode 100644
index 03d606d95..000000000
--- a/doc/man-icerun.1.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" ?>
-<!-- vim:set ts=4 noet syntax=xml: -->
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
-[
-  <!ENTITY icerun "<application>icerun</application>">
-]>
-
-<refentry id="icerun">
-
-<refentryinfo>
-  <title>Icecream User's Manual</title>
-  <author>
-    <personname>
-      <firstname>Cornelius</firstname>
-      <surname>Schumacher</surname>
-    </personname>
-  </author>
-  <date>April 21th, 2005</date>
-  <productname>Icecream</productname>
-</refentryinfo>
-
-<refmeta>
-  <refentrytitle>icerun</refentrytitle>
-  <manvolnum>1</manvolnum>
-</refmeta>
-
-<refnamediv>
-  <refname>icerun</refname>
-  <refpurpose>Icecream custom command wrapper</refpurpose>
-</refnamediv>
-
-<refsynopsisdiv>
-<cmdsynopsis>
-<command>icerun</command>
-<arg><replaceable>command</replaceable></arg>
-<arg><replaceable>command options</replaceable></arg>
-</cmdsynopsis>
-</refsynopsisdiv>
-
-<refsect1>
-<title>Description</title>
-<para>&icerun; is the Icecream custom command wrapper. It simply executes the passed
-command, but limits the number of parallel invocations the same way local compilations
-are limited. Since builds using Icecream usually require increasing the parallelism
-of a build, wrapping custom resource-demanding commands this way prevents these
-commnads from overloading the system.</para>
-</refsect1>
-
-<refsect1>
-<title>See Also</title>
-<para>icecream(7), icecc(1), icecc-scheduler(1), iceccd(1), icemon(1)</para>
-</refsect1>
-
-<refsect1>
-<title>Author</title>
-<para>Cornelius Schumacher</para>
-</refsect1>
-</refentry>
