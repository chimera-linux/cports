commit c3c7eb401233aea5bc476117b99ac9c80c629c3d
Author: Daniel Kolesa <daniel@octaforge.org>
Date:   Tue May 16 01:12:53 2023 +0200

    use qt6 for launcher/wizard

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 705b95f..90a634f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -198,10 +198,14 @@ find_package(OpenGL REQUIRED)
 find_package(LZ4 REQUIRED)
 
 if (USE_QT)
-    find_package(Qt5Core 5.12 REQUIRED)
-    find_package(Qt5Widgets REQUIRED)
-    find_package(Qt5Network REQUIRED)
-    find_package(Qt5OpenGL REQUIRED)
+    find_package(Qt5 5.15 COMPONENTS Core Widgets Network OpenGL)
+    if (Qt5_FOUND)
+        message(STATUS "Using Qt5")
+    else()
+        find_package(Qt6 6.4 COMPONENTS Core Widgets Network OpenGL REQUIRED)
+        message(STATUS "Using Qt6")
+        message(STATUS "Warning: Qt6 support is experimental and incomplete")
+    endif()
     # Instruct CMake to run moc automatically when needed.
     #set(CMAKE_AUTOMOC ON)
 endif()
@@ -688,7 +692,7 @@ if (OPENMW_OSX_DEPLOYMENT AND APPLE)
         message(FATAL_ERROR "macOS packaging is broken in early CMake 3.13 releases, see https://gitlab.com/OpenMW/openmw/issues/4767. Please use at least 3.13.4 or an older version like 3.12.4")
     endif ()
 
-    get_property(QT_COCOA_PLUGIN_PATH TARGET Qt5::QCocoaIntegrationPlugin PROPERTY LOCATION_RELEASE)
+    get_property(QT_COCOA_PLUGIN_PATH TARGET Qt::QCocoaIntegrationPlugin PROPERTY LOCATION_RELEASE)
     get_filename_component(QT_COCOA_PLUGIN_DIR "${QT_COCOA_PLUGIN_PATH}" DIRECTORY)
     get_filename_component(QT_COCOA_PLUGIN_GROUP "${QT_COCOA_PLUGIN_DIR}" NAME)
     get_filename_component(QT_COCOA_PLUGIN_NAME "${QT_COCOA_PLUGIN_PATH}" NAME)
diff --git a/apps/launcher/CMakeLists.txt b/apps/launcher/CMakeLists.txt
index 3018237..6e92ab8 100644
--- a/apps/launcher/CMakeLists.txt
+++ b/apps/launcher/CMakeLists.txt
@@ -35,24 +35,6 @@ set(LAUNCHER_HEADER
     utils/openalutil.hpp
 )
 
-# Headers that must be pre-processed
-set(LAUNCHER_HEADER_MOC
-    datafilespage.hpp
-    graphicspage.hpp
-    maindialog.hpp
-    playpage.hpp
-    textslotmsgbox.hpp
-    settingspage.hpp
-    advancedpage.hpp
-
-    utils/cellnameloader.hpp
-    utils/textinputdialog.hpp
-    utils/profilescombobox.hpp
-    utils/lineedit.hpp
-    utils/openalutil.hpp
-
-)
-
 set(LAUNCHER_UI
     ${CMAKE_SOURCE_DIR}/files/ui/datafilespage.ui
     ${CMAKE_SOURCE_DIR}/files/ui/graphicspage.ui
@@ -73,9 +55,8 @@ if(WIN32)
     set(QT_USE_QTMAIN TRUE)
 endif(WIN32)
 
-QT5_ADD_RESOURCES(RCC_SRCS ${CMAKE_SOURCE_DIR}/files/launcher/launcher.qrc)
-QT5_WRAP_CPP(MOC_SRCS ${LAUNCHER_HEADER_MOC})
-QT5_WRAP_UI(UI_HDRS ${LAUNCHER_UI})
+QT_ADD_RESOURCES(RCC_SRCS ${CMAKE_SOURCE_DIR}/files/launcher/launcher.qrc)
+QT_WRAP_UI(UI_HDRS ${LAUNCHER_UI})
 
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 if(NOT WIN32)
@@ -102,11 +83,13 @@ target_link_libraries(openmw-launcher
     components
 )
 
-target_link_libraries(openmw-launcher Qt5::Widgets Qt5::Core)
+target_link_libraries(openmw-launcher Qt::Widgets Qt::Core)
 
 if (BUILD_WITH_CODE_COVERAGE)
   add_definitions (--coverage)
   target_link_libraries(openmw-launcher gcov)
 endif()
 
-
+if(USE_QT)
+    set_property(TARGET openmw-launcher PROPERTY AUTOMOC ON)
+endif(USE_QT)
diff --git a/apps/wizard/CMakeLists.txt b/apps/wizard/CMakeLists.txt
index 10e06d1..62bff31 100644
--- a/apps/wizard/CMakeLists.txt
+++ b/apps/wizard/CMakeLists.txt
@@ -34,21 +34,6 @@ set(WIZARD_HEADER
     utils/componentlistwidget.hpp
 )
 
-# Headers that must be pre-processed
-set(WIZARD_HEADER_MOC
-    componentselectionpage.hpp
-    conclusionpage.hpp
-    existinginstallationpage.hpp
-    importpage.hpp
-    installationtargetpage.hpp
-    intropage.hpp
-    languageselectionpage.hpp
-    mainwizard.hpp
-    methodselectionpage.hpp
-
-    utils/componentlistwidget.hpp
-)
-
 set(WIZARD_UI
     ${CMAKE_SOURCE_DIR}/files/ui/wizard/componentselectionpage.ui
     ${CMAKE_SOURCE_DIR}/files/ui/wizard/conclusionpage.ui
@@ -63,7 +48,6 @@ set(WIZARD_UI
 if (OPENMW_USE_UNSHIELD)
     set (WIZARD ${WIZARD} installationpage.cpp unshield/unshieldworker.cpp)
     set (WIZARD_HEADER ${WIZARD_HEADER} installationpage.hpp unshield/unshieldworker.hpp)
-    set (WIZARD_HEADER_MOC ${WIZARD_HEADER_MOC} installationpage.hpp unshield/unshieldworker.hpp)
     set (WIZARD_UI ${WIZARD_UI} ${CMAKE_SOURCE_DIR}/files/ui/wizard/installationpage.ui)
     add_definitions(-DOPENMW_USE_UNSHIELD)
 endif (OPENMW_USE_UNSHIELD)
@@ -79,9 +63,8 @@ if(WIN32)
     set(QT_USE_QTMAIN TRUE)
 endif(WIN32)
 
-QT5_ADD_RESOURCES(RCC_SRCS ${CMAKE_SOURCE_DIR}/files/wizard/wizard.qrc)
-QT5_WRAP_CPP(MOC_SRCS ${WIZARD_HEADER_MOC})
-QT5_WRAP_UI(UI_HDRS ${WIZARD_UI})
+QT_ADD_RESOURCES(RCC_SRCS ${CMAKE_SOURCE_DIR}/files/wizard/wizard.qrc)
+QT_WRAP_UI(UI_HDRS ${WIZARD_UI})
 
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 
@@ -102,7 +85,7 @@ target_link_libraries(openmw-wizard
     components
 )
 
-target_link_libraries(openmw-wizard Qt5::Widgets Qt5::Core)
+target_link_libraries(openmw-wizard Qt::Widgets Qt::Core)
 
 if (OPENMW_USE_UNSHIELD)
     target_link_libraries(openmw-wizard ${LIBUNSHIELD_LIBRARIES})
@@ -125,3 +108,7 @@ endif()
 if (WIN32)
     INSTALL(TARGETS openmw-wizard RUNTIME DESTINATION ".")
 endif(WIN32)
+
+if(USE_QT)
+    set_property(TARGET openmw-wizard PROPERTY AUTOMOC ON)
+endif(USE_QT)
diff --git a/cmake/OpenMWMacros.cmake b/cmake/OpenMWMacros.cmake
index 1621a08..cd165a7 100644
--- a/cmake/OpenMWMacros.cmake
+++ b/cmake/OpenMWMacros.cmake
@@ -80,10 +80,6 @@ foreach (f ${ALL})
 list (APPEND files "${f}")
 list (APPEND COMPONENT_FILES "${f}")
 endforeach (f)
-file (GLOB MOC_H "${dir}/${u}.hpp")
-foreach (fi ${MOC_H})
-list (APPEND COMPONENT_MOC_FILES "${fi}")
-endforeach (fi)
 endforeach (u)
 source_group ("components\\${dir}" FILES ${files})
 endmacro (add_component_qt_dir)
@@ -99,7 +95,6 @@ endmacro (add_unit)
 
 macro (add_qt_unit project dir unit)
 add_file (${project} _HDR ${comp} "${dir}/${unit}.hpp")
-add_file (${project} _HDR_QT ${comp} "${dir}/${unit}.hpp")
 add_file (${project} _SRC ${comp} "${dir}/${unit}.cpp")
 endmacro (add_qt_unit)
 
@@ -109,7 +104,6 @@ endmacro (add_hdr)
 
 macro (add_qt_hdr project dir unit)
 add_file (${project} _HDR ${comp} "${dir}/${unit}.hpp")
-add_file (${project} _HDR_QT ${comp} "${dir}/${unit}.hpp")
 endmacro (add_qt_hdr)
 
 macro (opencs_units dir)
diff --git a/components/CMakeLists.txt b/components/CMakeLists.txt
index 7860f49..4e56c7f 100644
--- a/components/CMakeLists.txt
+++ b/components/CMakeLists.txt
@@ -210,8 +210,7 @@ if (USE_QT)
         helpviewer
         )
 
-    QT5_WRAP_UI(ESM_UI_HDR ${ESM_UI})
-    QT5_WRAP_CPP(MOC_SRCS ${COMPONENT_MOC_FILES})
+    QT_WRAP_UI(ESM_UI_HDR ${ESM_UI})
 endif()
 
 if (CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
@@ -222,7 +221,7 @@ endif ()
 
 include_directories(${BULLET_INCLUDE_DIRS} ${CMAKE_CURRENT_BINARY_DIR})
 
-add_library(components STATIC ${COMPONENT_FILES} ${MOC_SRCS} ${ESM_UI_HDR})
+add_library(components STATIC ${COMPONENT_FILES} ${ESM_UI_HDR})
 
 target_link_libraries(components
     # CMake's built-in OSG finder does not use pkgconfig, so we have to
@@ -265,7 +264,7 @@ if (WIN32)
 endif()
 
 if (USE_QT)
-    target_link_libraries(components Qt5::Widgets Qt5::Core)
+    target_link_libraries(components Qt::Widgets Qt::Core)
 endif()
 
 if (GIT_CHECKOUT)
@@ -291,3 +290,7 @@ endif()
 set(COMPONENT_FILES ${COMPONENT_FILES} PARENT_SCOPE)
 
 target_compile_definitions(components PUBLIC BT_USE_DOUBLE_PRECISION)
+
+if(USE_QT)
+    set_property(TARGET components PROPERTY AUTOMOC ON)
+endif(USE_QT)
