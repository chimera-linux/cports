diff --git a/deps/ada/ada.cpp b/deps/ada/ada.cpp
index 8b2cdd38..c7f6fe4f 100644
--- a/deps/ada/ada.cpp
+++ b/deps/ada/ada.cpp
@@ -125,7 +125,7 @@ namespace ada::checkers {
 namespace ada::unicode {
 
   constexpr bool to_lower_ascii(char * input, size_t length) noexcept {
-    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101 * v; };
+    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101ULL * v; };
     uint64_t broadcast_80 = broadcast(0x80);
     uint64_t broadcast_Ap = broadcast(128 - 'A');
     uint64_t broadcast_Zp = broadcast(128 - 'Z');
@@ -153,7 +153,7 @@ namespace ada::unicode {
     auto has_zero_byte = [](uint64_t v) {
       return ((v - 0x0101010101010101) & ~(v)&0x8080808080808080);
     };
-    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101 * v; };
+    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101ULL * v; };
     size_t i = 0;
     uint64_t mask1 = broadcast('\r');
     uint64_t mask2 = broadcast('\n');
@@ -883,9 +883,9 @@ namespace ada::helpers {
       return ((v - 0x0101010101010101) & ~(v)&0x8080808080808080);
     };
     auto index_of_first_set_byte = [](uint64_t v) {
-      return ((((v - 1) & 0x101010101010101) * 0x101010101010101) >> 56) - 1;
+      return ((((v - 1) & 0x101010101010101ULL) * 0x101010101010101ULL) >> 56) - 1;
     };
-    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101 * v; };
+    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101ULL * v; };
     size_t i = location;
     uint64_t mask1 = broadcast(':');
     uint64_t mask2 = broadcast('/');
@@ -940,9 +940,9 @@ namespace ada::helpers {
       return ((v - 0x0101010101010101) & ~(v)&0x8080808080808080);
     };
     auto index_of_first_set_byte = [](uint64_t v) {
-      return ((((v - 1) & 0x101010101010101) * 0x101010101010101) >> 56) - 1;
+      return ((((v - 1) & 0x101010101010101ULL) * 0x101010101010101ULL) >> 56) - 1;
     };
-    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101 * v; };
+    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101ULL * v; };
     size_t i = location;
     uint64_t mask1 = broadcast(':');
     uint64_t mask2 = broadcast('/');
@@ -1196,9 +1196,9 @@ namespace ada::helpers {
       return ((v - 0x0101010101010101) & ~(v)&0x8080808080808080);
     };
     auto index_of_first_set_byte = [](uint64_t v) {
-      return ((((v - 1) & 0x101010101010101) * 0x101010101010101) >> 56) - 1;
+      return ((((v - 1) & 0x101010101010101ULL) * 0x101010101010101ULL) >> 56) - 1;
     };
-    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101 * v; };
+    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101ULL * v; };
     size_t i = 0;
     uint64_t mask1 = broadcast('@');
     uint64_t mask2 = broadcast('/');
@@ -1241,9 +1241,9 @@ namespace ada::helpers {
       return ((v - 0x0101010101010101) & ~(v)&0x8080808080808080);
     };
     auto index_of_first_set_byte = [](uint64_t v) {
-      return ((((v - 1) & 0x101010101010101) * 0x101010101010101) >> 56) - 1;
+      return ((((v - 1) & 0x101010101010101ULL) * 0x101010101010101ULL) >> 56) - 1;
     };
-    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101 * v; };
+    auto broadcast = [](uint8_t v) -> uint64_t { return 0x101010101010101ULL * v; };
     size_t i = 0;
     uint64_t mask1 = broadcast('@');
     uint64_t mask2 = broadcast('/');
