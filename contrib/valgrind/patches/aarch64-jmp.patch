commit de31dd3190f5c87ab0cbee2133b493213b99c3d1
Author: q66 <q66@chimera-linux.org>
Date:   Tue Oct 24 17:07:19 2023 +0200

    add arm64 setjmp/longmp
    
    This is to prevent the fallback to __builtin_setjmp/longjmp
    which does not work with aarch64 clang.

diff --git a/coregrind/m_libcsetjmp.c b/coregrind/m_libcsetjmp.c
index 4f1ecb1..96398a5 100644
--- a/coregrind/m_libcsetjmp.c
+++ b/coregrind/m_libcsetjmp.c
@@ -741,6 +741,49 @@ __asm__(
 );
 #endif  /* VGP_nanomips_linux */
 
+#if defined(VGP_arm64_linux)
+__asm__(
+".text"  "\n"
+""       "\n"
+".global VG_MINIMAL_SETJMP" "\n"
+"VG_MINIMAL_SETJMP:" "\n"
+"  stp x19, x20, [x0,#0]" "\n"
+"  stp x21, x22, [x0,#16]" "\n"
+"  stp x23, x24, [x0,#32]" "\n"
+"  stp x25, x26, [x0,#48]" "\n"
+"  stp x27, x28, [x0,#64]" "\n"
+"  stp x29, x30, [x0,#80]" "\n"
+"  mov x2, sp" "\n"
+"  str x2, [x0,#104]" "\n"
+"  stp  d8,  d9, [x0,#112]" "\n"
+"  stp d10, d11, [x0,#128]" "\n"
+"  stp d12, d13, [x0,#144]" "\n"
+"  stp d14, d15, [x0,#160]" "\n"
+"  mov x0, #0" "\n"
+"  ret" "\n"
+"\n"
+".global VG_MINIMAL_LONGJMP" "\n"
+"VG_MINIMAL_LONGJMP:" "\n"
+"  ldp x19, x20, [x0,#0]" "\n"
+"  ldp x21, x22, [x0,#16]" "\n"
+"  ldp x23, x24, [x0,#32]" "\n"
+"  ldp x25, x26, [x0,#48]" "\n"
+"  ldp x27, x28, [x0,#64]" "\n"
+"  ldp x29, x30, [x0,#80]" "\n"
+"  ldr x2, [x0,#104]" "\n"
+"  mov sp, x2" "\n"
+"  ldp d8 , d9, [x0,#112]" "\n"
+"  ldp d10, d11, [x0,#128]" "\n"
+"  ldp d12, d13, [x0,#144]" "\n"
+"  ldp d14, d15, [x0,#160]" "\n"
+"  cmp w1, 0" "\n"
+"  csinc w0, w1, wzr, ne" "\n"
+"  br x30" "\n"
+"\n"
+".previous" "\n"
+);
+#endif
+
 /*--------------------------------------------------------------------*/
 /*--- end                                                          ---*/
 /*--------------------------------------------------------------------*/
diff --git a/include/pub_tool_libcsetjmp.h b/include/pub_tool_libcsetjmp.h
index 6b278d2..680c0a4 100644
--- a/include/pub_tool_libcsetjmp.h
+++ b/include/pub_tool_libcsetjmp.h
@@ -126,6 +126,14 @@ UWord VG_MINIMAL_SETJMP(VG_MINIMAL_JMP_BUF(_env));
 __attribute__((noreturn))
 void  VG_MINIMAL_LONGJMP(VG_MINIMAL_JMP_BUF(_env));
 
+#elif defined(VGP_arm64_linux)
+
+#define VG_MINIMAL_JMP_BUF(_name)        ULong _name [176 / sizeof(ULong)]
+__attribute__((returns_twice))
+UWord VG_MINIMAL_SETJMP(VG_MINIMAL_JMP_BUF(_env));
+__attribute__((noreturn))
+void  VG_MINIMAL_LONGJMP(VG_MINIMAL_JMP_BUF(_env));
+
 #else
 
 /* The default implementation. */
