From 0724ca48bfbf9588118af2a2dc9d790f728783b7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=A9bastien=20Noel?= <sebastien@twolife.be>
Date: Wed, 1 Feb 2023 14:30:05 +0100
Subject: [PATCH 1/2] Port from libsoup2 to libsoup3

---
 CMakeScripts/DefineDependsandFlags.cmake |  2 +-
 src/io/http.cpp                          | 46 +++++++++++++++++-------
 2 files changed, 35 insertions(+), 13 deletions(-)

diff --git a/CMakeScripts/DefineDependsandFlags.cmake b/CMakeScripts/DefineDependsandFlags.cmake
index de815251bf4..5c65c654f3c 100644
--- a/CMakeScripts/DefineDependsandFlags.cmake
+++ b/CMakeScripts/DefineDependsandFlags.cmake
@@ -127,7 +127,7 @@ pkg_check_modules(INKSCAPE_DEP REQUIRED
                   fontconfig
                   gsl
                   gmodule-2.0
-                  libsoup-2.4>=2.42
+                  libsoup-3.0
                   #double-conversion
                   bdw-gc #boehm-demers-weiser gc
                   lcms2)
diff --git a/src/io/http.cpp b/src/io/http.cpp
index 6f28db7e4bb..8f8a99d8749 100644
--- a/src/io/http.cpp
+++ b/src/io/http.cpp
@@ -37,14 +37,14 @@ namespace Inkscape {
 namespace IO {
 namespace HTTP {
 
-void _save_data_as_file(Glib::ustring filename, const char *result) {
+void _save_data_as_file(Glib::ustring filename, GBytes *result) {
     FILE *fileout = Inkscape::IO::fopen_utf8name(filename.c_str(), "wb");
     if (!fileout) {
         g_warning("HTTP Cache: Can't open %s for write.", filename.c_str());
         return;
     }
 
-    fputs(result, fileout);
+    fputs((const char*)g_bytes_get_data(result, NULL), fileout);
     fflush(fileout);
     if (ferror(fileout)) {
         g_warning("HTTP Cache: Error writing data to %s.", filename.c_str());
@@ -53,9 +53,22 @@ void _save_data_as_file(Glib::ustring filename, const char *result) {
     fclose(fileout);
 }
 
-void _get_file_callback(SoupSession *session, SoupMessage *msg, gpointer user_data) {
+void _get_file_callback(SoupSession *session,  GAsyncResult *result, gpointer user_data) {
     auto data = static_cast<std::pair<callback, Glib::ustring>*>(user_data);
-    data->first(data->second);
+    GError *error = NULL;
+    SoupMessage *msg = soup_session_get_async_result_message(session, result);
+    SoupStatus status = soup_message_get_status(msg);
+    GBytes *body = soup_session_send_and_read_finish (session, result, &error);
+    if (error == NULL && SOUP_STATUS_IS_SUCCESSFUL(status)) {
+        g_debug("HTTP Cache saved to: %s", data->second);
+        _save_data_as_file(data->second, body);
+        data->first(data->second);
+    } else if(error) {
+        g_warning("Can't download %s : %s", g_uri_to_string(soup_message_get_uri(msg)), error->message);
+        g_clear_error(&error);
+    } else {
+        g_warning("Can't download %s : %s", g_uri_to_string(soup_message_get_uri(msg)), soup_status_get_phrase(status));
+    }
     delete data;
 }
 
@@ -77,8 +90,8 @@ void _get_file_callback(SoupSession *session, SoupMessage *msg, gpointer user_da
  */
 Glib::ustring get_file(Glib::ustring uri, unsigned int timeout, callback func) {
 
-    SoupURI *s_uri = soup_uri_new(uri.c_str());
-    std::string path = std::string(soup_uri_decode(soup_uri_get_path(s_uri)));
+    GUri *s_uri = g_uri_parse(uri.c_str(), G_URI_FLAGS_NONE, NULL);
+    std::string path = std::string(g_uri_unescape_string(g_uri_get_path(s_uri), NULL));
     std::string filepart;
 
     // Parse the url into a filename suitable for caching.
@@ -116,21 +129,30 @@ Glib::ustring get_file(Glib::ustring uri, unsigned int timeout, callback func) {
 
 #ifdef DEBUG_HTTP
     SoupLogger *logger;
-    logger = soup_logger_new(SOUP_LOGGER_LOG_BODY, -1);
+    logger = soup_logger_new(SOUP_LOGGER_LOG_BODY);
     soup_session_add_feature(session, SOUP_SESSION_FEATURE (logger));
     g_object_unref (logger);
 #endif
 
     if(func) {
         auto *user_data = new std::pair<callback, Glib::ustring>(func, filename);
-        soup_session_queue_message(session, msg, _get_file_callback, user_data);
+        soup_session_send_and_read_async(session, msg,
+                                    G_PRIORITY_DEFAULT,
+                                    NULL,
+                                    (GAsyncReadyCallback)_get_file_callback,
+                                    user_data);
     } else {
-        guint status = soup_session_send_message (session, msg);
-        if(status == SOUP_STATUS_OK) {
+        GError *error = NULL;
+        GBytes *body = soup_session_send_and_read (session, msg, NULL, &error);
+        SoupStatus status = soup_message_get_status(msg);
+        if (error == NULL && SOUP_STATUS_IS_SUCCESSFUL(status)) {
             g_debug("HTTP Cache saved to: %s", filename.c_str());
-            _save_data_as_file(filename, msg->response_body->data);
+            _save_data_as_file(filename, body);
+        } else if(error) {
+            g_warning("Can't download %s : %s", uri.c_str(), error->message);
+            g_clear_error(&error);
         } else {
-            g_warning("Can't download %s", uri.c_str());
+            g_warning("Can't download %s : %s", uri.c_str(), soup_status_get_phrase(status));
         }
     }
     return filename;
-- 
GitLab


From c6df96cdde27ef63e731001f5730b47de96a746a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=A9bastien=20Noel?= <sebastien@twolife.be>
Date: Mon, 27 Feb 2023 20:42:17 +0100
Subject: [PATCH 2/2] fixup! Port from libsoup2 to libsoup3

---
 src/io/http.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/io/http.cpp b/src/io/http.cpp
index 8f8a99d8749..f8713b56650 100644
--- a/src/io/http.cpp
+++ b/src/io/http.cpp
@@ -60,7 +60,7 @@ void _get_file_callback(SoupSession *session,  GAsyncResult *result, gpointer us
     SoupStatus status = soup_message_get_status(msg);
     GBytes *body = soup_session_send_and_read_finish (session, result, &error);
     if (error == NULL && SOUP_STATUS_IS_SUCCESSFUL(status)) {
-        g_debug("HTTP Cache saved to: %s", data->second);
+        g_debug("HTTP Cache saved to: %s", data->second.c_str());
         _save_data_as_file(data->second, body);
         data->first(data->second);
     } else if(error) {
-- 
GitLab

