From b4bf56504af902c2f0a721c4d1862325cd97bcdc Mon Sep 17 00:00:00 2001
From: Jens Reidel <adrian@travitia.xyz>
Date: Mon, 14 Apr 2025 20:52:55 +0200
Subject: [PATCH] Fix build for 32-bit targets

Signed-off-by: Jens Reidel <adrian@travitia.xyz>
---
 internal/output/prometheusrw/remote/client.go            | 2 +-
 output/cloud/expv2/metrics_client.go                     | 2 +-
 vendor/github.com/grafana/xk6-dashboard/dashboard/sse.go | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/internal/output/prometheusrw/remote/client.go b/internal/output/prometheusrw/remote/client.go
index 43a9932..fcd2702 100644
--- a/internal/output/prometheusrw/remote/client.go
+++ b/internal/output/prometheusrw/remote/client.go
@@ -128,7 +128,7 @@ func newWriteRequestBody(series []*prompb.TimeSeries) ([]byte, error) {
 	}
 	if snappy.MaxEncodedLen(len(b)) < 0 {
 		return nil, fmt.Errorf("the protobuf message is too large to be handled by Snappy encoder; "+
-			"size: %d, limit: %d", len(b), math.MaxUint32)
+			"size: %d, limit: %d", len(b), uint32(math.MaxUint32))
 	}
 	return snappy.Encode(nil, b), nil
 }
diff --git a/output/cloud/expv2/metrics_client.go b/output/cloud/expv2/metrics_client.go
index e46f13c..367f6d2 100644
--- a/output/cloud/expv2/metrics_client.go
+++ b/output/cloud/expv2/metrics_client.go
@@ -86,7 +86,7 @@ func newRequestBody(data *pbcloud.MetricSet) ([]byte, error) {
 	// https://pkg.go.dev/github.com/klauspost/compress/snappy#NewBufferedWriter
 	if snappy.MaxEncodedLen(len(b)) < 0 {
 		return nil, fmt.Errorf("the Protobuf message is too large to be handled by Snappy encoder; "+
-			"size: %d, limit: %d", len(b), 0xffffffff)
+			"size: %d, limit: %d", len(b), uint32(0xffffffff))
 	}
 	return snappy.Encode(nil, b), nil
 }
diff --git a/vendor/github.com/grafana/xk6-dashboard/dashboard/sse.go b/vendor/github.com/grafana/xk6-dashboard/dashboard/sse.go
index 9282025..9504de4 100644
--- a/vendor/github.com/grafana/xk6-dashboard/dashboard/sse.go
+++ b/vendor/github.com/grafana/xk6-dashboard/dashboard/sse.go
@@ -66,7 +66,7 @@ func (emitter *eventEmitter) onEvent(name string, data interface{}) {
 	var retry []byte
 
 	if name == stopEvent {
-		retry = []byte(strconv.Itoa(maxSafeInteger))
+		retry = []byte(strconv.FormatInt(maxSafeInteger, 10))
 	}
 
 	id := strconv.FormatInt(emitter.id.Add(1), 10)
-- 
2.49.0

