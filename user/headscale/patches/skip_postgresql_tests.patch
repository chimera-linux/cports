these tests require a postgresql installation

diff -ruN a/hscontrol/db/db_test.go b/hscontrol/db/db_test.go
--- a/hscontrol/db/db_test.go	2025-01-30 14:59:30.000000000 +0100
+++ b/hscontrol/db/db_test.go	2025-02-06 20:10:45.435984307 +0100
@@ -6,7 +6,6 @@
 	"io"
 	"net/netip"
 	"os"
-	"os/exec"
 	"path/filepath"
 	"slices"
 	"sort"
@@ -365,10 +364,6 @@
 	}
 
 	for _, tt := range tests {
-		t.Run(tt.name+"-postgres", func(t *testing.T) {
-			db := newPostgresTestDB(t)
-			tt.run(t, db.DB.Debug())
-		})
 		t.Run(tt.name+"-sqlite", func(t *testing.T) {
 			db, err := newSQLiteTestDB()
 			if err != nil {
@@ -376,61 +371,6 @@
 			}
 
 			tt.run(t, db.DB.Debug())
-		})
-	}
-}
-
-func TestMigrationsPostgres(t *testing.T) {
-	tests := []struct {
-		name     string
-		dbPath   string
-		wantFunc func(*testing.T, *HSDatabase)
-	}{
-		{
-			name:   "user-idx-breaking",
-			dbPath: "testdata/pre-24-postgresdb.pssql.dump",
-			wantFunc: func(t *testing.T, h *HSDatabase) {
-				users, err := Read(h.DB, func(rx *gorm.DB) ([]types.User, error) {
-					return ListUsers(rx)
-				})
-				require.NoError(t, err)
-
-				for _, user := range users {
-					assert.NotEmpty(t, user.Name)
-					assert.Empty(t, user.ProfilePicURL)
-					assert.Empty(t, user.Email)
-				}
-			},
-		},
-	}
-
-	for _, tt := range tests {
-		t.Run(tt.name, func(t *testing.T) {
-			u := newPostgresDBForTest(t)
-
-			pgRestorePath, err := exec.LookPath("pg_restore")
-			if err != nil {
-				t.Fatal("pg_restore not found in PATH. Please install it and ensure it is accessible.")
-			}
-
-			// Construct the pg_restore command
-			cmd := exec.Command(pgRestorePath, "--verbose", "--if-exists", "--clean", "--no-owner", "--dbname", u.String(), tt.dbPath)
-
-			// Set the output streams
-			cmd.Stdout = os.Stdout
-			cmd.Stderr = os.Stderr
-
-			// Execute the command
-			err = cmd.Run()
-			if err != nil {
-				t.Fatalf("failed to restore postgres database: %s", err)
-			}
-
-			db = newHeadscaleDBFromPostgresURL(t, u)
-
-			if tt.wantFunc != nil {
-				tt.wantFunc(t, db)
-			}
 		})
 	}
 }
